{"/mnt/fit-Knowledgezoo/Github_repos_download/data/hfitzke@LearningPython/02-loop.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/keijak@udemy-pydata/Lec36.ipynb": {"API": [], "module": ["matplotlib", "pandas_datareader", "scipy", "pandas", "seaborn", "numpy", "requests", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mat-esp-2015@python-intro-2-joao_leticia_dyellen/jupyter-notebook-tour.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/TokyoIndex@dlnd_your_first_network/dlnd-your-first-neural-network.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/adrianaarangol@Entrega-taller-1/Taller Adriana Arango L.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/michaelmangia@my_first_repository/Code Practice 3 - Michael Mangia.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dgvincent@ClasseurDVincent/AffectationFonctionCorrection.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nualamccullagh@twitter-trolls/Creating training set.ipynb": {"API": [["sys.path.insert", "argparse.ArgumentParser", "tweepy.OAuthHandler", "tweepy.OAuthHandler.set_access_token", "tweepy.API", "tweepy.Stream", "json.dumps", "time.sleep"]], "module": ["tweepy", "config"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/greenteawarrior@GitHubDataDash/Nov17 GitHub DDash.ipynb": {"API": [["pandas.DataFrame", "sqlite3.connect", "pandas.DataFrame.to_sql", "json.load"], ["flask.Flask", "flask.Flask.route", "flask.Flask.route", "crud.DBWrapper.get_comments_for_repo", "crud.DBWrapper", "flask.jsonify", "flask.render_template", "flask.Flask.run", "itertools.chain"], ["sqlite3.connect"], []], "module": ["flask", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/milenamaluli@CD/Projeto1 Milena Maluli.ipynb": {"API": [], "module": ["matplotlib", "ipywidgets", "scipy", "pandas", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ddandur@CDIPS-EEG-Project/Correlations_and_Statistics.ipynb": {"API": [[], ["scipy.io.loadmat", "pandas.DataFrame", "scipy.io.loadmat", "numpy.corrcoef", "numpy.fill_diagonal", "scipy.io.loadmat", "pandas.DataFrame", "pandas.DataFrame", "scipy.io.loadmat", "pandas.DataFrame", "numpy.corrcoef", "scipy.io.loadmat", "numpy.sum", "numpy.sum", "scipy.io.loadmat", "numpy.sum", "scipy.io.loadmat", "pandas.DataFrame", "scipy.stats.kurtosis", "scipy.io.loadmat", "pandas.DataFrame", "scipy.stats.skew", "scipy.stats.kurtosis", "scipy.stats.skew", "pandas.DataFrame.from_dict", "pandas.DataFrame.from_csv", "pandas.DataFrame", "pandas.DataFrame.from_csv", "pandas.DataFrame", "pandas.DataFrame.combine_first", "pandas.DataFrame.from_csv.to_csv", "pandas.DataFrame.from_csv.to_csv", "pandas.DataFrame.from_csv", "pandas.DataFrame.from_csv", "scipy.io.loadmat", "numpy.array", "numpy.fft.rfft", "numpy.fft.rfft", "pandas.DataFrame", "numpy.mean", "scipy.io.loadmat", "numpy.sqrt", "scipy.io.loadmat.append", "pandas.DataFrame.from_csv.get_value", "numpy.array"], [], [], [], [], ["subprocess.check_output", "sys.exit", "sys.exit", "subprocess.check_output", "sys.exit", "subprocess.check_output", "sys.exit", "sys.exit", "scipy.io.loadmat", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame"], ["numpy.sum", "scipy.io.loadmat", "matplotlib.pyplot.imshow", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.colorbar", "matplotlib.pyplot.clf", "matplotlib.pyplot.cla", "numpy.fft.rfft", "subprocess.check_output", "subprocess.check_output", "subprocess.check_output", "subprocess.check_output", "sys.exit", "sys.exit", "subprocess.check_output", "sys.exit", "subprocess.check_output", "sys.exit", "sys.exit", "scipy.io.loadmat", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "subprocess.check_output", "subprocess.check_output", "subprocess.check_output", "pandas.DataFrame", "subprocess.check_output", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "subprocess.check_output", "pandas.DataFrame", "pandas.DataFrame"], [], [], [], [], [], [], [], [], []], "module": ["pandas", "numpy", "matplotlib", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/browntommy@downtown/demo.ipynb": {"API": [], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kumoshu@algorithom/svd/svd\u7b97\u6cd5.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/GooTec@BioDataLab/DNN_cancer_data.ipynb": {"API": [["tensorflow.set_random_seed", "numpy.genfromtxt", "numpy.genfromtxt", "numpy.reshape.transpose", "numpy.reshape", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.reduce_mean", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "tensorflow.equal", "tensorflow.global_variables_initializer", "tensorflow.log", "tensorflow.log", "numpy.isnan", "numpy.isnan"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/assassinmr@jdata/data_cleaning.ipynb": {"API": [["pandas.read_csv"], ["pandas.read_csv", "pandas.concat", "pandas.concat.append", "pandas.concat.append", "pandas.concat.append", "pandas.concat.append", "pandas.concat", "pandas.concat.append", "pandas.concat.append", "pandas.concat", "pandas.read_csv", "pandas.concat", "pandas.concat.append", "pandas.concat.append", "pandas.concat.append", "pandas.concat.append", "pandas.concat", "pandas.concat.sort_values", "pandas.to_datetime", "pandas.concat.groupby", "pandas.to_datetime", "pandas.to_datetime", "pandas.to_datetime", "pandas.read_csv.get_chunk", "pandas.concat.groupby", "pandas.concat.groupby", "pandas.read_csv.get_chunk"], ["pandas.read_csv", "pandas.concat", "pandas.read_csv.iterrows", "pandas.concat", "pandas.read_csv", "pandas.concat", "pandas.read_csv", "pandas.concat", "pandas.concat", "pandas.concat.append", "pandas.to_datetime", "pandas.read_csv.get_chunk", "pandas.read_csv.get_chunk"], [], ["pandas.read_csv", "collections.Counter", "pandas.read_csv", "pandas.concat", "pandas.concat", "pandas.merge", "pandas.merge.to_csv", "pandas.read_csv.get_chunk"], ["pandas.read_csv", "collections.Counter", "pandas.read_csv", "pandas.concat", "pandas.read_csv", "pandas.to_datetime", "pandas.concat", "pandas.merge", "pandas.merge", "pandas.merge.to_csv", "pandas.read_csv.get_chunk", "pandas.read_csv.groupby"], ["pandas.read_csv", "pandas.concat.map", "pandas.to_datetime", "pandas.concat.to_csv", "pandas.read_csv", "pandas.read_csv", "pandas.concat", "pandas.concat.head", "pandas.concat.describe", "pandas.concat.head", "pandas.read_csv.get_chunk"]], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Prasad-Gujela@NBA-Case/NBA Case.ipynb": {"API": [], "module": ["matplotlib", "pandas", "xlrd", "seaborn", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kellyamey@MAN6915_Assignment4/Assignment 4.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Sascha0912@first-neural-network/Your_first_neural_network.ipynb": {"API": [["numpy.random.normal", "numpy.random.normal", "numpy.zeros", "numpy.zeros", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.exp"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/switch896@Pyber/main.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MLZC@Data_mining_lab/week2/week2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Albertotuero@Master-Project/Code/04_Analisis_Inicial_Temperaturas.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/flame-stream@Evaluation/ex4/Untitled.ipynb": {"API": [["math.pow", "decimal.Decimal"], ["math.pow", "math.pow", "math.pow"], [], [], [], [], ["itertools.combinations"], [], [], ["sqlite3.connect", "sqlite3.connect.cursor", "sqlite3.connect.commit", "sqlite3.connect.close", "sqlite3.connect", "sqlite3.connect.cursor", "sqlite3.connect.commit", "sqlite3.connect.close", "sqlite3.connect", "sqlite3.connect.cursor", "sqlite3.connect.commit", "sqlite3.connect.close", "csv.DictReader", "csv.DictReader", "csv.DictReader"], ["math.sqrt", "math.sqrt", "math.sqrt", "math.pow", "math.pow", "math.pow", "math.pow", "math.pow", "math.pow"], [], [], ["random.randint"], ["sqlalchemy.ext.declarative.declarative_base", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.orm.relationship", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.orm.relationship", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.orm.relationship", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.orm.relationship", "sqlalchemy.Sequence", "sqlalchemy.String", "sqlalchemy.String", "sqlalchemy.Sequence", "sqlalchemy.String", "sqlalchemy.String", "sqlalchemy.String", "sqlalchemy.orm.backref"], [], ["pandas.read_csv", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.concat", "pandas.read_csv.groupby", "pandas.DataFrame.groupby", "pandas.DataFrame.groupby", "pandas.concat.sort_values", "pandas.concat.sort_values"], ["pandas.read_csv", "pandas.DataFrame"]], "module": ["sqlalchemy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nicktimko@prison-names/names.ipynb": {"API": [], "module": ["pandas", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gayatripingale@Practice/Dictionary/GP_Sample_Sales_Df.ipynb": {"API": [[]], "module": ["requests", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/googlr@Way2Python/DSGA3001_AdvancedPython/Assignment/Assignment_3/Assignment_3_xg626.ipynb": {"API": [["time.process_time", "time.process_time"], ["time.process_time", "time.process_time"], ["time.process_time", "time.process_time"], ["time.process_time", "time.process_time"], ["time.process_time", "time.process_time"], [], "itertools.permutations", "numpy.zeros", "itertools.product", "itertools.product", "itertools.product", "itertools.product", "itertools.repeat", "itertools.islice", "itertools.islice", "itertools.islice", "itertools.islice", "itertools.repeat", "itertools.count", "itertools.count", "itertools.count", "itertools.count"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/colby-j-wise@Multi-Arm_Contextual_Bandit_Problem/LinUCB.ipynb": {"API": [["pandas.read_csv"]], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/P4nos@custom-classifiers-MNIST/Custom_classifier_Minst.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sahabA@capstone/EDA/MicrobiologyEvents.ipynb": {"API": [], "module": ["matplotlib", "statsmodels", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/harumhl@Grab-Em-by-the-Posts-/python/vis_notebook.ipynb": {"API": [[], [], []], "module": ["wordcloud", "matplotlib", "pandas", "numpy", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sanzgiri@pgw-book-generator/pgw-book-generator.ipynb": {"API": [], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jonkensta@sand-mirror/demo.ipynb": {"API": [["collections.namedtuple", "numpy.exp", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.dstack", "numpy.random.normal", "argparse.ArgumentParser", "scipy.ndimage.imread", "matplotlib.pyplot.subplot", "matplotlib.pyplot.imshow", "matplotlib.pyplot.subplot", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "numpy.exp", "numpy.sqrt", "numpy.abs", "numpy.stack", "numpy.stack"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Rafabaring@Video_game_dataset_analyzes/Video_game_dataset_analyzes.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/djgh2@nd1/dlnd_tv_script_generation.ipynb": {"API": [["os.path.join", "pickle.dump", "pickle.load", "pickle.dump", "pickle.load"], ["tensorflow.Graph", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "numpy.array", "numpy.array_equal", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "numpy.array", "numpy.array_equal", "numpy.array_equal", "tensorflow.Graph", "tensorflow.Graph", "numpy.array", "numpy.array", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.Graph"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/VanessaSayuri@Probabilidade/Trabalho extra/Vanessa_Sayuri-TrabalhoExtra.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jaindeepali@Reinforcement-Learning-Algorithms/rl_online_algorithms/monte-carlo.ipynb": {"API": [["collections.namedtuple", "numpy.zeros", "numpy.random.random", "numpy.arange", "numpy.arange", "numpy.random.choice", "numpy.repeat"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JGroefsema@DataScience18/Basisonderwijs_slides.ipynb": {"API": [], "module": ["lxml", "scipy", "pandas", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Joe1234321Joe@tensorflow_models/tensorflow python3.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/anchor14@NYU-Data-Bootcamp/Jaehurn-Nam-Movies.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/prhorn@python_machine_learning/classification_methods.ipynb": {"API": [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ["line_search.line_search", "numpy.array", "math.sqrt", "numpy.dot", "numpy.dot", "numpy.dot"], [], ["os.getcwd"], [], ["numpy.ndarray", "numpy.dot", "numpy.dot", "numpy.array", "numpy.dot", "numpy.array", "numpy.array", "numpy.dot", "numpy.array", "numpy.dot", "numpy.array", "numpy.array", "numpy.dot", "numpy.array", "numpy.dot", "numpy.array", "numpy.array", "numpy.dot", "numpy.array", "numpy.dot", "numpy.array", "numpy.array", "numpy.dot", "numpy.column_stack", "numpy.ndarray", "numpy.dot", "numpy.linalg.pinv", "numpy.dot", "numpy.dot", "numpy.linalg.pinv", "numpy.dot", "numpy.array", "numpy.dot", "numpy.dot", "numpy.empty", "numpy.array", "numpy.column_stack", "numpy.array", "numpy.empty", "numpy.random.rand", "numpy.ndarray", "numpy.random.rand", "numpy.ndarray", "numpy.random.rand", "numpy.random.rand", "numpy.random.rand", "numpy.ndarray", "numpy.random.rand", "numpy.ndarray", "numpy.random.rand", "numpy.random.rand", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.sum", "numpy.array", "numpy.array", "numpy.diag", "numpy.dot", "numpy.trace", "numpy.trace", "numpy.array", "numpy.diag", "numpy.diag", "numpy.ones", "numpy.dot", "math.sqrt", "numpy.ones", "numpy.dot", "numpy.dot", "math.sqrt", "numpy.array", "numpy.array", "numpy.diag", "numpy.array", "math.sqrt", "math.sqrt", "numpy.dot", "numpy.dot", "numpy.dot"]], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tuziluobo@Neural-Networks-for-Pattern-Recognition/cnn-cifar10.ipynb": {"API": [], "module": ["torch", "numpy", "matplotlib", "torchvision"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lindema1@Learn_MRI_Analysis/Learn_MRI_Analysis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/eleanorevmk@Capstone-Project/Capstone EDA.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SuvroBaner@Data-Transformation-in-Python/Data_Transformation.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alastair-JL@bcDataWorkshop_BCSA/BottleNeckingOfBCSA.ipynb": {"API": [["boto3.client", "botocore.client.Config.download_file", "boto3.client", "botocore.client.Config.download_file", "os.stat", "botocore.client.Config", "botocore.client.Config"], ["boto3.client", "botocore.client.Config.list_objects", "boto3.client", "os.walk", "os.mkdir", "os.path.isfile", "functools.partial", "os.makedirs", "os.makedirs", "os.listdir", "botocore.client.Config", "botocore.client.Config.download_file", "os.path.join", "os.path.isfile", "boto3.client", "boto3.client", "os.unlink", "os.path.isdir", "shutil.rmtree"]], "module": ["boto3", "botocore"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dhanus@lsm-tree/create_plots.ipynb": {"API": [["subprocess.call"], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/irenevolpe@Analyzing_Startup_Fundraising_Deals_from_Crunchbase/Analyzing_Startup_Fundraising_Deals_from_Crunchbase.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alan-turing-institute@FragileFamiliesChallenge/NOTEBOOKS/Bernie_work.ipynb": {"API": [], "module": ["matplotlib", "pandas", "statsmodels", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zackthoutt@language-translation-rnn/language_translation.ipynb": {"API": [["os.path.join", "copy.copy", "pickle.dump", "pickle.load", "pickle.dump", "pickle.load", "copy.copy.items", "numpy.array", "numpy.array"], ["helper.create_lookup_tables", "helper.create_lookup_tables", "numpy.array_equal", "tensorflow.Graph.as_default", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.LSTMStateTuple", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session", "tensorflow.variable_scope", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.LSTMStateTuple", "tensorflow.variable_scope", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.LSTMStateTuple", "itertools.chain.from_iterable", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.contrib.layers.fully_connected", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph", "tensorflow.contrib.layers.fully_connected", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DanielWFrancis@df_scratchpad/WePay Discrepancy.ipynb": {"API": [], "module": ["requests", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lleiou@Movie-Recommendation/Untitled1.ipynb": {"API": [[], [], ["pandas.DataFrame", "numpy.array", "numpy.repeat", "numpy.repeat", "numpy.repeat", "numpy.repeat", "pandas.DataFrame", "pandas.DataFrame", "numpy.dot", "numpy.sign", "numpy.random.randn", "numpy.shape", "numpy.shape", "numpy.cumsum", "numpy.dot", "numpy.shape", "numpy.ones", "numpy.array", "numpy.log", "numpy.multiply", "numpy.shape", "numpy.multiply", "numpy.array", "numpy.dot", "numpy.exp", "numpy.array", "numpy.multiply", "numpy.array"], [], []], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/13tsuyoshi@fencing/\u3061\u3083\u3093\u3068\u3057\u305f\u3084\u3064.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Skyamz@Data_Recognizer/Data_Recognizer.ipynb": {"API": [["pandas.read_csv", "numpy.multiply.astype", "numpy.multiply", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.placeholder", "tensorflow.nn.dropout", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.argmax", "tensorflow.global_variables_initializer", "tensorflow.InteractiveSession", "tensorflow.InteractiveSession.run", "numpy.multiply.astype", "numpy.multiply", "numpy.zeros", "numpy.savetxt", "tensorflow.reshape.eval", "matplotlib.pyplot.axis", "matplotlib.pyplot.imshow", "tensorflow.InteractiveSession.close", "pandas.read_csv.head", "matplotlib.pyplot.axis", "matplotlib.pyplot.imshow", "numpy.zeros", "tensorflow.truncated_normal", "tensorflow.Variable", "tensorflow.constant", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.max_pool", "tensorflow.reshape.get_shape", "tensorflow.matmul.get_shape", "tensorflow.matmul.get_shape", "tensorflow.reduce_sum", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.InteractiveSession.run", "tensorflow.cast.eval", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.ylim", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.show", "pandas.read_csv", "tensorflow.argmax.eval", "numpy.ceil", "numpy.unique", "numpy.arange", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "numpy.arange", "numpy.random.shuffle", "tensorflow.cast.eval", "numpy.sqrt", "tensorflow.log", "tensorflow.cast.eval"]], "module": ["matplotlib", "numpy", "tensorflow", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/met-office-lab@machine-learning-traffic-cams/resources/get_data.ipynb": {"API": [], "module": ["boto3", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mvrkkk@gent-test-task/gen-task.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/from81@Bitcoin-Price-Forecasting/BTC Price Forecasting (Attempt).ipynb": {"API": [], "module": ["matplotlib", "pandas_datareader", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/RodrigoPadilha@BikeShareAnalysisDataScience/Untitled.ipynb": {"API": [["matplotlib.pyplot.figure", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.xticks", "matplotlib.pyplot.hist", "matplotlib.pyplot.bar", "numpy.floor", "numpy.ceil"], ["babs_visualizations.usage_stats", "numpy.array", "numpy.allclose", "numpy.allclose", "numpy.array", "numpy.allclose", "numpy.array", "numpy.array_equal"]], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sagilm@quicksort/randomquicksortcompdist-Copy1.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/antoinecarme@PyAF_Benchmarks/reporting/bench-debrief.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/arpanrau@Aerodynamic-Flutter/Flutter-Model-Master.ipynb": {"API": ["numpy.arange", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "matplotlib.pyplot.subplots", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "numpy.absolute"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jonathan-arriaga@python-course/intro.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/erood@datadriventhoughts/YC_exploratory_11_6_16.ipynb": {"API": [], "module": ["matplotlib", "pandas", "statsmodels", "numpy", "seaborn", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sk6685@Applied-Data-Science-with-Python/Week2/Assignment+2 (1).ipynb": {"API": [["pandas.read_csv", "pandas.read_csv", "pandas.read_csv.head"]], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jadabot@exemplos_Tensorflow/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/meaningfromdata@NBA-Data-Analysis/NBA 2016-2017 Season EDA-Copy1.ipynb": {"API": [], "module": ["numpy", "seaborn", "plotly", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/anurekhat@datawrangling-json/JSON_Exercise.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SayreBlades@dsp/week2/week2.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jlwung@tensorflow_exercise_ben/3.2 MNIST.ipynb": {"API": [["numpy.random.normal", "matplotlib.pyplot.scatter", "matplotlib.pyplot.ion", "matplotlib.pyplot.show", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.tanh", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.tanh", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.global_variables_initializer", "matplotlib.pyplot.ioff", "numpy.linspace", "numpy.square", "tensorflow.random_normal", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.square", "tensorflow.Session", "tensorflow.train.GradientDescentOptimizer", "matplotlib.pyplot.cla", "matplotlib.pyplot.scatter", "matplotlib.pyplot.plot", "matplotlib.pyplot.text", "matplotlib.pyplot.pause"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.truncated_normal", "tensorflow.Variable", "tensorflow.constant", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.max_pool", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer", "tensorflow.global_variables_initializer", "tensorflow.log"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits_v2", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.GradientDescentOptimizer"], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yashwantreddy@Predicting-Text-with-LSTM/Text Generation with LSTM RNN.ipynb": {"API": [], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/keyurparalkar@Exoplanet-Hunting-in-Deep-Space/Exoplanet Hunting in Deep Space.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SarahEssaam@ECG_Project/main.ipynb": {"API": [["matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "numpy.all", "numpy.array", "matplotlib.pyplot.plot"], ["numpy.asarray", "filters.notch_Filter", "filters.butter_bandpass_filter", "numpy.square", "numpy.array", "numpy.zeros_like", "numpy.insert", "numpy.append", "numpy.zeros_like", "numpy.append", "numpy.where", "numpy.array", "numpy.where", "numpy.ones", "numpy.zeros", "numpy.sum", "numpy.mean", "numpy.sum", "numpy.append", "numpy.max", "numpy.mean"], ["scipy.signal.butter", "scipy.signal.lfilter", "scipy.signal.iirnotch", "scipy.signal.lfilter"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bourque@AAS-2017-Austin/create_figures.ipynb": {"API": [], "module": ["IPython", "astropy", "matplotlib", "numpy", "h5py"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JurreSpit@assignments/week3.ipynb": {"API": [], "module": ["pandas", "numpy", "matplotlib", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ccasanoval@LotoRNN/Loto.ipynb": {"API": [], "module": ["matplotlib", "numpy", "keras", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Karthik-Nagaraja@Analyzing-Thanksgiving-Dinner/Thanksgiving Dinner analysis.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mukunda11@BME495O/Arrhythmia_CRNN_Final.ipynb": {"API": [], "module": ["torch", "pandas", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rneubig@LogisticRegression_with_GradientDescent/LogisticRegression_with_GradientDescent.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yeplastun@radiocracker/notebooks/workspace.ipynb": {"API": [["scipy.ndimage.morphology.generate_binary_structure", "scipy.ndimage.morphology.iterate_structure", "scipy.ndimage.morphology.binary_erosion", "numpy.where", "matplotlib.mlab.specgram", "numpy.log10", "scipy.ndimage.filters.maximum_filter", "matplotlib.pyplot.subplots", "matplotlib.pyplot.gca.invert_yaxis", "matplotlib.pyplot.show", "matplotlib.pyplot.gca", "operator.itemgetter", "hashlib.sha1"], [], ["scipy.io.wavfile.read", "requests.get", "requests.get.iter_content", "time.strftime", "multiprocessing.Process", "multiprocessing.Process.start", "fingerprint.fingerprint"], ["scipy.ndimage.morphology.generate_binary_structure", "scipy.ndimage.morphology.iterate_structure", "scipy.ndimage.morphology.binary_erosion", "numpy.where", "matplotlib.mlab.specgram", "numpy.log10", "scipy.ndimage.filters.maximum_filter", "matplotlib.pyplot.subplots", "matplotlib.pyplot.gca.invert_yaxis", "matplotlib.pyplot.show", "matplotlib.pyplot.gca", "operator.itemgetter", "hashlib.sha1"]], "module": ["matplotlib", "scipy", "numpy", "seaborn", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/seungeun92@Academy-of-Py/PyAcademy_SLFinal.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nrlakin@impulse/accel_processing.ipynb": {"API": [["sqlalchemy.ext.declarative.declarative_base", "sqlalchemy.create_engine", "sqlalchemy.orm.sessionmaker", "os.environ.get", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.types.TypeDecorator.__init__", "sqlalchemy.String", "sqlalchemy.String", "sqlalchemy.String", "sqlalchemy.String", "sqlalchemy.dialects.mysql.DOUBLE", "sqlalchemy.dialects.mysql.DOUBLE", "sqlalchemy.dialects.mysql.DOUBLE", "sqlalchemy.String", "sqlalchemy.dialects.mysql.DOUBLE", "sqlalchemy.dialects.mysql.DOUBLE", "sqlalchemy.dialects.mysql.DOUBLE", "sqlalchemy.dialects.mysql.DOUBLE", "sqlalchemy.dialects.mysql.DOUBLE", "sqlalchemy.dialects.mysql.DOUBLE", "pytz.utc.value.replace.replace", "datetime.datetime.value.total_seconds", "datetime.datetime.utcfromtimestamp", "datetime.datetime"]], "module": ["matplotlib", "pytz", "numpy", "sqlalchemy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Sirjustin@Deep-Learning/dlnd-your-first-neural-network-Copy1.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Jossome@DM-hwk1/Iris-for-fun.ipynb": {"API": ["pandas.read_csv", "matplotlib.pyplot.subplots", "matplotlib.pyplot.show", "matplotlib.pyplot.subplots", "matplotlib.pyplot.show", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "matplotlib.pyplot.subplots", "matplotlib.pyplot.show", "pandas.read_csv.corr", "pandas.read_csv.corr", "pandas.read_csv.corr", "pandas.read_csv.corr", "pandas.read_csv.groupby", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AngelinaYuz@goldbach/Goldbach.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/adrn@TrendyAPOGEE/notebooks/APOGEE T_C trends.ipynb": {"API": [], "module": ["matplotlib", "h5py", "numpy", "astropy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/datacamp@courses-tidy-data-in-python/Tidy Data in Python.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ManhQLe@Keras-play/Convolutional NW.ipynb": {"API": ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.summary", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.summary", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Dense"], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/charparr@snow-webmap/Snow Valuation.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/clementbosc@bayesian_classifier/TP3 - Classification par Lois Normales par approche Bay\u00e9sienne.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/praveenlama@is362_Project2/Project 2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Michael-J-Ward@SDAFE/Notebooks/plotting_hacks.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lucbouchard1@phys_412/project.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gedas880@IS_Project/MidiToText_1.04.ipynb": {"API": ["os.listdir", "numpy.trim_zeros", "os.listdir", "os.listdir", "numpy.trim_zeros", "os.path.join", "os.system", "pandas.read_csv", "csv.writer", "csv.reader", "os.path.isfile", "os.unlink", "os.listdir", "os.listdir", "csv.writer.writerow"], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nathendel@marshall-lab/diffusion-reflect.ipynb": {"API": [[], ["numpy.zeros", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure", "numpy.zeros", "numpy.random.rand", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "numpy.random.rand", "numpy.random.rand", "numpy.random.weibull"]], "module": ["matplotlib", "IPython", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nejckarlo@numericnenosilec/Projektna_naloga_numeri\u010dne_Nejc_Karlo_23160175.ipynb": {"API": [["numpy.linspace", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.axhline", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "scipy.optimize.bisect", "scipy.optimize.bisect", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.array", "numpy.linalg.cond", "numpy.linalg.det", "numpy.array", "numpy.linalg.solve", "sympy.init_printing", "sympy.symbols", "sympy.Eq", "sympy.Eq", "sympy.Eq", "sympy.Eq.subs", "sympy.Eq.subs", "sympy.Eq.subs", "sympy.solve", "sympy.symbols", "sympy.lambdify", "sympy.lambdify", "sympy.lambdify", "sympy.lambdify", "sympy.lambdify", "sympy.lambdify", "numpy.linspace", "numpy.linspace", "matplotlib.pyplot.hlines", "matplotlib.pyplot.hlines", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.ylim", "matplotlib.pyplot.grid", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.axhline", "matplotlib.pyplot.grid", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.max", "numpy.max", "numpy.max", "numpy.array", "numpy.array", "numpy.linspace", "numpy.array", "numpy.array", "numpy.linspace", "scipy.interpolate.interp1d", "scipy.interpolate.interp1d", "scipy.interpolate.interp1d", "scipy.interpolate.interp1d", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.plot", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.legend", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.plot", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "scipy.integrate.quad", "scipy.integrate.quad", "scipy.integrate.quad", "scipy.integrate.quad", "scipy.integrate.quad", "scipy.integrate.quad", "scipy.integrate.quad", "scipy.integrate.quad", "scipy.integrate.quad", "scipy.integrate.quad", "scipy.integrate.quad", "scipy.integrate.quad", "scipy.integrate.quad", "scipy.integrate.quad", "numpy.linspace", "scipy.integrate.odeint", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.legend", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "sympy.sin.subs", "sympy.cos.subs", "sympy.cos.subs", "sympy.cos.subs", "sympy.cos.subs", "numpy.abs", "sympy.sin", "sympy.sin", "sympy.sin", "sympy.sin", "numpy.sin", "numpy.cos", "numpy.cos", "sympy.cos", "sympy.cos", "numpy.radians", "numpy.sin", "numpy.radians", "numpy.radians", "sympy.cos", "sympy.cos", "sympy.cos", "sympy.cos", "numpy.radians", "numpy.cos", "numpy.cos", "sympy.cos", "sympy.cos", "sympy.cos", "sympy.cos", "sympy.cos", "sympy.cos", "numpy.radians", "numpy.radians"]], "module": ["matplotlib", "numpy", "sympy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/khanparwaz@Notebooks/0014 Hypothesis Testing with Bird Strike Incidents.ipynb": {"API": [], "module": ["matplotlib", "pandas", "scipy", "statsmodels", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ChampeBarton@first-python-notebook/Numbers.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ubermensch1218@python2018/\uc774\ub984\uc5d0\uc11c \ub79c\ub364.ipynb": {"API": ["random.shuffle", "random.choice"], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aymericdamien@TensorFlow-Examples/tensorflow_v2/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.matmul", "tensorflow.global_variables_initializer", "os.path.exists", "urllib.urlretrieve", "zipfile.ZipFile", "numpy.ndarray", "numpy.ndarray", "collections.deque", "collections.deque.extend", "tensorflow.device", "tensorflow.Variable", "tensorflow.nn.embedding_lookup", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.nce_loss", "tensorflow.sqrt", "tensorflow.sqrt", "tensorflow.Session", "numpy.array", "random.sample", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.zeros", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "collections.Counter", "collections.deque.extend", "collections.deque.append", "tensorflow.square", "tensorflow.square"], ["tensorflow.enable_eager_execution", "tensorflow.train.GradientDescentOptimizer", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn.numpy", "numpy.random.randn.numpy", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "numpy.array", "tensorflow.reduce_sum", "tensorflow.pow", "numpy.random.randn.numpy", "numpy.random.randn.numpy"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.group", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.python.ops.resources.initialize_resources", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.python.ops.resources.shared_resources", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.enable_eager_execution", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.data.Dataset.from_tensor_slices", "tensorflow.train.GradientDescentOptimizer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.reduce_mean", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.cast", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.matmul", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.logging.set_verbosity", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.contrib.boosted_trees.proto.learner_pb2.LearnerConfig", "tensorflow.contrib.learn.RunConfig", "tensorflow.contrib.boosted_trees.estimator_batch.estimator.GradientBoostedDecisionTreeClassifier", "tensorflow.logging.set_verbosity", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.contrib.boosted_trees.estimator_batch.estimator.GradientBoostedDecisionTreeClassifier.fit", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.contrib.boosted_trees.estimator_batch.estimator.GradientBoostedDecisionTreeClassifier.evaluate"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.enable_eager_execution", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.data.Dataset.from_tensor_slices", "tensorflow.train.AdamOptimizer", "tensorflow.reduce_mean", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.cast", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.layers.Dense", "tensorflow.layers.Dense", "tensorflow.layers.Dense"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.contrib.eager.enable_eager_execution", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "numpy.array", "tensorflow.matmul"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.data.Dataset.from_tensor_slices", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.nn.softmax"], "tensorflow.keras.datasets.mnist.load_data", "tensorflow.data.Dataset.from_tensor_slices", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.optimizers.SGD", "numpy.array", "numpy.array", "tensorflow.ones", "tensorflow.zeros", "tensorflow.nn.softmax", "tensorflow.one_hot", "tensorflow.clip_by_value", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.optimizers.SGD.apply_gradients", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.GradientTape", "numpy.reshape", "tensorflow.matmul", "tensorflow.reduce_sum", "numpy.argmax", "tensorflow.math.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/FelippeRoza@tom-mitchell-ML-codes/python/8-instance-based/instance-based.ipynb": {"API": [[], ["math.log"]], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/caromedellin@Python-notes/exploratory-data-analysis/taxis.ipynb": {"API": [["numpy.random.seed"], []], "module": ["matplotlib", "requests", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/radiolarian@alpha60/initgotham/time viz.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alexandor91@Follow_me/model_training.ipynb": {"API": [], "module": ["utils", "scipy", "numpy", "tensorflow", "h5py"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/disarticulate@docker-python-sqlite/masterbuilder.ipynb": {"API": [], "module": ["jinja2"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/y-takashina@antbook/2-3.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/apurvalodha@OSL_apurva/Python_OSL_project1.ipynb": {"API": ["keras.datasets.cifar10.load_data"], "module": ["keras"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/avlam@Demos/Plot shorthands.ipynb": {"API": ["numpy.arange", "numpy.sin", "numpy.arange", "numpy.cos", "matplotlib.pyplot.plot", "matplotlib.pyplot.scatter", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "random.random", "numpy.arange", "numpy.arange", "random.random"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jagarth@School/HW 9-3.ipynb": {"API": [], "module": ["matplotlib", "sympy", "ipywidgets", "scipy", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zhoulaiqing@NLPNote/Basic.ipynb": {"API": [], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/santiavenda2@notebooks/asyncio.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Elucidation@N-Maximal-Separation-on-a-Grid/MaximalSeparationOnAGrid.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/toddmoffett@project-2/Supplemental Scripts/Data Engineering.ipynb": {"API": [["flask.Flask", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.render_template", "flask.render_template", "flask.redirect", "flask.Flask.run"], ["pandas.DataFrame", "pandas.read_csv", "json.load", "json.dumps"]], "module": ["numpy", "flask", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jgalsurkar@Gaussian_Process/GaussianProcess.ipynb": {"API": [["scipy.spatial.distance.cdist", "numpy.asmatrix", "numpy.array", "numpy.dot", "numpy.ravel", "numpy.ravel", "numpy.array", "numpy.array", "numpy.exp", "numpy.linalg.inv", "numpy.dot", "numpy.eye", "numpy.dot", "numpy.square"]], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ImagingLectures@image-processing-with-python-anderskaestner/Assignment_01_Images.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/leosartaj@codefest_enigma_2017/model.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/b-liu14@function_dependences_discover/fd_discover.ipynb": {"API": [["datetime.datetime.now", "csv.reader", "collections.defaultdict", "collections.defaultdict.values", "collections.defaultdict", "collections.defaultdict.values", "datetime.datetime.now", "datetime.datetime.now"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tylerjereddy@bench_SA_scipy/bench_scipy_surface_area.ipynb": {"API": ["numpy.array", "numpy.array"], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AntilMB@solovei/venn.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/KuiyuanZhang@python-machine-learning/code/chapter12.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/icute15@Visualization-of--USDA-nutrients-dataset/Visualization of nutrient dataset.ipynb": {"API": [], "module": ["matplotlib", "pandas", "statsmodels", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gaabrielfranco@fis-225/Relat\u00f3rio.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/danlaudk@python_neos_server/simulate and send to server.ipynb": {"API": [[], ["xmlrpclib.Server", "xmlrpclib.Server.ping", "sys.stderr.write", "sys.exit", "xmlrpclib.Server.ping", "sys.stderr.write", "sys.exit", "xmlrpclib.Server.printQueue", "sys.stdout.write", "xmlrpclib.Server.submitJob", "sys.stdout.write", "sys.stderr.write", "sys.exit", "sys.stdout.write", "sys.stderr.write", "sys.exit", "xmlrpclib.Server.getIntermediateResults", "sys.stdout.write", "xmlrpclib.Server.getJobStatus", "xmlrpclib.Server.getFinalResults"], "random.seed", "os.open", "os.read", "os.close", "numpy.random.shuffle", "datetime.datetime.now.strftime", "numpy.random.rand", "numpy.random.rand", "datetime.datetime.now", "numpy.random.binomial", "numpy.random.random_integers", "numpy.random.random_integers", "numpy.random.rand", "numpy.random.random_integers"], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/themutt@notebooks/matplotlib.test.ipynb": {"API": ["pandas.read_csv", "scipy.stats.chi2.cdf"], "module": ["scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/miguelangel@ai--english-language-sequence-generator-rnn/english_language_sequence_generator.ipynb": {"API": [["numpy.asarray", "numpy.asarray", "keras.layers.LSTM", "keras.layers.Dense", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.Activation", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "numpy.asarray.append", "numpy.asarray.append", "numpy.shape"], "my_answers.cleaned_text", "my_answers.build_part2_RNN", "keras.optimizers.RMSprop"], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/glebashnik@dlnd-tv-script-generation/dlnd_tv_script_generation.ipynb": {"API": [["os.path.join", "pickle.dump", "pickle.load", "pickle.dump", "pickle.load"], ["tensorflow.Graph", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "numpy.array", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lebinh@notebooks/ec2-instances-pricing.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/J-Yash@tv-script-generation/dlnd_tv_script_generation.ipynb": {"API": [["os.path.join", "pickle.dump", "pickle.load", "pickle.dump", "pickle.load"], ["tensorflow.Graph", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "numpy.array", "numpy.array_equal", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "numpy.array", "numpy.array_equal", "numpy.array_equal", "tensorflow.Graph", "tensorflow.Graph", "numpy.array", "numpy.array", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.Graph"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/structDataset@career_decisions_data/explorations.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/seanasyed@rnn-workshop/obama-trump-incomplete.ipynb": {"API": [], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/XuanSomerville@Dataiku_internship/dataiku_answer.ipynb": {"API": [["numpy.unique", "numpy.sum", "numpy.array", "numpy.mean", "numpy.std", "numpy.all", "numpy.clip", "numpy.log", "numpy.zeros", "numpy.array.append", "numpy.sum", "numpy.nonzero", "scipy.stats.norm.pdf", "numpy.argmax", "numpy.arange", "numpy.log"]], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/abhishekmalali@cs207test/IITesting_Lab.ipynb": {"API": [[], ["amath.myaverage", "pytest.raises", "amath.myaverage", "amath.mymedian", "pytest.raises", "amath.mymedian", "pytest.raises", "amath.mymedian"], []], "module": ["pytest"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/VictorMor@LabProject/VARIMAX implementation.ipynb": {"API": [], "module": ["matplotlib", "statsmodels", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/darthdeus@bioinf-machine-learning/DimReduction.ipynb": {"API": [[]], "module": ["matplotlib", "IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MaisnamNSingh@automatic_text_generation/lstm_keras_text_gen.ipynb": {"API": [], "module": ["matplotlib", "numpy", "keras"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/prateeksingh0001@Machine-Learning/RNNs/Sequence to Sequence LSTM.ipynb": {"API": ["collections.Counter", "os.path.join", "os.path.join", "os.path.join", "tensorflow.convert_to_tensor", "tensorflow.size", "tensorflow.reshape", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.gfile.GFile", "collections.Counter.items", "tensorflow.placeholder", "tensorflow.unstack", "tensorflow.contrib.rnn.LSTMCell", "tensorflow.nn.dynamic_rnn", "tensorflow.reshape", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.xw_plus_b", "tensorflow.reshape", "tensorflow.contrib.seq2seq.sequence_loss", "tensorflow.reduce_sum", "tensorflow.nn.softmax", "tensorflow.cast", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Variable", "tensorflow.trainable_variables", "tensorflow.clip_by_global_norm", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.placeholder", "tensorflow.assign", "tensorflow.Session", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver", "tensorflow.train.Saver.save", "tensorflow.train.Coordinator.request_stop", "tensorflow.train.Coordinator.join", "tensorflow.Session", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "numpy.zeros", "tensorflow.train.Saver.restore", "tensorflow.train.Coordinator.request_stop", "tensorflow.train.Coordinator.join", "tensorflow.train.range_input_producer", "tensorflow.device", "tensorflow.Variable", "tensorflow.nn.embedding_lookup", "tensorflow.nn.dropout", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.ones", "tensorflow.reshape", "tensorflow.argmax", "tensorflow.reshape", "tensorflow.cast", "tensorflow.gradients", "numpy.zeros", "datetime.datetime.now", "tensorflow.train.Saver.save", "tensorflow.random_uniform", "tensorflow.contrib.rnn.LSTMStateTuple", "tensorflow.contrib.framework.get_or_create_global_step", "datetime.datetime.now", "datetime.datetime.now"], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gcqjiayou@caicloud/Deep_Learning_with_TensorFlow/0.12.0/Chapter05/3. \u53d8\u91cf\u7ba1\u7406.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fbessho@jupyter-book/Widget.ipynb": {"API": [], "module": ["matplotlib", "numpy", "ipywidgets"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/albertofavaro@Sorting-Algorithms-Redux/sorting_algorithms_redux.ipynb": {"API": [], "module": ["IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/eaconway@college-majors-analysis/Basics.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pycaballerom@laboratorio1/lecture2_introduction_to_python.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CalebEverett@speech-competition/audio_datasets.ipynb": {"API": [[]], "module": ["scipy", "torch", "pandas", "numpy", "tqdm", "librosa"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SvenMayer@notebooks/sine_estimator.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Mithunvpatel@3250---Team-Project/Final - NYC_Taxi_Data_Cleaning_and_Derived_Fields.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Intel0tw5727@zero_nlp_practice/\u30bc\u30ed\u304b\u3089\u4f5c\u308b\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0_nlp\u7de8.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mswarzenski@mm20xx/mmfail.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ru57y34nn@patchseq_gdoc_analysis/Conc_vs_ResIndex.ipynb": {"API": [[]], "module": ["matplotlib", "scipy", "pandas", "seaborn", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aliandra@scrapy_intro/intro_to_scrapy.ipynb": {"API": [[], [], [], [], [], ["scrapy.Request", "scrapy.Request"], []], "module": ["scrapy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/qcx201@portfolio_analysis/portfolio_analysis.ipynb": {"API": [], "module": ["sqlalchemy", "matplotlib", "pandas_datareader", "pandas", "scipy", "statsmodels", "quandl", "numpy", "requests", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Stratosferova@Netology_4.3/4.2_Homework_up.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/elenaha@CogSci3-Git/CogSci3 script.ipynb": {"API": [], "module": ["statsmodels", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MichelDeudon@RBM-for-MNIST/main.ipynb": {"API": [["tensorflow.floor", "tensorflow.summary.histogram", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.cast", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.add", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.name_scope", "tensorflow.transpose", "tensorflow.matmul", "tensorflow.log", "tensorflow.random_uniform", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.name_scope", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.squared_difference", "tensorflow.abs", "tensorflow.shape", "tensorflow.expand_dims", "tensorflow.shape", "tensorflow.shape", "tensorflow.nn.sigmoid", "tensorflow.name_scope", "tensorflow.nn.sigmoid", "tensorflow.exp", "tensorflow.one_hot", "numpy.sqrt", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.transpose"]], "module": ["matplotlib", "numpy", "tensorflow", "tqdm"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jazzmajevadia@data-train/Titanic/Titanic_Kaggle_JM.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zhannar@Pickles-N-Notebooks/sample_notebook.ipynb": {"API": [["IPython.nbformat.current.reads_json", "re.findall"]], "module": ["IPython", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bwdGitHub@Black-Scholes/Black-Scholes.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/igoral5@word2vec/city.ipynb": {"API": [[], ["os.path.basename", "logging.getLogger", "logging.basicConfig", "logging.root.setLevel", "logging.getLogger.info", "gensim.models.Word2Vec.load", "logging.getLogger.error", "sys.exit", "gensim.models.Word2Vec.load.most_similar", "logging.getLogger.exception", "logging.getLogger.info", "logging.getLogger.error", "logging.getLogger.error"], [], ["logging.basicConfig", "locale.setlocale", "locale.getpreferredencoding.codecs.getwriter", "locale.getpreferredencoding.codecs.getwriter", "gensim.models.Word2Vec", "codecs.getwriter", "codecs.getwriter", "re.compile", "locale.getpreferredencoding", "locale.getpreferredencoding", "os.listdir", "multiprocessing.cpu_count", "multiprocessing.cpu_count.most_similar", "codecs.open", "codecs.open", "zipfile.ZipFile", "os.path.join", "xml.etree.cElementTree.iterparse", "os.path.splitext", "os.path.splitext"]], "module": ["gensim"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/amanvirmundra@mnist-digit-recognition-convnet/MNIST Digit Recognition.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Jpkat92@Working-with-Iris-Dataset/IPython_Demo_Working_with_Iris_Dataset.ipynb": {"API": [], "module": ["requests", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/TBenY@git/notebook/cloud.ipynb": {"API": [["numpy.set_printoptions", "numpy.seterr", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "pandas.concat", "numpy.where", "numpy.where", "numpy.where", "pandas.concat", "pandas.concat", "pandas.concat.merge", "pandas.concat.drop_duplicates", "pandas.to_datetime", "cPickle.dump", "datetime.datetime.utcfromtimestamp", "datetime.timedelta", "numpy.sum", "numpy.mean", "numpy.std"], []], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tboser@NIPS2017-demo/visualize-performance.ipynb": {"API": [[], ["keras.datasets.mnist.load_data", "keras.utils.to_categorical", "keras.utils.to_categorical", "keras.models.load_model", "time.time", "keras.models.load_model.predict", "time.time", "keras.backend.image_data_format", "numpy.reshape", "time.time", "keras.models.load_model.predict", "time.time"]], "module": ["matplotlib", "pandas", "keras", "numpy", "seaborn", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/arondeau@keras-mnist-cnn/mnist_cnn.ipynb": {"API": [["numpy.random.seed", "keras.datasets.mnist.load_data", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "keras.models.Sequential.evaluate", "keras.backend.image_dim_ordering", "keras.layers.Convolution2D", "keras.layers.Activation", "keras.layers.Convolution2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Dropout", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dropout", "keras.layers.Dense", "keras.layers.Activation"]], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mnagaku@wifi/event-wifi-construct-vyos.ipynb": {"API": [["nbformat.read", "lxml.etree.Element", "lxml.etree.Element", "lxml.etree.Element.append"]], "module": ["lxml", "nbformat"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/biaobin@Notebooks/Sympy.ipynb": {"API": [], "module": ["sympy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/TylerNicholas22@MLB-project/MLB Project_Tyler Changes new update.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yashwanth619@Home-loans-Python/Final_datachallenge.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/miguelangel@ai--machine-translation-lstm/machine_translation.ipynb": {"API": [["numpy.array", "numpy.all", "numpy.all", "numpy.concatenate", "numpy.full"], ["os.path.join"]], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DeepakSaini119@Basic_tutorial/numpy_tut.ipynb": {"API": [["os.system", "os.system"], [], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], []], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gcrowder@ultimate-pig/ultimate_pig.ipynb": {"API": [["pig.Player", "unittest.mock.patch", "unittest.mock.patch", "unittest.mock.patch", "pig.Player", "pig.Player", "pig.Player", "pig.roll_die", "pig.play", "pig.game_loop"], ["random.randint", "matplotlib.pyplot.figure", "matplotlib.pyplot.boxplot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.boxplot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.boxplot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.boxplot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "statistics.mean", "statistics.stdev", "statistics.mean", "statistics.stdev", "statistics.mean", "statistics.stdev", "statistics.mean", "statistics.stdev", "random.choice"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jiaojiang@BA501/Jiao Jiang BA501 Homework 1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/trueutkarsh@sarsa-qlearning-implementation/generateGraph.ipynb": {"API": [["random.seed", "random.randint", "random.choice", "random.seed", "random.shuffle", "random.randint", "random.random", "random.choice", "random.randint"], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "socket.socket", "socket.socket.setsockopt", "collections.namedtuple", "socket.socket.bind", "socket.socket.listen", "environment.Environment", "socket.socket.accept", "argparse.ArgumentTypeError", "environment.Environment.getnumStates", "environment.Environment.getState", "environment.Environment.printWorld", "environment.Environment.takeAction"], ["numpy.random.rand", "numpy.zeros", "numpy.random.seed", "numpy.random.rand", "numpy.random.seed", "numpy.zeros", "numpy.random.randint", "numpy.random.uniform", "numpy.random.randint", "numpy.argmax", "numpy.random.randint", "numpy.random.uniform", "numpy.random.randint", "numpy.argmax", "numpy.amax"], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "socket.socket", "socket.socket.setsockopt", "collections.namedtuple", "socket.socket.connect", "socket.socket.sendall", "agent.Agent", "socket.socket.close", "sys.exit", "socket.socket.recv"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dulceambrocio@SLR/SLR.ipynb": {"API": [["numpy.random.seed", "numpy.random.random", "numpy.linspace", "code.interact", "numpy.random.normal"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ryan-hs@machine-learning-python/05_Decision_Trees.ipynb": {"API": [["networkx.DiGraph.add_node", "networkx.DiGraph.add_node", "networkx.DiGraph", "networkx.DiGraph.nodes", "networkx.DiGraph.nodes", "networkx.draw_networkx_nodes", "networkx.draw_networkx_edges", "networkx.draw_networkx_labels", "matplotlib.pyplot.axis", "networkx.DiGraph.nodes", "networkx.DiGraph.add_weighted_edges_from", "networkx.DiGraph.add_weighted_edges_from", "math.log", "math.fabs"], [], []], "module": ["networkx", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Prasand14@Dog-Breed-Classification/dog_app_final.ipynb": {"API": [["keras.applications.vgg16.VGG16.predict", "keras.applications.vgg19.VGG19.predict", "keras.applications.resnet50.ResNet50.predict", "keras.applications.xception.Xception.predict", "keras.applications.inception_v3.InceptionV3.predict", "keras.applications.inception_v3.preprocess_input", "keras.applications.inception_v3.preprocess_input", "keras.applications.inception_v3.preprocess_input", "keras.applications.inception_v3.preprocess_input", "keras.applications.inception_v3.preprocess_input", "keras.applications.vgg16.VGG16", "keras.applications.vgg19.VGG19", "keras.applications.resnet50.ResNet50", "keras.applications.xception.Xception", "keras.applications.inception_v3.InceptionV3"]], "module": ["keras"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alexsokolowska@DiFe2017Workshop/Solution.ipynb": {"API": [[], [], "numpy.genfromtxt", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.savefig"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tphyhFighting@math/ProbAndStats/PS4.ipynb": {"API": [], "module": ["scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mgurdal@tensorflow_101/index.ipynb": {"API": [["numpy.random.rand.astype", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.random_uniform", "tensorflow.zeros", "tensorflow.square", "tensorflow.Session.run", "numpy.random.rand", "tensorflow.Session.run", "tensorflow.Session.run"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.ion", "matplotlib.pyplot.show", "tensorflow.Variable", "tensorflow.Variable", "numpy.linspace", "numpy.square", "tensorflow.reduce_sum", "tensorflow.Session.run", "tensorflow.random_normal", "tensorflow.matmul", "numpy.random.normal", "tensorflow.square", "tensorflow.train.GradientDescentOptimizer", "tensorflow.Session.run", "matplotlib.pyplot.pause", "tensorflow.zeros"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Variable", "tensorflow.constant", "tensorflow.add", "tensorflow.assign", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.multiply", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/spinaotey@avo_tf/Example1-reweighted.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bfetler@python_fun/pandas_filter_genes.ipynb": {"API": [], "module": ["numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/xju2@delete_weibo/weibo-solenium.ipynb": {"API": [], "module": ["selenium"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/emanuellemoco@Ciencia-dos-dados-/Projeto1_Emanuelle_3.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jrobie8385@Thinkful-Drills-v2/capstone_project_v5.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/somnath1077@ML/start/Backpropagation.ipynb": {"API": [[], [], [], [], [], [], [], [], [], []], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/weburnit@datasciencecoursera/linear-model.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cvalenzuela@learning_machines/neuralNetwork/Neural Network.ipynb": {"API": [[], ["numpy.random.uniform", "numpy.sin", "numpy.sinh", "numpy.cosh", "numpy.power", "numpy.zeros", "numpy.amax.saveImage", "matplotlib.pyplot.ion", "matplotlib.pyplot.figure", "matplotlib.lines.Line2D", "matplotlib.lines.Line2D", "matplotlib.lines.Line2D", "matplotlib.pyplot.show", "matplotlib.pyplot.savefig", "numpy.amin", "matplotlib.pyplot.draw", "matplotlib.pyplot.pause", "numpy.exp", "numpy.amin", "numpy.amax", "numpy.amin", "numpy.amax", "numpy.amax", "numpy.random.rand", "numpy.dot", "numpy.dot", "numpy.expand_dims", "numpy.sum", "numpy.amax.update", "numpy.dot", "numpy.sum", "numpy.absolute"], "numpy.asarray", "numpy.argmax", "numpy.random.normal", "numpy.random.normal", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.asarray.sum", "numpy.array", "numpy.array", "numpy.dot", "numpy.dot", "numpy.array", "numpy.zeros", "numpy.transpose", "numpy.transpose", "numpy.asfarray", "numpy.asfarray"], "module": ["matplotlib", "imageio", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ub-aa@ass2-greedy-DavidAlvarezRios/AA-Greedy.ipynb": {"API": [["networkx.Graph.edges", "matplotlib.pyplot.figure", "matplotlib.pyplot.axis", "networkx.draw_networkx_nodes", "matplotlib.pyplot.show", "networkx.Graph", "csv.reader", "csv.reader", "csv.reader", "math.sqrt", "networkx.draw_networkx_labels", "networkx.draw_networkx_edges", "networkx.Graph.add_node", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.nodes", "networkx.Graph.edges"]], "module": ["matplotlib", "networkx"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jasonxhh@Momentum-Replication/Momentum Replication.ipynb": {"API": [], "module": ["matplotlib", "statsmodels", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kab163@Jupyter_Demo/Examples_Notebooks/Script Magics.ipynb": {"API": [], "module": ["matplotlib", "sympy", "scipy", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JRC1995@Machine-Translation-Transformers/Machine Translation.ipynb": {"API": [["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.multiply", "tensorflow.reduce_mean", "tensorflow.nn.softmax", "tensorflow.global_variables_initializer", "pickle.load", "numpy.subtract", "numpy.square", "numpy.sum", "numpy.sqrt", "numpy.argsort", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.ones", "tensorflow.zeros", "tensorflow.ones", "tensorflow.zeros", "tensorflow.ones", "tensorflow.zeros", "tensorflow.ones", "tensorflow.zeros", "tensorflow.ones", "tensorflow.zeros", "numpy.zeros", "numpy.zeros.reshape", "tensorflow.nn.moments", "numpy.zeros", "tensorflow.transpose", "tensorflow.cast", "tensorflow.div", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.TensorArray", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.nn.dropout", "tensorflow.reshape", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.reshape", "tensorflow.nn.dropout", "tensorflow.nn.dropout", "tensorflow.nn.dropout", "tensorflow.reshape", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.reshape", "tensorflow.nn.dropout", "tensorflow.cast", "tensorflow.gather", "tensorflow.concat", "tensorflow.concat", "tensorflow.nn.dropout", "tensorflow.ones", "tensorflow.constant", "tensorflow.convert_to_tensor", "tensorflow.transpose", "tensorflow.zeros", "tensorflow.constant", "tensorflow.while_loop", "numpy.ones_like", "tensorflow.Session", "tensorflow.train.Saver", "tensorflow.Session", "tensorflow.train.Saver", "tensorflow.train.Saver.restore", "numpy.asarray", "numpy.asarray", "tensorflow.multiply", "numpy.zeros", "tensorflow.matmul", "tensorflow.sqrt", "tensorflow.nn.dropout", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.concat", "tensorflow.argmax", "tensorflow.constant", "tensorflow.reshape", "tensorflow.zeros", "tensorflow.concat", "tensorflow.nn.dropout", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.cond", "tensorflow.reshape", "tensorflow.cond", "tensorflow.train.AdamOptimizer", "numpy.arange", "numpy.random.shuffle", "tensorflow.global_variables", "math.sin", "tensorflow.nn.softmax", "tensorflow.reshape", "tensorflow.equal", "tensorflow.equal", "numpy.random.randint", "random.randint", "tensorflow.sqrt", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.convert_to_tensor", "tensorflow.gather", "tensorflow.constant.get_shape", "tensorflow.constant.get_shape", "tensorflow.TensorShape", "tensorflow.TensorShape", "tensorflow.train.Saver.save", "numpy.zeros", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "numpy.argmax", "numpy.argmax", "tensorflow.shape", "numpy.argmax"], []], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mrHyde90@Neural_network/neuralNetwork.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/timothyshort@S-P-Historical-Data/S&P Analysis.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/danielrich@kaggle/carvana/Experiments.ipynb": {"API": [], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bbrandom91@PyAcademy/main.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/stephsamson@loanwords/loanwords.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Jazzwall@CarNDP2/Traffic_Sign_Classifier.ipynb": {"API": [["tensorflow.constant", "tensorflow.constant", "tensorflow.subtract", "tensorflow.cast", "tensorflow.constant", "tensorflow.Session", "tensorflow.divide"], "numpy.size", "pickle.load", "pickle.load", "pickle.load", "numpy.unique"], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DLily0129@Headlines/headline.ipynb": {"API": [["flask.Flask", "requests.get", "json.loads", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "requests.get", "json.loads", "time.localtime", "flask.render_template", "flask.Flask.run", "time.time", "requests.get", "requests.get", "requests.get", "requests.get", "requests.get", "requests.get"]], "module": ["flask", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/PeterJackNaylor@InternWork2/test.ipynb": {"API": [[], ["warnings.warn"], [], [], [], [], [], []], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kamilsa@ra_qs/QS_RQS.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shashwat14@TensorFlow-Tutorials/TensorFlow - Autoencoder.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cchen23@BrainIntensive/WidgetTest.ipynb": {"API": [], "module": ["IPython", "ipywidgets"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/madHatter106@Matchups/Getting_matchup_L1As.ipynb": {"API": [["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.path.join", "os.path.join", "os.path.join", "os.path.exists", "pickle.dump", "os.path.join", "re.findall", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.join", "os.path.exists", "subprocess.Popen", "itertools.islice", "os.path.join", "glob.iglob", "pickle.dump", "multiprocessing.cpu_count", "os.path.join", "os.path.join", "os.path.join", "datetime.datetime.now"], []], "module": ["netCDF4", "matplotlib", "pandas", "numpy", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JunyaZ@K-means-/kmeans_modified.ipynb": {"API": [["math.sqrt", "random.seed", "random.sample", "math.pow"]], "module": ["seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/anthonyray@particle-filters/Particle filter.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kkumer@test01/test.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mircealex@Movie_ratings_2016_17/Mv_ratings_project.ipynb": {"API": ["matplotlib.pyplot.style.use", "matplotlib.pyplot.subplots", "matplotlib.pyplot.figure.suptitle", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.show", "matplotlib.pyplot.style.use", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.suptitle", "matplotlib.pyplot.show", "pandas.read_csv", "pandas.read_csv.head", "matplotlib.pyplot.style.use", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.suptitle", "matplotlib.pyplot.show", "pandas.read_csv", "matplotlib.pyplot.subplots", "matplotlib.pyplot.figure.set_size_inches", "matplotlib.pyplot.figure.suptitle", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.show", "pandas.read_csv", "pandas.read_csv.head", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.suptitle", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.show", "matplotlib.pyplot.figure.savefig", "matplotlib.pyplot.subplots", "matplotlib.pyplot.figure.set_size_inches", "matplotlib.pyplot.figure.suptitle", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.show", "matplotlib.pyplot.subplots", "matplotlib.pyplot.figure.suptitle", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.show", "numpy.random.normal", "numpy.arange", "numpy.random.normal", "pandas.read_csv.corr"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/blado-runnero@first-neural-network/Your_first_neural_network.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/triwandaseptian@JUPYTER_NOTEBOOK_analisis-data-freebsd/allattack-freebsd-tcpdump.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vaibhav9518@Driving-Profile/Vehicle.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/harlfoxem@TechnicalTest/Amadeus_1st_Test.ipynb": {"API": ["csv.reader", "csv.reader", "pandas.read_csv", "pandas.read_csv"], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Michany@Intermediate-Economics/exchange application.ipynb": {"API": [["sys.path.append"], ["time.time", "random.uniform", "random.uniform", "re.findall", "time.time", "re.findall"], ["numpy.zeros", "numpy.zeros", "numpy.zeros.dot", "numpy.zeros", "numpy.shape"], ["re.findall"], []], "module": ["matplotlib", "numpy", "sympy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DeepakLabh@notebooks/Grocery.ipynb": {"API": [], "module": ["keras", "numpy", "matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Rhomi@Stanford-CS231n-Exercises/SVM Loss Function in Numpy.ipynb": {"API": ["numpy.maximum", "numpy.sum"], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cxxxw@uva-master-ai/information-retrieval/evaluation-measures.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/singh-hrituraj@Mini-Projects-on-GANs/Implementation.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/agupta98@Capstone/Titanic_Survival/DataAnalysis.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ASukhanov@Control/lti.ipynb": {"API": [["scipy.signal.lti", "scipy.signal.lti", "numpy.sqrt", "scipy.signal.tf2zpk", "scipy.signal.lti", "numpy.sqrt", "scipy.signal.tf2zpk"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mat-esp-2016@python-3-python-3-luis-victor-e-felipe/Python 3.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ValentinVincentNoel@HighwayAndClassicalNeuronalNetworkComparision/HighwayAndClassicalNeuronalNetworkComparision.ipynb": {"API": [], "module": ["torch", "numpy", "matplotlib", "torchvision"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/errearanhas@learning_from_data/exercise_0.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/YungChunLu@AIND-NLP-Capstone/machine_translation.ipynb": {"API": [["numpy.array", "numpy.all", "numpy.all", "numpy.concatenate", "numpy.full"], ["os.path.join"]], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yihui-he@Single-Layer-neural-network-with-PCAwhitening-Kmeans/tryhere.ipynb": {"API": [[], ["numpy.concatenate", "numpy.concatenate", "cPickle.load", "numpy.array", "os.path.join", "os.path.join"], [], [], [], [], [], [], [], []], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/salsaif@AST-ADM/MCTS Mode 1 vs Mode 2 comparison.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mbillig@LordOfTheRings/Tolkien_Exploration.ipynb": {"API": [], "module": ["gensim"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/FunOnTheUpfield@DataVicGovAuPTDataCleaner/BusBoardingAlighting_DataCleaner.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/physics91si@aamnahkhalid-lab9/Lab 9.ipynb": {"API": [["math.sqrt", "sys.exc_info", "sys.exc_info"], ["numpy.zeros", "numpy.zeros", "numpy.subtract", "numpy.sqrt"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DivyanshuGola@Simulation-of-inviscid-flow-over-infinite-cylinder/Fluid coding homework.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/akul08@cifar10_keras/Cifar10_keras.ipynb": {"API": [], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vpolyakov@Stepic_course_Python_1/\u0414\u0432\u0443\u0445\u043c\u0435\u0440\u043d\u044b\u0435 \u0441\u043f\u0438\u0441\u043a\u0438.ipynb": {"API": [[]], "module": ["numpy", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hp2070@Runge-Kutta-4-ordem-Adam-Bash/RK4.RK3+Adam.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shamindrasorg@reproducible_data_analysis_jnb/jupyter/chap01_loading_and_visualizing_data.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AI-ON@TheConsciousnessPrior/src/comments/cp-in-an-observational-settings.ipynb": {"API": [[], ["environments.billiards.Billiards", "numpy.array.make_frames", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.animation.FuncAnimation", "matplotlib.animation.FuncAnimation.save", "numpy.array"], ["environments.moving_mnist.MovingMNIST", "environments.moving_mnist.MovingMNIST.get_batch", "matplotlib.pyplot.figure", "matplotlib.animation.FuncAnimation", "matplotlib.animation.FuncAnimation.save", "matplotlib.pyplot.imshow"], ["tensorflow.reduce_sum"], ["tensorflow.Variable", "tensorflow.placeholder", "models.representation.representation", "models.consciousness.consciousness", "models.generator.generator", "environments.billiards.Billiards", "tensorflow.Session", "tensorflow.global_variables_initializer"], [], [], ["numpy.zeros", "numpy.random.randn", "numpy.sqrt", "builtins.range", "numpy.zeros", "numpy.meshgrid", "builtins.range", "numpy.array", "numpy.array", "builtins.range", "builtins.range", "numpy.random.rand.sum", "builtins.range", "builtins.range", "numpy.arange", "builtins.range", "builtins.range", "builtins.range", "builtins.range", "builtins.range", "builtins.range", "numpy.exp", "numpy.random.rand", "builtins.range", "builtins.range", "numpy.abs", "numpy.dot", "numpy.dot", "numpy.abs"], ["builtins.range", "builtins.range", "numpy.load", "numpy.load.close", "numpy.zeros", "numpy.random.choice", "numpy.vstack", "numpy.vstack", "builtins.range", "numpy.clip", "builtins.range", "numpy.random.choice", "numpy.random.choice", "numpy.random.choice", "numpy.random.choice"], [], ["tensorflow.contrib.layers.fully_connected", "tensorflow.contrib.rnn.GRUCell.zero_state", "tensorflow.unstack", "tensorflow.concat", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.matmul", "tensorflow.nn.top_k", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.nn.top_k", "tensorflow.slice", "tensorflow.slice", "tensorflow.nn.softmax", "utils.attention_utils._rowwise_unsorted_segment_sum", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.variable_scope", "tensorflow.stack", "tensorflow.stack", "tensorflow.einsum", "tensorflow.reshape", "tensorflow.expand_dims", "tensorflow.to_float", "tensorflow.contrib.rnn.GRUCell", "tensorflow.stack.append", "tensorflow.stack.append", "tensorflow.nn.softplus", "tensorflow.random_normal", "tensorflow.shape"], ["tensorflow.one_hot", "tensorflow.multiply", "tensorflow.unstack", "tensorflow.unstack", "tensorflow.contrib.rnn.GRUCell.zero_state", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.variable_scope", "tensorflow.stack", "tensorflow.contrib.rnn.GRUCell", "tensorflow.stack.append"], ["tensorflow.contrib.rnn.GRUCell.zero_state", "tensorflow.unstack", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.leaky_relu", "tensorflow.layers.conv2d", "tensorflow.layers.batch_normalization", "tensorflow.nn.leaky_relu", "tensorflow.layers.conv2d", "tensorflow.layers.batch_normalization", "tensorflow.nn.leaky_relu", "tensorflow.layers.conv2d", "tensorflow.layers.batch_normalization", "tensorflow.nn.leaky_relu", "tensorflow.layers.flatten", "tensorflow.layers.dense", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.variable_scope", "tensorflow.stack", "tensorflow.contrib.rnn.GRUCell", "tensorflow.stack.append"], [], ["tensorflow.unstack", "tensorflow.unsorted_segment_sum", "tensorflow.reshape", "tensorflow.shape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.div", "tensorflow.range"]], "module": ["matplotlib", "numpy", "utils", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/FrancescaDr@SPML/Graph_QLearning.ipynb": {"API": [[], [], [], [], ["numpy.ones", "numpy.zeros", "pandas.DataFrame", "numpy.divide", "functools.reduce", "itertools.product", "numpy.multiply"], [], ["os.getcwd", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "re.findall", "re.findall", "re.findall", "re.findall", "commands.getoutput", "commands.getoutput"], ["os.getcwd", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.path.join", "os.path.join", "re.findall", "re.findall", "re.findall", "re.findall", "subprocess.check_output", "subprocess.check_output"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AnneleneD@thanksgiving/Basics.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gpguerra7@European-Football-Stats-Project/Capstone 1.ipynb": {"API": [], "module": ["matplotlib", "pandas", "scipy", "statsmodels", "numpy", "seaborn", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Junlinn@Monte-Carlo-Simulation/mc_pi.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tddevlin@BMCM/pokemonPo.ipynb": {"API": [["pandas.read_csv", "pandas.read_csv.head", "pandas.DataFrame", "numpy.zeros", "pandas.read_csv.iterrows", "matplotlib.pyplot.style.use", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.set_aspect", "matplotlib.pyplot.gca.set_xticks", "matplotlib.pyplot.gca.set_xticklabels", "matplotlib.pyplot.gca.set_yticks", "matplotlib.pyplot.gca.set_yticklabels", "matplotlib.pyplot.gca.set_title", "matplotlib.pyplot.pcolor", "matplotlib.pyplot.colorbar", "matplotlib.pyplot.savefig", "numpy.zeros", "pandas.read_csv.iterrows", "matplotlib.pyplot.style.use", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.set_aspect", "matplotlib.pyplot.gca.set_xticks", "matplotlib.pyplot.gca.set_xticklabels", "matplotlib.pyplot.gca.set_yticks", "matplotlib.pyplot.gca.set_yticklabels", "matplotlib.pyplot.gca.set_title", "matplotlib.pyplot.pcolor", "matplotlib.pyplot.colorbar", "matplotlib.pyplot.savefig", "matplotlib.pyplot.style.use", "matplotlib.pyplot.hist", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.savefig", "numpy.zeros", "numpy.mean", "numpy.var", "matplotlib.mlab.normpdf", "matplotlib.pyplot.style.use", "matplotlib.pyplot.hist", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.plot", "matplotlib.pyplot.savefig", "numpy.linspace", "numpy.sqrt", "numpy.linspace", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/morell5@Laboratory-work-in-physics/Laboratory-work-in-physics/Lab0 Cp , Cv.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/oysteingrondahl@ipynb-first-test/Test.ipynb": {"API": ["numpy.random.seed", "matplotlib.pyplot.subplots", "matplotlib.pyplot.setp", "matplotlib.pyplot.show", "numpy.random.normal"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nxtien@network.security/kdd_rnn.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hudbuz@algos/Untitled2.ipynb": {"API": [], "module": ["networkx", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Thatguy027@CMBD/Scripts/CMBD_bacteria.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chiuhu@FBI-Gun-Data-project/FBI Gun Data.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/andrehuang@TensorFlow-Learning/Brief intro to keras models.ipynb": {"API": [], "module": ["keras"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yoni-is-learning@first_network/Playing with Numpy arrays.ipynb": {"API": [["pandas.read_csv", "pandas.concat.head", "pandas.concat.plot", "pandas.concat.drop", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.ylim", "matplotlib.pyplot.subplots", "pandas.to_datetime", "numpy.array", "numpy.array", "unittest.TestLoader.loadTestsFromModule", "unittest.TextTestRunner.run", "pandas.get_dummies", "pandas.concat", "numpy.mean", "numpy.random.choice", "numpy.random.normal", "numpy.random.normal", "numpy.zeros", "numpy.zeros", "numpy.dot", "numpy.dot", "numpy.arange", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "unittest.TestLoader", "unittest.TextTestRunner", "numpy.array", "numpy.array", "numpy.dot", "numpy.dot", "numpy.array", "numpy.all", "numpy.allclose", "numpy.allclose", "numpy.allclose", "numpy.array", "numpy.array", "numpy.exp", "numpy.dot", "numpy.exp"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rodgzilla@machine_learning_mandelbrot_neural_network/nbs/fractal_understanding.ipynb": {"API": [], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/paolelw@DeepLearning/Stock3.ipynb": {"API": [["pandas.read_csv", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_mean", "numpy.mean", "numpy.std", "numpy.array.extend", "tensorflow.random_normal", "tensorflow.constant", "tensorflow.random_normal", "tensorflow.constant", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.nn.rnn_cell.LSTMCell", "tensorflow.nn.dynamic_rnn", "tensorflow.reshape", "tensorflow.square", "tensorflow.Session", "numpy.average", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.array", "numpy.array", "numpy.array", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.global_variables_initializer", "numpy.array.extend", "tensorflow.reshape", "tensorflow.reshape", "numpy.array", "numpy.array", "numpy.abs"], "pandas.read_csv", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_mean", "numpy.mean", "numpy.std", "numpy.array.extend", "tensorflow.random_normal", "tensorflow.constant", "tensorflow.random_normal", "tensorflow.constant", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.nn.rnn_cell.LSTMCell", "tensorflow.nn.dynamic_rnn", "tensorflow.reshape", "tensorflow.square", "tensorflow.Session", "numpy.average", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.array", "numpy.array", "numpy.array", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.global_variables_initializer", "numpy.array.extend", "tensorflow.reshape", "tensorflow.reshape", "numpy.array", "numpy.array", "numpy.abs"], "module": ["matplotlib", "numpy", "tensorflow", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sijanonly@python-tutorial/7. Utilities/2. Datetime.ipynb": {"API": [], "module": ["matplotlib", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CodeRed1704@Alphabet-Recognition-Using-Keras/Alphabet Recognition.ipynb": {"API": [], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kloiga@PhysTec-UF/CMS_massplot.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv.head", "matplotlib.pyplot.hist", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/eightynine01@TfLops/PlaceholderAndVariable.ipynb": {"API": [["tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.add", "tensorflow.Session", "tensorflow.Session.close", "tensorflow.Session.run", "tensorflow.Session.run"], ["numpy.array", "numpy.array", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits_v2", "tensorflow.Session.run", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run"], ["numpy.loadtxt", "numpy.transpose", "numpy.transpose", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.Session", "tensorflow.train.Saver", "tensorflow.train.get_checkpoint_state", "tensorflow.global_variables.save", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_uniform", "tensorflow.matmul", "tensorflow.random_uniform", "tensorflow.matmul", "tensorflow.random_uniform", "tensorflow.nn.softmax_cross_entropy_with_logits_v2", "tensorflow.global_variables", "tensorflow.train.checkpoint_exists", "tensorflow.global_variables.restore", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run"], ["tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.close", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run"], []], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/anastasiaonion@Math_of_Intelligence/Week 1 Gradient descend/gradient_descend.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jyotinayak1976@intro-to-tensorflow/Convolutional neural network.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tarjin@Toronto_Open_Data/Toronto Casino Survey Feedback 2013 - Strongly Favour WordCloud.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shellywhen@Hierarchical-Graph-Layout/code/data/data process/formalize.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/anildharni@Introduction-to-machine-learning-with-python-Training-material-part-1/Probability and Statistics.ipynb": {"API": [], "module": ["IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/christinamarpar@banking-deserts-explore/Banking_Deserts_Exp1.ipynb": {"API": ["matplotlib.style.use", "pandas.read_csv", "pandas.read_csv.head", "pandas.read_csv.sample", "matplotlib.pyplot.scatter", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "matplotlib.pyplot.scatter", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.xlim", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "matplotlib.pyplot.scatter", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "matplotlib.pyplot.scatter", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "matplotlib.pyplot.scatter", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "requests.get", "requests.get"], "module": ["config", "matplotlib", "pandas", "numpy", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/data-science-lab@bowtie/scripts/subwayNetworkEfficiency.ipynb": {"API": [[], ["logging.basicConfig", "logging.warning", "logging.info", "logging.debug"], ["logging.basicConfig", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.Formatter", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler", "networkx.DiGraph", "logging.info", "logging.debug", "networkx.DiGraph.to_undirected", "logging.info", "logging.info", "threading.Lock", "threading.Thread", "threading.Thread", "threading.Thread", "threading.Thread", "threading.Thread", "threading.Thread.start", "threading.Thread.start", "threading.Thread.start", "threading.Thread.start", "threading.Thread.start", "threading.Thread.join", "threading.Thread.join", "threading.Thread.join", "threading.Thread.join", "threading.Thread.join", "logging.info", "logging.info", "networkx.DiGraph.add_edge", "networkx.info", "networkx.DiGraph.edges", "networkx.DiGraph.nodes", "logging.info", "logging.getLogger", "threading.Lock.acquire", "networkx.shortest_path_length", "logging.debug", "logging.debug", "logging.debug", "threading.Lock.release", "threading.current_thread", "logging.exception", "threading.current_thread", "threading.current_thread", "threading.current_thread"], ["logging.basicConfig", "logging.warning", "logging.info", "logging.debug", "logging.info", "networkx.random_graphs.gnm_random_graph", "logging.info", "logging.info", "copy.deepcopy", "logging.info", "logging.info", "networkx.info", "networkx.NetworkXError", "networkx.random_graphs.gnm_random_graph.edges", "networkx.random_graphs.gnm_random_graph.nodes", "random.choice", "random.sample", "networkx.single_source_shortest_path_length", "networkx.single_source_shortest_path_length.values", "logging.debug", "logging.debug", "networkx.random_graphs.gnm_random_graph.edges", "networkx.random_graphs.gnm_random_graph.nodes", "networkx.random_graphs.gnm_random_graph.remove_edge", "networkx.random_graphs.gnm_random_graph.add_edge", "networkx.random_graphs.gnm_random_graph.subgraph", "networkx.random_graphs.gnm_random_graph.edges", "networkx.random_graphs.gnm_random_graph.edges", "networkx.bfs_successors"]], "module": ["matplotlib", "pandas", "statsmodels", "numpy", "networkx"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MeriannK@dr/DataRoot University DS100 Test #2_v5.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/monikaarya@Data-Analytics/Pyhton_Data_Science/LinearRegression/LinearRegression.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vyomshm@Anna-kaRNNa/Anna KaRNNa Name Scoped.ipynb": {"API": [], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/RocioJG@RocioJaimes_hw4/difusion_prueba.ipynb": {"API": [["numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.savefig", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.savefig", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.savefig", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.savefig", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.savefig", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.savefig", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.savefig", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.savefig", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.savefig"], ["numpy.zeros", "numpy.zeros", "numpy.zeros.copy", "numpy.zeros.copy"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/itorres2003@intro-python-course/intro_4_2_2_1_subsetting 2D numpy arrays.ipynb": {"API": [[], [], [], ["numpy.array"], [], []], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tedlie@DAND/bikes-sharing/Bay_Area_Bike_Share_Analysis.ipynb": {"API": [["matplotlib.pyplot.figure", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.xticks", "matplotlib.pyplot.hist", "matplotlib.pyplot.bar", "numpy.floor", "numpy.ceil"], ["babs_visualizations.usage_stats", "numpy.array", "numpy.allclose", "numpy.allclose", "numpy.array", "numpy.allclose", "numpy.array", "numpy.array_equal"]], "module": ["matplotlib", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jsubbie@hw4/PyCitySchools/PyCitySchools .ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bachsh@hydrodynamic/hydrodynamic-examples.ipynb": {"API": [["numpy.insert", "numpy.append", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.gradient", "numpy.insert", "numpy.append", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.gradient", "numpy.meshgrid", "numpy.zeros_like", "numpy.gradient", "numpy.gradient", "numpy.meshgrid", "numpy.meshgrid", "scipy.optimize.newton_krylov", "numpy.zeros", "numpy.linspace", "matplotlib.pyplot.figure", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.title", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.zeros_like", "numpy.linspace", "scipy.optimize.newton_krylov", "numpy.zeros", "numpy.zeros", "numpy.linspace", "numpy.gradient", "numpy.gradient", "numpy.meshgrid", "numpy.meshgrid", "numpy.ones_like", "scipy.optimize.newton_krylov", "numpy.ones_like", "scipy.optimize.anderson", "scipy.optimize.newton_krylov"], ["numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/felixdeecat@hello_world/Plot Sizes.ipynb": {"API": [[], ["seaborn.set", "numpy.random.seed", "numpy.random.normal", "seaborn.distplot", "numpy.random.multivariate_normal", "pandas.DataFrame", "seaborn.jointplot", "seaborn.jointplot", "matplotlib.pyplot.subplots", "seaborn.kdeplot", "seaborn.rugplot", "seaborn.rugplot", "seaborn.load_dataset", "seaborn.pairplot"], []], "module": ["matplotlib", "scipy", "pandas", "seaborn", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/00derek@share_notes/Gigwalkers cleaning.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/A-Jacobson@nicheNET/preparedata.ipynb": {"API": [["torch.save", "numpy.clip", "torch.max", "torch.utils.data.DataLoader", "tqdm.tqdm_notebook", "collections.defaultdict", "tqdm.tqdm_notebook", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "tqdm.tqdm_notebook", "numpy.array", "torch.utils.data.DataLoader", "tqdm.tqdm_notebook", "numpy.array", "torch.utils.data.DataLoader", "shutil.copyfile", "collections.defaultdict.append", "collections.defaultdict.append", "torch.autograd.Variable", "torch.autograd.Variable", "torch.max", "torch.autograd.Variable", "numpy.clip.sum", "torch.autograd.Variable", "torch.autograd.Variable", "collections.defaultdict.append", "collections.defaultdict.append", "torch.autograd.Variable", "torch.autograd.Variable", "torch.nn.functional.sigmoid", "torch.nn.functional.sigmoid", "torch.round"], ["numpy.loadtxt", "numpy.array", "torch.autograd.Variable", "os.path.join"], ["torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.functional.relu", "torch.nn.BatchNorm2d", "torch.nn.MaxPool2d", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.functional.relu", "torch.nn.BatchNorm2d", "torch.nn.AvgPool2d", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.functional.relu"], ["glob.glob", "os.path.join", "torch.FloatTensor", "os.path.split", "glob.glob", "torch.from_numpy", "os.path.join", "utils.stack_layers"]], "module": ["torch", "numpy", "torchvision", "tqdm"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Mixpap@tped/Hlios.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jorgecs92@Test2/La aplicaci\u00f3n de renormalizaci\u00f3n tiene siempre grado 2.ipynb": {"API": [], "module": ["numpy", "sympy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shivam042@Exploratory-Data-Analysis--Indian-Startup-Funding/Exploratory Data Analysis- Indian Startup Funding.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mainczjs@EuroSciPy2017-Notes/EuroSciPy2017 - Main Conference.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fairfield-university-is510-fall2017@movies-tonight-parts-1-4-hannahsawyer/MoviesTonightPart4.ipynb": {"API": [["pandas.DataFrame", "pandas.io.json.json_normalize", "requests.get", "requests.get"]], "module": ["requests", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/padalkars@Data-Science-Using-Python/Assignment+3.ipynb": {"API": [["pandas.DataFrame", "collections.Counter"]], "module": ["numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yuunaK@Farmburg_Project/microtransactions.ipynb": {"API": [], "module": ["scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CJL89@The-Gender-Gap-In-College-Degrees/The Gender Gap In College Degrees.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SWE582-Fall-2017-Bogazici@assignment2-denizgungor/Assignment2-Gradient descent_MinEpoch.ipynb": {"API": ["numpy.array", "numpy.array", "numpy.array", "numpy.vstack", "numpy.ones", "numpy.ones.dot", "numpy.sum"], "module": ["matplotlib", "IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/UWPreMAP@PreMAP2015/Lessons/Python_Loops_Files_Functions.ipynb": {"API": [[]], "module": ["astropy", "matplotlib", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kmeisner02@Data-Science---Kerry/projects/project-2/starter-code/Kerry Meisner Project 2.ipynb": {"API": [[]], "module": ["matplotlib", "scipy", "pandas", "seaborn", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/malvikasharan@SWC_reference_material/Python/SwC_python_session-2.ipynb": {"API": [["matplotlib.use", "matplotlib.pyplot.hist", "matplotlib.pyplot.savefig"]], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pnd-suburi@numpy100/numpy100.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JoelNik@Satellite-Data/ca_coverage_test_notebook.ipynb": {"API": [["shapely.geometry.shape", "json.loads", "shapely.geometry.shape", "shapely.geometry.mapping", "json.loads", "json.dumps"], ["json.loads"], ["requests.post", "json.loads", "requests.auth.HTTPBasicAuth"]], "module": ["shapely", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Shinichi-Nakagawa@pynyumon_baseball/hayato_sakamoto.ipynb": {"API": ["pandas.io.html.read_html", "pandas.io.html.read_html.drop", "seaborn.pointplot", "seaborn.pointplot", "seaborn.pointplot", "seaborn.pointplot", "seaborn.pointplot"], "module": ["numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/probie0@Neural-Networks-Practice-python/basic practice/Python Basics With Numpy v3.ipynb": {"API": [["numpy.random.rand", "numpy.random.rand", "time.time", "numpy.dot", "time.time", "time.time", "time.time"], ["numpy.array", "numpy.array", "numpy.zeros", "numpy.squeeze", "numpy.zeros", "numpy.array.reshape", "numpy.zeros_like", "numpy.array", "numpy.array", "numpy.array", "numpy.dot", "numpy.dot", "numpy.sum", "numpy.exp", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.log", "numpy.log", "numpy.mean", "numpy.mean", "numpy.abs", "numpy.abs"], ["numpy.random.rand", "numpy.random.rand", "time.time", "numpy.dot", "time.time", "time.time", "time.time"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/roshray@Dive-into-Sequence/RNN-01.ipynb": {"API": [], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/franktma@data_cleaning_analysis/data_analysis_full_iter1.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jpbarto@sagemaker_model_lifecycle/labs/03 ML Model Lifecycle - SageMaker API Lab.ipynb": {"API": [[], ["os.path.join", "flask.Flask", "flask.Flask.route", "flask.Flask.route", "os.path.isfile", "flask.Response", "flask.Response", "tensorflow.gfile.Exists", "os.listdir", "os.listdir", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.categorical_column_with_vocabulary_list", "tensorflow.feature_column.categorical_column_with_vocabulary_list", "tensorflow.feature_column.categorical_column_with_vocabulary_list", "tensorflow.feature_column.categorical_column_with_vocabulary_list", "tensorflow.feature_column.categorical_column_with_hash_bucket", "tensorflow.feature_column.bucketized_column", "tensorflow.estimator.RunConfig.replace", "tensorflow.gfile.Exists", "tensorflow.data.TextLineDataset", "tensorflow.gfile.Exists", "tensorflow.gfile.MkDir", "os.remove", "tensorflow.gfile.Open", "tensorflow.feature_column.crossed_column", "tensorflow.feature_column.crossed_column", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.embedding_column", "tensorflow.estimator.LinearClassifier", "tensorflow.decode_csv", "tensorflow.estimator.RunConfig", "tensorflow.ConfigProto", "tensorflow.estimator.DNNClassifier", "tensorflow.estimator.DNNLinearCombinedClassifier", "tensorflow.equal"]], "module": ["flask", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/onidzelskyi@clubnika_chat_grabber/Text_processing.ipynb": {"API": [[], [], [], [], [], [], ["flask.Flask", "flask.Flask.route", "flask.Flask.run"]], "module": ["flask"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ComputeCanada@2016-03-22-Universite-Laval/Analyse et visualisation de donn\u00e9es avec Python.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kjackyuan@MoonToday/monika_monitor.ipynb": {"API": [["multiprocessing.Pool", "hashlib.sha256.data.secretKey.hmac.new.hexdigest", "requests.get", "requests.post", "json.load", "os.path.exists", "os.path.exists", "hmac.new", "requests.get", "csv.writer", "csv.writer.writerow", "requests.get", "csv.writer", "csv.writer.writerow"]], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vault-42@AIND_RNN_Time_Series_Prediction_and_Text_Generation/RNN_project.ipynb": {"API": [["numpy.asarray", "numpy.asarray", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "numpy.shape", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.LSTM", "keras.layers.Dense"]], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/luy-foxit@algorithms/2.1 exercise.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nandhuvj@Python-Map/CollegeMap.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv.mean", "pandas.read_csv.mean", "folium.Map", "folium.FeatureGroup", "folium.Map.add_child", "folium.Map.add_child", "folium.Map.save", "folium.FeatureGroup.add_child", "folium.LayerControl", "folium.Marker", "folium.Icon"], "module": ["folium", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sanjeevbadgeville@Spark2-H2O-R-Zeppelin/notebooks/MachineLearning/TimeSeries/SF_Crime_Events/TimeSeriesForecasting.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/y-v-p@cancoldatabase/CanadaCollisions.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/seyunkim@Sentiment-Analysis-Playground/Plots.ipynb": {"API": [[], [], [], [], [], [], [], [], [], [], ["sys.stdout.write", "sys.stdout.write", "sys.stdout.flush", "pickle.load.most_common", "pickle.load.most_common", "random.shuffle", "pickle.load", "pickle.load"], [], [], [], [], [], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Jerryzhao-z@Lihang-s_algorithms/\u6734\u7d20\u8d1d\u53f6\u65af.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/josediaz0583@Academy_of_Py/Academy of Py.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fa473@jupytertest/test1.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tjcdev@University-of-Michigan---Applied-Data-Science-with-Python/Tom-Week-2.ipynb": {"API": [], "module": ["numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rebeccabilbro@viz/dados/Untitled2.ipynb": {"API": [["pandas.DataFrame"], [], [], [], ["sqlite3.connect", "sqlite3.connect.cursor", "sqlite3.connect.commit", "sqlite3.connect.close", "csv.DictReader"], ["xml.etree.ElementTree.parse", "xml.etree.ElementTree.parse.getroot"]], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/patricks1@phys-ua-72/hw13.ipynb": {"API": [], "module": ["matplotlib", "numpy", "astropy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/saiabhishekgv@Neural-Network/Hwk9/Hwk9.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Yurez23@MetOpt/MetOpt.ipynb": {"API": [["numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.linalg.norm", "numpy.array", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.array", "numpy.append", "numpy.linalg.norm", "numpy.array", "numpy.append", "numpy.linalg.norm", "numpy.array", "numpy.append", "numpy.array", "numpy.linalg.norm", "numpy.array", "numpy.linalg.norm", "numpy.array", "numpy.linalg.norm", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.max", "numpy.arange", "numpy.arange", "numpy.meshgrid", "numpy.arange", "matplotlib.pyplot.contour", "matplotlib.pyplot.colorbar", "matplotlib.pyplot.figure", "matplotlib.pyplot.scatter", "numpy.linalg.norm", "matplotlib.pyplot.scatter", "matplotlib.pyplot.show", "numpy.around", "numpy.around", "numpy.abs", "numpy.abs", "numpy.append", "numpy.linalg.norm", "numpy.append", "numpy.linalg.norm", "numpy.array", "numpy.linalg.norm", "numpy.append", "numpy.array", "numpy.linalg.norm", "numpy.append", "numpy.array", "numpy.linalg.norm", "numpy.dot", "numpy.append", "numpy.linalg.solve", "numpy.append", "numpy.linalg.norm", "numpy.linalg.solve", "numpy.append", "numpy.linalg.norm", "numpy.linalg.solve", "numpy.append", "numpy.linalg.norm", "numpy.linalg.norm", "matplotlib.pyplot.scatter", "matplotlib.pyplot.arrow", "numpy.sqrt", "numpy.sqrt", "numpy.min", "numpy.argmin", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.append", "numpy.linalg.norm", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.dot", "numpy.sqrt", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.array", "numpy.array"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/adasiek96@RPIS/Lab01student.ipynb": {"API": ["matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.hist", "matplotlib.pyplot.show", "numpy.loadtxt", "matplotlib.pyplot.hist", "matplotlib.pyplot.show", "math.exp", "random.randint", "random.uniform", "numpy.searchsorted"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Project-Ellie@academia/src/Discuss_Batch_Normalization.ipynb": {"API": [["os.path.join", "os.path.join", "os.path.join", "os.path.join", "gzip.open", "numpy.uint8.buf.numpy.frombuffer.astype", "gzip.open", "numpy.uint8.buf.numpy.frombuffer.astype", "numpy.frombuffer", "numpy.frombuffer"], ["batcher.MnistBatcher", "batcher.MnistBatcher"], ["batcher.MnistBatcher", "batcher.MnistBatcher", "batcher.MnistBatcher.has_more", "batcher.MnistBatcher.next_batch", "batcher.MnistBatcher.has_more", "batcher.MnistBatcher.next_batch", "batcher.MnistBatcher.next_batch", "batcher.MnistBatcher", "batcher.MnistBatcher.next_batch", "batcher.MnistBatcher.next_batch", "batcher.MnistBatcher.next_batch", "batcher.MnistBatcher", "batcher.MnistBatcher.next_batch", "batcher.MnistBatcher.reset", "batcher.MnistBatcher.has_more", "batcher.MnistBatcher.next_batch", "batcher.MnistBatcher.has_more", "batcher.MnistBatcher.has_more", "batcher.MnistBatcher.has_more", "batcher.MnistBatcher.has_more", "batcher.MnistBatcher.has_more"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/HUOd@dockerbuild/local/Bootstrap/bootstrap.ipynb": {"API": [["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "keras.backend.tensorflow_backend.set_session", "keras.preprocessing.text.Tokenizer", "keras.preprocessing.text.Tokenizer.fit_on_texts", "keras.preprocessing.text.Tokenizer.texts_to_sequences", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.layers.Input", "keras.layers.Input", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.concatenate", "keras.layers.LSTM", "keras.layers.LSTM", "keras.models.Model", "keras.optimizers.RMSprop", "keras.models.Model.compile", "keras.callbacks.ModelCheckpoint", "keras.models.Model.fit", "os.listdir", "os.listdir.sort", "numpy.array", "keras.layers.convolutional.Conv2D", "keras.layers.convolutional.Conv2D", "keras.layers.convolutional.Conv2D", "keras.layers.convolutional.Conv2D", "keras.layers.convolutional.Conv2D", "keras.layers.convolutional.Conv2D", "keras.layers.convolutional.Conv2D", "keras.layers.core.Flatten", "keras.layers.Dense", "keras.layers.core.Dropout", "keras.layers.Dense", "keras.layers.core.Dropout", "keras.layers.RepeatVector", "keras.layers.Embedding", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.Dense", "tensorflow.Session", "tensorflow.Session", "numpy.array", "numpy.array", "numpy.array", "numpy.load", "numpy.array.append", "tensorflow.ConfigProto", "tensorflow.ConfigProto", "keras.preprocessing.sequence.pad_sequences", "keras.utils.to_categorical"], ["os.path.basename", "os.path.basename"], ["os.path.basename", "os.path.basename"], ["os.path.basename", "os.path.basename"], ["json.load"], [], ["random.choice", "random.randint", "random.choice", "random.choice"], []], "module": ["keras", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yang-zhang@evaluation/ex4/Untitled.ipynb": {"API": [["math.pow", "decimal.Decimal"], ["math.pow", "math.pow", "math.pow"], [], [], [], [], ["itertools.combinations"], [], [], ["sqlite3.connect", "sqlite3.connect.cursor", "sqlite3.connect.commit", "sqlite3.connect.close", "sqlite3.connect", "sqlite3.connect.cursor", "sqlite3.connect.commit", "sqlite3.connect.close", "sqlite3.connect", "sqlite3.connect.cursor", "sqlite3.connect.commit", "sqlite3.connect.close", "csv.DictReader", "csv.DictReader", "csv.DictReader"], ["math.sqrt", "math.sqrt", "math.sqrt", "math.pow", "math.pow", "math.pow", "math.pow", "math.pow", "math.pow"], [], [], ["random.randint"], ["sqlalchemy.ext.declarative.declarative_base", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.orm.relationship", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.orm.relationship", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.orm.relationship", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.orm.relationship", "sqlalchemy.Sequence", "sqlalchemy.String", "sqlalchemy.String", "sqlalchemy.Sequence", "sqlalchemy.String", "sqlalchemy.String", "sqlalchemy.String", "sqlalchemy.orm.backref"], [], ["pandas.read_csv", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.concat", "pandas.read_csv.groupby", "pandas.DataFrame.groupby", "pandas.DataFrame.groupby", "pandas.concat.sort_values", "pandas.concat.sort_values"], ["pandas.read_csv", "pandas.DataFrame"]], "module": ["matplotlib", "numpy", "sqlalchemy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MhamzaM@ML/Neural Network (2 layer Architecture).ipynb": {"API": [["random.randrange", "random.randrange", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jdale7@first-python-notebook/notebooks/Untitled.ipynb": {"API": [], "module": ["matplotlib", "ipywidgets", "pandas", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mat-esp-2015@integracao-mmm/tarefa-integracao.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yungkuo@Oxford-NIM/Oxford Nanoimager-- dual view analysis.ipynb": {"API": [["os.listdir", "numpy.arange", "numpy.arange", "numpy.reshape", "numpy.mean", "numpy.sum.mean", "numpy.sum", "numpy.sum.mean", "numpy.arange", "numpy.arange", "numpy.mean", "numpy.sum", "numpy.reshape", "numpy.max", "numpy.max", "numpy.mean", "numpy.mean", "numpy.append", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.append", "numpy.mean", "numpy.std", "numpy.std"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jjuya@Algorithms/Programmers/Level 2.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ajmendez@numerousobject/notebook/api_example.ipynb": {"API": [["pprint.pprint", "requests.session", "os.path.join", "os.path.exists", "os.path.join", "time.mktime", "datetime.timedelta.total_seconds", "numpy.save", "os.path.join", "os.remove", "datetime.datetime.fromtimestamp", "os.path.exists", "os.makedirs", "os.path.join", "os.path.exists", "time.mktime", "datetime.datetime.now.timetuple", "numpy.load", "datetime.timedelta.total_seconds", "numpy.arange", "os.path.exists", "os.makedirs", "os.path.join", "os.path.dirname", "os.path.exists", "sys.stdout.flush", "datetime.datetime.now.timetuple", "datetime.timedelta", "datetime.timedelta.total_seconds", "numpy.concatenate", "datetime.datetime.fromtimestamp", "os.path.exists", "os.makedirs", "sys.stdout.write", "sys.stdout.write", "datetime.datetime.now", "os.stat", "datetime.timedelta", "numpy.floor", "datetime.datetime.fromtimestamp", "datetime.datetime.now", "datetime.timedelta", "os.path.expanduser"], []], "module": ["numpy", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/RawIron@etl-aggregate-tb/data-distributions.ipynb": {"API": [[], ["collections.Counter.update", "functools.reduce", "functools.reduce", "collections.Counter.update", "functools.reduce", "timeit.timeit", "csv.reader", "collections.Counter", "collections.Counter.update", "collections.Counter.items", "collections.Counter", "collections.Counter.update"], ["collections.Counter", "collections.Counter", "timeit.timeit", "csv.reader", "collections.Counter.update", "collections.Counter.items", "collections.Counter.update"]], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/samnelsonudacity@boston_housing/notebooks/notebook.ipynb": {"API": ["pandas.read_csv", "os.listdir", "pandas.read_csv.head"], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/heyKim@learn-to-tensorflow/linear_regression_tensorflow.ipynb": {"API": ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "numpy.random.normal", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.square", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.show", "numpy.random.normal", "tensorflow.global_variables_initializer"], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/udacity@PyTorchCrashCourse/Part 2 - Training Neural Networks.ipynb": {"API": [["torch.nn.MSELoss", "torch.optim.Adam", "torch.autograd.Variable", "torch.autograd.Variable", "matplotlib.pyplot.subplots", "matplotlib.pyplot.subplots", "numpy.arange", "numpy.arange", "numpy.arange.astype", "numpy.arange"]], "module": ["matplotlib", "numpy", "torch", "torchvision"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/csh3l3-2017b@0a-heroes-gree4wy/TUGAS0A(1).ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/foofa-uys@Other/Graph.ipynb": {"API": ["networkx.MultiDiGraph", "networkx.MultiDiGraph.add_weighted_edges_from", "networkx.MultiDiGraph.edges", "networkx.MultiDiGraph.number_of_nodes", "networkx.MultiDiGraph.number_of_edges", "networkx.is_connected", "networkx.number_connected_components", "networkx.draw", "networkx.node_connected_component", "networkx.connected_component_subgraphs", "networkx.Graph", "networkx.Graph", "networkx.connected_components", "networkx.Graph", "networkx.MultiDiGraph", "networkx.MultiDiGraph.add_weighted_edges_from", "networkx.Graph", "networkx.average_clustering", "networkx.transitivity", "networkx.average_shortest_path_length", "networkx.diameter", "networkx.eccentricity", "networkx.radius", "networkx.periphery", "networkx.center", "networkx.Graph", "networkx.Graph"], "module": ["matplotlib", "networkx"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/arjunchndr@Analyzing-CIA-Factbook-Data-Using-SQLite-and-Python/Analyzing CIA Factbook Data Using SQLite and Python.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/BryanWilhite@guido-van-r-snake/hettinger-on-iterables/iterables.ipynb": {"API": [[], ["numpy.linspace", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.sin"], [], [], [], [], ["collections.namedtuple", "doctest.testmod"], [], ["collections.ChainMap.items", "collections.defaultdict", "collections.defaultdict", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "collections.ChainMap.update", "collections.ChainMap.update", "collections.ChainMap", "collections.ChainMap.keys", "collections.ChainMap.get", "collections.ChainMap.setdefault"], [], ["collections.deque.pop", "collections.deque.insert", "collections.deque", "collections.deque.popleft", "collections.deque.appendleft"], ["functools.lru_cache"], [], ["os.path.dirname", "functools.partial"], [], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mdos@datascienceintensive/sliderule_dsi_json_exercise.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wangjiahong666@Expedia-kaggle/Expedia.ipynb": {"API": [], "module": ["numpy", "xgboost", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ytsheng@RL_intro/Chapter_2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/suman-d@PythonExpress2016/Day2-Lecture1.ipynb": {"API": [[], ["unittest.main", "class_sol.Person", "class_sol.Address", "class_sol.Address", "class_sol.Github", "class_sol.Github", "class_sol.Person.is_major", "class_sol.Address.is_valid_pincode", "class_sol.Address.is_valid_pincode"], [], [], [], [], ["requests.get", "requests.get"], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []], "module": ["IPython", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/h-ann@Kaggle-Titanic/TitanicAnalysis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fzenke@gpwrap/examples.ipynb": {"API": [["numpy.random.rand", "tempfile.mkdtemp", "os.mkdir", "os.mkdir", "numpy.savetxt", "os.system", "os.path.splitext", "shutil.rmtree", "shutil.copy", "numpy.vstack", "os.path.basename"]], "module": ["IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/woutvaniperen@Assignments/assignment3.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JGregoir@Stock-Market-Analysis/Project 2 - Stock Market Analysis.ipynb": {"API": [], "module": ["matplotlib", "pandas_datareader", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/envhyf@Notebook/SO2&NO2.\u76d1\u6d4b\u70b9\u4f4d\u5e03\u8bbe\u65b9\u6848.ipynb": {"API": ["IPython.display.HTML"], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/TJFlynn@AIND-RNN/RNN_project.ipynb": {"API": [["numpy.asarray", "numpy.asarray", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "numpy.shape", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.Activation", "numpy.asarray.append", "numpy.asarray.append"]], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/eveafeline@356610data_science/jup-notebook/Class Notes/October 19 Class Notes.ipynb": {"API": [["PyQt5.QtWidgets.QFileDialog.getOpenFileName", "sys.exit", "csv.reader"]], "module": ["matplotlib", "numpy", "PyQt5", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CCT490H5F-SocialDataAnalytics@lab_05/Lab 5 - APIs.ipynb": {"API": [["time.sleep", "time.strftime", "json.loads", "time.strftime", "json.loads", "json.loads"]], "module": ["tweepy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/super-cache-money@big-fat-python-grind/day1-introduction/slides/BFPG_Introduction.ipynb": {"API": [[], ["flask.Flask", "flask.ext.sqlalchemy.SQLAlchemy", "flask.Flask.route", "flask.ext.sqlalchemy.SQLAlchemy.Column", "flask.ext.sqlalchemy.SQLAlchemy.Column", "flask.ext.sqlalchemy.SQLAlchemy.Column", "flask.ext.sqlalchemy.SQLAlchemy.Column", "flask.render_template", "flask.ext.sqlalchemy.SQLAlchemy.create_all", "flask.Flask.run", "flask.ext.sqlalchemy.SQLAlchemy.String", "flask.ext.sqlalchemy.SQLAlchemy.Text", "flask.flash", "flask.flash", "flask.flash"], ["flask.Flask", "flask.Flask.route", "flask.Flask.run"]], "module": ["flask"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Nisha77000@Kaggle-Prediction-prix-/KAGGLE PR\u00c9DICTION DES PRIX.ipynb": {"API": [["pandas.read_csv", "pandas.read_csv", "pandas.read_csv"]], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mikivujkovic@Churn/Churn.ipynb": {"API": [], "module": ["numpy", "xgboost", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/abodacs@DAND_Project2_Investigate-a-Dataset/No show Appointments.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mat-esp@python-4/Python_4-aula.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hirshagarwal@MLExampleProjects/Workbook.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/avikulin@LearnPython/Calculus.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/saranaweera@nycghgemissions/GHGAnalysis2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nuzelac@ada-random-sort/Rezultati.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/caigaojiang@tensorflow_api_notebook/Reading from files.ipynb": {"API": [], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jonahthelion@Physics-191/muonLM/analysis/Final.ipynb": {"API": [[], [], ["matplotlib.pyplot.style.use", "numpy.random.seed", "matplotlib.pyplot.figure", "matplotlib.pyplot.hist", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.axvline", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.annotate", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "matplotlib.pyplot.figure", "matplotlib.pyplot.hist", "numpy.array", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.set_yscale", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.gca.axvline", "matplotlib.pyplot.title", "matplotlib.pyplot.annotate", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "numpy.array", "pandas.DataFrame", "numpy.arange", "numpy.argmax", "numpy.arange", "pandas.DataFrame.append"], [], [], [], ["matplotlib.style.use", "numpy.amax", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "numpy.random.random_sample", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "csv.reader", "numpy.asarray.append", "numpy.asarray", "numpy.asarray.append", "numpy.stack", "scipy.stats.linregress", "scipy.stats.linregress", "numpy.stack.append", "numpy.array"]], "module": ["matplotlib", "scipy", "pandas", "seaborn", "numpy", "tqdm"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Ghost980@TensorFlow_Examples/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jtemplon@columbia-lecture/sidewalk-cafes/checking-sidewalk-data.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tapsmarty@thinkful-1/old.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/niloofarnth@US_thanksgiving_dinner/US_Thanksgiving_dinner.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jespino@hola-mundo/Hola Mundo.ipynb": {"API": [["IPython.core.magic_arguments.magic_arguments", "IPython.core.magic_arguments.argument", "IPython.core.magic_arguments.parse_argstring", "tokenize.open"], [], [], ["pprint.pprint", "token.tok_name.get", "symbol.sym_name.get"]], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/HyeokjuJang@csv_concatenate/simple_concat.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/andersondsl@DataAnalystND/Nanodegree/P0/Data_Analyst_ND_Project0.ipynb": {"API": [["pandas.read_csv"], ["pandas.read_csv"]], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/danwolch@JupyterNotebooks/MAU-CDF/MAU Depth of Engagement.ipynb": {"API": [], "module": ["matplotlib", "sqlalchemy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mashiroyuya@FFT_IFFTsample/FFT_IFFTsample.ipynb": {"API": ["numpy.sin", "numpy.sin", "matplotlib.pyplot.plot", "scipy.fftpack.fft", "scipy.fftpack.fftfreq", "matplotlib.pyplot.plot", "numpy.savetxt", "numpy.loadtxt", "scipy.fftpack.ifft", "matplotlib.pyplot.plot", "numpy.arange", "numpy.abs", "numpy.abs", "numpy.degrees", "numpy.exp", "numpy.angle", "numpy.arange"], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aaronxhill@ml_explore/tests.ipynb": {"API": [["pandas.concat", "matplotlib.pyplot.hist", "pandas.DataFrame", "pandas.DataFrame", "numpy.where", "numpy.where"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sus007@Lynda_PythonDataAnalysis/Ch4/04_04/04_04_indexing_end.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/siftnoorsingh@course-planner/Generate_json.ipynb": {"API": [["pandas.read_excel", "json.dumps", "collections.defaultdict", "json.dumps", "json.dumps", "numpy.unique", "json.dumps", "json.dump", "numpy.unique", "json.dump", "numpy.unique", "numpy.unique", "numpy.unique", "json.dump", "json.dump"]], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jakekara@schools-db-data/pandas/college persistence for DB-TREND version.ipynb": {"API": [["re.sub", "requests.get", "requests.get", "requests.get", "re.sub"], [], []], "module": ["numpy", "requests", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Djamshed1@IS362_Assignment8/IS 362 \u2013 Week 8 Assignment.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JonComo@puck/puck.ipynb": {"API": [["numpy.clip", "pyglet.image.ImageData", "pyglet.image.ImageData.get_texture", "pyglet.gl.glTexParameteri", "pyglet.clock.get_default", "pyglet.gl.glLineWidth", "pyglet.graphics.Batch", "pyglet.graphics.draw", "pyglet.graphics.draw", "pyglet.graphics.draw", "pyglet.graphics.draw", "pyglet.text.Label", "numpy.clip.astype", "numpy.random.randint"]], "module": ["matplotlib", "pyglet", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/KellyVene@CDDP/Aula24/Aula24 - Regress\u00e3o Linear Simples.ipynb": {"API": [[]], "module": ["matplotlib", "ipywidgets", "scipy", "pandas", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/johngunaseelan@Json-Exercise/sliderule_dsi_json_exercise.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chubb@grid-storage/flywheel_liion_comparison.ipynb": {"API": [["numpy.array", "numpy.array", "numpy.interp", "numpy.exp", "numpy.all", "numpy.all", "numpy.log", "numpy.log", "numpy.log"], [], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "financial.PV", "financial.PV", "li_ion.UpdateBatteryCapacity", "numpy.array"], ["numpy.zeros", "numpy.size"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/BazingaSu@MNIST-digit-recognition/MNIST Deep Learning with Tensorflow.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.reset_default_graph", "tensorflow.reset_default_graph", "numpy.random.randint", "numpy.argmax", "numpy.zeros", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.contrib.layers.flatten", "tensorflow.contrib.layers.fully_connected", "tensorflow.reduce_mean", "numpy.random.seed", "math.floor", "tensorflow.global_variables_initializer", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.get_cmap", "tensorflow.nn.softmax_cross_entropy_with_logits", "numpy.random.permutation", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "tensorflow.argmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.cast.eval", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.train.AdamOptimizer", "numpy.squeeze", "tensorflow.argmax", "tensorflow.cast", "matplotlib.pyplot.get_cmap", "numpy.asarray", "numpy.asarray"], "module": ["matplotlib", "pandas", "keras", "numpy", "tensorflow", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mmadondo@cis4115/Participation 9 MNIST Keras.ipynb": {"API": [], "module": ["matplotlib", "numpy", "keras", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Neyt@First-Neural-Network/original.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hjurin@cs546-hw6/test_plotting.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sinaes@HousePriceAnalysis/HousePriceAnalysis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jo2232@Homework-10-Adv.-Data-Storage/data_engineering.ipynb": {"API": [["sqlalchemy.create_engine", "sqlalchemy.ext.automap.automap_base", "sqlalchemy.ext.automap.automap_base.prepare", "sqlalchemy.orm.Session", "flask.Flask", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.Flask.run", "numpy.ravel", "numpy.ravel", "numpy.ravel", "numpy.ravel", "numpy.ravel", "numpy.ravel", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query"]], "module": ["sqlalchemy", "flask", "matplotlib", "pandas", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nicholaspai@trading-analysis/trading/BTCvsTech_nb.ipynb": {"API": [["plotly.offline.init_notebook_mode", "os.listdir", "plotly.graph_objs.Scatter", "plotly.offline.iplot", "pandas.DataFrame", "plotly.graph_objs.Layout", "plotly.graph_objs.Figure", "plotly.offline.iplot", "plotly.graph_objs.Heatmap", "plotly.graph_objs.Layout", "plotly.graph_objs.Figure", "plotly.offline.iplot", "os.getcwd", "pickle.load", "plotly.graph_objs.Scatter", "quandl.get", "quandl.get.to_pickle", "datetime.datetime", "datetime.datetime", "quandl.get.corr"]], "module": ["quandl", "numpy", "plotly", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kevinfcleary@Skrump/Template/Test_01.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/robfox92@HockeyElo/Notebooks/K Factor Testing.ipynb": {"API": [["pandas.read_excel.sort_values", "pandas.read_excel.sort_values", "pandas.read_excel.unique", "pandas.read_excel.unique", "networkx.Graph", "networkx.Graph.add_nodes_from", "networkx.Graph.nodes", "networkx.max_weight_matching", "pandas.DataFrame", "networkx.max_weight_matching.keys", "pandas.read_excel", "pandas.read_excel", "pandas.read_excel", "pandas.read_excel", "pandas.read_excel", "pandas.read_excel", "random.choice", "pandas.read_excel.copy", "numpy.concatenate", "numpy.concatenate", "pandas.concat", "random.choice", "pandas.read_excel.copy", "numpy.concatenate", "numpy.concatenate", "pandas.concat", "networkx.Graph.nodes", "pandas.read_excel", "pandas.read_excel", "pandas.read_excel.unique", "pandas.read_excel.unique", "networkx.Graph.add_edge", "pandas.DataFrame.unique", "pandas.DataFrame.unique", "pandas.DataFrame.unique", "pandas.DataFrame.unique", "networkx.Graph.has_edge", "pandas.tslib.Timestamp.now"]], "module": ["networkx", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rventas@algebra/Practica_Raquel.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ellisbrandon20@csce489-DataScience-FinalProject/python/489 Project Notebook.ipynb": {"API": [[], [], []], "module": ["wordcloud", "matplotlib", "pandas", "numpy", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gigglegrig@MIE562-Scheduling-Project/MIE 561 Continuous Flow-shop Makespan.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nitishpandey16@Pandas_Repo/Series.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pratheeksh@cva3/Plot.ipynb": {"API": ["numpy.arange", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.grid", "matplotlib.pyplot.savefig", "matplotlib.pyplot.legend", "matplotlib.pyplot.show"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/freyachay@SaltMarsh/patcher.ipynb": {"API": [[], ["keras.backend.sum", "keras.backend.sum", "keras.backend.sum", "keras.backend.sum", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.show", "keras.backend.round", "keras.backend.round", "keras.backend.round", "keras.backend.round", "numpy.sum", "numpy.max", "keras.backend.clip", "keras.backend.clip", "keras.backend.epsilon", "keras.backend.clip", "keras.backend.clip", "keras.backend.epsilon", "matplotlib.pyplot.savefig", "matplotlib.pyplot.savefig"]], "module": ["matplotlib", "numpy", "keras", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rtomonaka@IntelligentSystem-Report2/classify-fashoin-minist.ipynb": {"API": ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "keras.utils.to_categorical", "keras.utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "keras.models.Sequential.evaluate", "os.path.join", "os.path.join", "keras.backend.image_data_format", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Dropout", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Dropout", "keras.layers.Dense", "gzip.open", "numpy.frombuffer", "gzip.open", "numpy.uint8.imgpath.read.np.frombuffer.reshape", "keras.optimizers.Nadam", "numpy.frombuffer"], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/imjacobclark@neuralnets/python/Petal Prediction.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yimeng928@ga-ds-jenny/Untitled.ipynb": {"API": ["spacy.load", "pandas.read_csv", "pandas.read_csv.head"], "module": ["matplotlib", "numpy", "spacy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ppoojita@JS_HW_plotly/bellybutton_diversity.ipynb": {"API": [["pandas.read_csv", "pandas.read_csv.set_index", "pandas.read_csv", "pandas.read_csv.set_index", "pandas.read_csv", "pandas.read_csv.set_index", "pandas.read_csv", "pandas.read_csv.set_index", "json.dumps", "json.loads"], ["flask.Flask", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.render_template", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.Flask.run"]], "module": ["sqlalchemy", "flask", "matplotlib", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Lilli91@16_06_2017_CNN/CNN_calcium_signalling_version3_22_06_2017.ipynb": {"API": [], "module": ["matplotlib", "scipy", "keras", "numpy", "tensorflow", "h5py"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/konrad@Binomialtest/Binominaltest.ipynb": {"API": ["matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.bar", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.patches.Rectangle"], "module": ["matplotlib", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/regirob831@my-first-python-notebook/Prop-63_analysis.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/seantab@seaborn/sns01.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gabrielsig@pursuit-of-happiness/World Happiness Analysis.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/drawadiagram@billboard_top_100/Billboard Scraping Top 100s.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/BuzzFeedNews@2016-09-ucr-analysis/notebooks/2016-09-ucr-analysis.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yonghuizhong@crawl_unplash_picture/test.ipynb": {"API": [["pymongo.MongoClient", "random.choice", "requests.get", "json.loads"], ["time.sleep", "get_all_links.alls.find.count", "get_all_links.alls.find"], ["get_all_links.get_urls"]], "module": ["pymongo", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/xxw128@bradford_data_parser/bradford_parser.ipynb": {"API": [["os.path.isfile", "pandas.read_csv"]], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/engrsriram@myfirst_neural_network/my_first_neural_network.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DataCarpenter@cetli_workhop1/datetime.ipynb": {"API": [[], [], []], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Akshaansh@First-Analysis/First+Analysis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CongChen2017@Numpy-Pandas/Pandas_PyCitySchools.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rodgzilla@machine_learning_fashion_mnist/nbs/cnn_model.ipynb": {"API": [], "module": ["keras", "utils", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yinagu@DI-2016/obesity.ipynb": {"API": [], "module": ["matplotlib", "pandas", "scipy", "numpy", "seaborn", "requests", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chengka7@tutorial/week 1.ipynb": {"API": [], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/xiaoran-2@Test-recommendation-system/readfile_code.ipynb": {"API": [["os.walk", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.sum", "numpy.average", "numpy.average", "numpy.sum", "numpy.array.extend", "numpy.array.extend", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "math.isnan", "operator.itemgetter", "csv.writer", "csv.writer.writerow", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "csv.writer.writerow", "numpy.sum"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mittrayash@Titanic-Survival-Prediction/Untitled.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bjmain@DE_analysis_coluzzii/single_hybrid_ASE_iplex.ipynb": {"API": ["pandas.read_csv", "pandas.read_table", "pandas.merge.drop", "pandas.read_csv", "pandas.merge.drop", "pandas.concat", "matplotlib.pyplot.title", "matplotlib.pyplot.suptitle", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.suptitle", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.suptitle", "matplotlib.pyplot.ylabel", "pandas.merge", "pandas.merge", "pandas.merge"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Ankruch@pr1/feature_engineering.ipynb": {"API": [[], []], "module": ["matplotlib", "requests", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cgman64@early-udacity/BikeShareAnalysis.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/RyanSCodes@Stock-Market-Analysis/Stock-Market-Analysis.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gdtm86@kaggle-cats-vs-dogs-redux/vgg16-cats-vs-dogs-v1.ipynb": {"API": [], "module": ["matplotlib", "scipy", "keras", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kokbent@cool-new-project/Untitled.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/apurva-gupta@Data-Analysis-In-Python/Ecommerce Purchases Exercises.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bikramb98@911-calls-analysis/911 calls analysis.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/renndarawali@enlace2016/misc.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mat-esp-2015@capstone-silas-gabriel-sidharta/capstone.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/adamosman@Analyzing-Movie-Reviews/Fandango Statistical Analysis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nazmiasri95@Simple-Linear-Regression-Using-Stochastic-Gradient-Descent/5.2 Simple Linear Regression Using Stochastic Gradient Descent .ipynb": {"API": ["matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "random.seed", "math.sqrt", "csv.reader", "random.randrange"], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wasif-balol@Panacloud-AI-Bootcamp/Bootcamp_10tasks.ipynb": {"API": [["requests.get", "matplotlib.scatter", "matplotlib.title", "matplotlib.ylabel", "matplotlib.show", "matplotlib.annotate"]], "module": ["matplotlib", "pandas", "numpy", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/emunsing@particleswarmdemo/PSO_Demo_Rastrigin.ipynb": {"API": ["numpy.array", "numpy.array", "numpy.linspace", "numpy.linspace", "numpy.meshgrid", "matplotlib.pyplot.plot", "matplotlib.pyplot.imshow", "matplotlib.pyplot.xticks", "matplotlib.pyplot.yticks", "matplotlib.pyplot.colorbar", "numpy.zeros", "numpy.linspace", "numpy.linspace", "numpy.sum", "numpy.random.seed", "copy.copy", "numpy.cos", "copy.copy", "numpy.random.rand", "numpy.random.rand", "numpy.multiply", "numpy.cos", "numpy.multiply", "numpy.random.rand", "numpy.random.rand", "copy.copy", "copy.copy", "numpy.multiply", "numpy.cos"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/berkando@kgl_hp/working/explore_data.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/boyentenbi@4G3/Q2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/97agarwalmanu@Paraphrase-Classification/Data Preprocessing .ipynb": {"API": [], "module": ["keras", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/richardbatty@careers-data-analysis/Careers data analysis.ipynb": {"API": [], "module": ["matplotlib", "ipywidgets", "pandas", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ruhama-ahale@Project1_Json/sliderule_dsi_json_solution.ipynb": {"API": [], "module": ["IPython", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/thejakeyboy@Python-Lectures/04.ipynb": {"API": [], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yanfengliu@Dynamic-Programming/Warrior_winrate.ipynb": {"API": [[], "numpy.zeros"], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/thwee-alchemist@TinyBlockchain/TinyBlockchain.ipynb": {"API": [["flask.Flask", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.run", "hashlib.sha256", "hashlib.sha256.update", "hashlib.sha256.hexdigest", "json.dumps", "datetime.datetime.now.isoformat", "flask.request.get_json", "datetime.datetime.now.isoformat", "flask.request.get_json", "json.dumps", "json.dumps", "json.loads", "datetime.datetime.now", "datetime.datetime.now", "flask.request.get"]], "module": ["flask"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cmarqu@misc/donutchart.ipynb": {"API": ["matplotlib.pyplot.subplots", "matplotlib.pyplot.get_cmap", "matplotlib.pyplot.setp", "matplotlib.pyplot.setp", "matplotlib.pyplot.show", "numpy.array", "numpy.arange"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Decent-Muse@Project/BUSY_pandas_cleaning_notebook.ipynb": {"API": [["xlrd.open_workbook", "xlrd.open_workbook.sheet_by_index", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.square", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.train.GradientDescentOptimizer", "tensorflow.global_variables_initializer"], ["pandas.read_csv"], ["pandas.read_csv", "pandas.to_datetime", "pandas.read_excel", "pandas.read_excel.set_index"], ["pandas.read_csv", "pandas.DataFrame.as_matrix", "pandas.to_datetime", "pandas.DataFrame.as_matrix", "time.asctime", "time.localtime", "time.time"], [], ["os.system"], ["xlrd.open_workbook", "xlrd.open_workbook.sheet_by_index", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.square", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.train.GradientDescentOptimizer", "tensorflow.global_variables_initializer"], ["pandas.read_csv", "pandas.DataFrame.as_matrix", "pandas.to_datetime", "pandas.DataFrame.as_matrix"], []], "module": ["matplotlib", "pandas", "xlrd", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tuanavu@data-science-notebooks/deep-learning/tensorflow-tutorials/3_Placeholders.ipynb": {"API": [["numpy.random.seed", "tensorflow.concat", "tensorflow.concat", "matplotlib.pyplot.cm.rainbow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.concat.append", "numpy.linspace", "matplotlib.pyplot.scatter", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.random.random"], ["numpy.random.seed", "functions.create_samples", "tensorflow.initialize_all_variables", "functions.plot_clusters", "tensorflow.Session"], ["weakref.WeakKeyDictionary"], [], ["time.localtime", "time.strftime", "time.strptime", "time.mktime", "time.strptime", "time.strftime", "datetime.datetime", "datetime.datetime.strptime.replace", "datetime.datetime.strptime", "datetime.datetime.strptime.timetuple", "time.mktime", "datetime.datetime.strptime", "pytz.timezone", "pytz.timezone.localize", "pytz.utc.normalize", "pytz.timezone", "pytz.timezone.normalize", "pytz.timezone", "pytz.timezone.normalize", "time.strptime", "logging.exception"], [], [], ["logging.exception", "logging.exception", "logging.exception"], [], [], ["logging.exception", "logging.error", "logging.error", "logging.error", "logging.error", "logging.exception", "logging.error", "logging.error"], ["logging.exception", "os.urandom", "os.urandom"], ["pickle.dumps", "pickle.loads", "copyreg.pickle", "pickle.dumps", "pickle.loads", "pickle.loads", "copyreg.pickle", "pickle.loads", "copyreg.dispatch_table.clear", "pickle.dumps", "copyreg.pickle", "pickle.dumps", "pickle.dump", "pickle.load", "pickle.load", "pickle.loads", "pickle.loads", "logging.exception", "logging.exception"], ["logging.exception"], [], [], ["time.time", "time.time", "time.time", "concurrent.futures.ThreadPoolExecutor", "time.time", "time.time", "concurrent.futures.ProcessPoolExecutor", "time.time", "concurrent.futures.ProcessPoolExecutor.map", "concurrent.futures.ProcessPoolExecutor.map"], ["logging.exception"], ["collections.defaultdict", "collections.defaultdict", "collections.defaultdict", "collections.defaultdict"], [], ["collections.namedtuple"], [], [], ["itertools.islice"], ["json.loads", "json.loads", "json.dumps"], ["datetime.datetime.now", "datetime.datetime.now", "datetime.timedelta", "datetime.datetime.now", "datetime.timedelta", "datetime.datetime.now"], ["queue.Queue", "threading.Thread", "threading.Thread.start", "queue.Queue.put", "threading.Thread.join", "queue.Queue", "threading.Thread", "threading.Thread.start", "queue.Queue.put", "queue.Queue.put", "threading.Thread.join", "queue.Queue", "queue.Queue.put", "queue.Queue.join", "threading.Thread.start", "time.sleep", "queue.Queue.get", "time.sleep", "queue.Queue.get", "queue.Queue.get", "queue.Queue.get", "queue.Queue.task_done", "threading.Thread.start", "collections.deque", "threading.Lock", "threading.Thread", "time.sleep"], [], ["collections.deque", "collections.deque.append", "collections.deque.append", "collections.deque.append", "collections.deque.popleft", "collections.OrderedDict", "collections.OrderedDict", "collections.defaultdict", "collections.OrderedDict.sort", "bisect.bisect_left", "random.randint", "collections.OrderedDict.values", "collections.OrderedDict.values", "timeit.timeit", "timeit.timeit"], ["sys.platform.startswith"], ["time.sleep", "time.sleep", "datetime.datetime.now", "datetime.datetime.now", "json.loads", "json.loads"], ["logging.exception", "logging.exception"], ["urllib.parse.parse_qs", "urllib.parse.parse_qs.get", "urllib.parse.parse_qs.get", "urllib.parse.parse_qs.get", "urllib.parse.parse_qs.get", "urllib.parse.parse_qs.get", "urllib.parse.parse_qs.get", "urllib.parse.parse_qs.get", "urllib.parse.parse_qs.get", "urllib.parse.parse_qs.get", "urllib.parse.parse_qs.get", "urllib.parse.parse_qs.get", "urllib.parse.parse_qs.get", "urllib.parse.parse_qs.get"], [], ["logging.exception", "logging.exception"], ["logging.exception", "logging.exception"], ["os.listdir", "tempfile.TemporaryDirectory", "tempfile.TemporaryDirectory", "threading.Thread", "os.listdir", "os.path.join", "os.path.join", "random.randint", "os.path.join"], ["threading.Barrier", "threading.Barrier", "threading.Barrier.wait", "threading.Thread", "threading.Thread.start", "threading.Thread.join", "threading.Lock"], ["tempfile.TemporaryDirectory"], ["functools.wraps", "pickle.dumps", "pickle.dumps", "logging.exception"], ["logging.exception", "logging.exception"], [], ["json.loads", "json.dumps", "json.loads", "json.dumps", "logging.exception"], ["logging.exception"], ["time.time", "time.time", "time.time", "time.time", "time.time", "time.time", "time.time", "time.time", "threading.Thread.start", "threading.Thread.join", "select.select", "threading.Thread", "threading.Thread.start", "threading.Thread.join", "socket.socket"], ["random.randint"], [], ["random.randint"], [], ["cProfile.Profile", "cProfile.Profile.runcall", "pstats.Stats", "pstats.Stats", "pstats.Stats.strip_dirs", "pstats.Stats.sort_stats", "pstats.Stats.print_stats", "cProfile.Profile", "cProfile.Profile.runcall", "pstats.Stats", "pstats.Stats.strip_dirs", "pstats.Stats.sort_stats", "pstats.Stats.print_stats", "cProfile.Profile", "cProfile.Profile.runcall", "pstats.Stats", "pstats.Stats.strip_dirs", "pstats.Stats.sort_stats", "pstats.Stats.print_stats", "pstats.Stats", "pstats.Stats.strip_dirs", "pstats.Stats.sort_stats", "pstats.Stats.print_callers", "random.randint", "bisect.bisect_left"], ["pprint.pprint", "pprint.pprint"], ["logging.exception"], ["json.loads", "json.loads", "json.loads", "json.dumps"], ["itertools.permutations"], [], ["threading.Lock", "threading.Lock.acquire", "logging.getLogger.setLevel", "logging.getLogger", "logging.getLogger.debug", "logging.getLogger.error", "threading.Lock.release", "logging.debug", "logging.error", "logging.debug", "logging.getLogger", "logging.getLogger.getEffectiveLevel", "logging.getLogger.setLevel", "logging.getLogger", "logging.getLogger.getEffectiveLevel", "logging.getLogger.setLevel", "logging.getLogger.debug", "logging.debug", "logging.getLogger", "logging.getLogger.setLevel", "logging.getLogger.setLevel"], [], ["subprocess.Popen", "subprocess.Popen", "time.time", "time.time", "time.sleep", "subprocess.Popen", "os.environ.copy", "subprocess.Popen", "os.urandom", "subprocess.Popen", "os.urandom"], [], ["decimal.Decimal", "decimal.Decimal", "decimal.Decimal.quantize", "decimal.Decimal", "decimal.Decimal", "decimal.Decimal.quantize", "decimal.Decimal", "decimal.Decimal", "decimal.Decimal", "decimal.Decimal"], ["collections.namedtuple", "collections.namedtuple"], ["logging.exception"], ["logging.exception", "logging.exception", "logging.exception"], [], [], ["db_connection.Database"], ["db_connection.Database"], ["dialog.show"], ["app.prefs.get"], [], [], ["app.prefs.get"], ["app.configure", "dialog.configure", "dialog.show"], ["dialog.show"], ["app.prefs.get"], [], ["dialog.show"], ["app.prefs.get"], [], ["tracemalloc.start", "tracemalloc.take_snapshot", "waste_memory.run", "tracemalloc.take_snapshot", "tracemalloc.take_snapshot.compare_to"], ["tracemalloc.start", "tracemalloc.take_snapshot", "waste_memory.run", "tracemalloc.take_snapshot", "tracemalloc.take_snapshot.compare_to"], ["os.urandom", "hashlib.sha1"], ["gc.get_objects", "waste_memory.run", "gc.get_objects"], [], ["analysis.utils.inspect", "frontend.utils.inspect"], ["frontend.utils.stringify", "analysis.utils.log_base2_bucket"], [], ["math.log"], [], [], [], [], [], ["models.Projectile", "models.Projectile"], [], ["unittest.main", "utils.to_str", "utils.to_str"], []], "module": ["matplotlib", "pytz", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Msa020@Nuclei-Detection-Kaggle/Nuclein Data_Exploring Data.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shubmittal@PrimaDataSetAnalysis/Notebooks/PrimaDataset.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/BbsonLin@DeepLearning-Note/Course-Note/Neural Networks and Deep Learning/Week2.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ajhalthor@Callbacks-in-Keras/notebooks/Callbacks & Tensorboard with Keras.ipynb": {"API": [["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.callbacks.TensorBoard", "keras.models.Sequential.fit", "keras.models.Sequential.evaluate", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dropout", "keras.layers.Dense", "tensorflow.summary.FileWriter", "tensorflow.Summary"]], "module": ["keras", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Jhuang93@TumorClass/BCTumor.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cheerfool@test/Math210-Project.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/emontag@Recommendation-System/movielens.ipynb": {"API": [], "module": ["torch", "pandas", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/coldkey2003@PythonDataTools/1. Introduction to Pandas.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mohamedelkansouli@TensorFlow-Examples/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.group", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.python.ops.resources.initialize_resources", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.python.ops.resources.shared_resources", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/achronist@skin-slab/skin-slab.ipynb": {"API": [[], ["numpy.shape", "numpy.arccos", "numpy.arccos", "numpy.shape", "numpy.zeros", "numpy.zeros", "numpy.arange", "numpy.arange", "numpy.zeros", "numpy.arange", "numpy.tensordot", "numpy.ndim", "numpy.maximum", "numpy.cos", "numpy.cos", "numpy.arange", "numpy.ndim", "numpy.ndim", "numpy.ndim", "numpy.ndim", "numpy.minimum"], ["numpy.zeros_like", "numpy.arange", "numpy.shape"], ["numpy.linspace", "numpy.cos", "numpy.sin", "numpy.zeros", "numpy.zeros", "numpy.arange", "numpy.cos", "numpy.sin"], ["numpy.shape", "numpy.zeros", "numpy.arange", "numpy.shape", "numpy.tensordot", "numpy.tensordot"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wlgemini@ml/start/Backpropagation.ipynb": {"API": [[], [], [], [], [], [], [], [], [], []], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/michellecarney@DSds/Week 1/Conversion Rate.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/consideRatio@jupyter-se-misc/Programmering - Pythons grunder.ipynb": {"API": [["plotly.offline.init_notebook_mode", "plotly.graph_objs.Layout", "numpy.meshgrid", "numpy.meshgrid", "numpy.linspace", "numpy.linspace", "plotly.graph_objs.Contour", "plotly.graph_objs.Surface", "plotly.graph_objs.Figure", "plotly.offline.iplot", "plotly.graph_objs.Scatter", "plotly.graph_objs.Scatter3d", "plotly.figure_factory.create_quiver", "plotly.offline.iplot", "plotly.graph_objs.Figure", "plotly.offline.iplot"], ["visualization.Vis", "IPython.display.display", "IPython.display.display", "IPython.display.Markdown", "IPython.display.Markdown", "numpy.allclose"]], "module": ["IPython", "numpy", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/loistal@ML_lab01/labs/ex01/npprimer.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/atique1234@MANB1153-Atique/Exercises4.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fwaters77@Surf-s-Up-/data_engineering.ipynb": {"API": [["flask.Flask", "sqlalchemy.create_engine", "sqlalchemy.ext.automap.automap_base", "sqlalchemy.ext.automap.automap_base.prepare", "sqlalchemy.orm.Session", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.Flask.run", "numpy.ravel", "numpy.ravel", "numpy.ravel", "numpy.ravel", "numpy.ravel", "numpy.ravel", "numpy.ravel", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.func.min", "sqlalchemy.func.max", "sqlalchemy.func.avg", "sqlalchemy.func.min", "sqlalchemy.func.max", "sqlalchemy.func.avg", "sqlalchemy.func.min", "sqlalchemy.func.max", "sqlalchemy.func.avg", "sqlalchemy.func.min", "sqlalchemy.func.max", "sqlalchemy.func.avg"], "pandas.read_csv", "pandas.read_csv"], "module": ["sqlalchemy", "numpy", "flask", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/evanpren@Python-Projects/Sensitive Dependence of Dynamical System.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Emran216@Investigate-a-dataset/investigate-a-dataset.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/veeralpatel@aa228-final-project/final_project.ipynb": {"API": [[], [], [], ["pandas.read_csv", "pandas.read_csv.apply", "pandas.read_csv.apply", "pandas.read_csv.apply", "pandas.read_csv.to_csv", "pandas.read_csv.tolist", "pickle.dump", "pickle.dump", "pandas.read_csv.tolist", "pandas.read_csv.tolist"], [], [], [], [], []], "module": ["IPython", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/uddinjalal1983@DATA_620_HW_2/DATA_620_HW_2.ipynb": {"API": ["networkx.Graph", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.draw_networkx_nodes", "networkx.draw_networkx_edges", "networkx.draw_networkx_labels", "matplotlib.pyplot.axis", "matplotlib.pyplot.show"], "module": ["matplotlib", "networkx"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jorcus@AIND-RNN/RNN_project.ipynb": {"API": [["numpy.asarray", "numpy.asarray", "numpy.shape"]], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ashwanijha04@SL/Titanic Data Analysis.ipynb": {"API": [[], ["collections.Counter"], [], [], [], [], [], [], [], [], ["collections.Counter"], ["functools.reduce"], [], ["flask.Flask", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.render_template", "flask.render_template", "flask.Flask.run", "flask.render_template", "flask.redirect", "flask.url_for"], ["flask.Flask", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.render_template", "flask.render_template", "flask.Flask.run", "flask.render_template", "flask.redirect", "flask.url_for"], ["flask.Flask", "flask.Flask.route", "flask.Flask.run", "flask.render_template", "flask.render_template", "time.strptime", "flask.render_template"], ["flask.Flask", "flask.Flask.route", "flask.Flask.run", "flask.render_template", "flask.session.clear", "flask.render_template", "flask.render_template", "flask.render_template", "flask.render_template", "flask.render_template", "flask.render_template"], ["flask.Flask", "flask.Flask.route", "flask.Flask.run", "flask.render_template", "flask.render_template", "flask.render_template", "flask.render_template", "flask.render_template", "flask.render_template", "flask.render_template", "flask.render_template", "flask.render_template"]], "module": ["flask", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/deep-learning-indaba@practicals2017/practical3.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Sophiealex@learn-py2.7/\u8f93\u5165\u8f93\u51fa.ipynb": {"API": [[]], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mohorkosandro@Seznam-milijonarjev/Seznam_milijonarjev.ipynb": {"API": [["selenium.webdriver.Firefox", "selenium.webdriver.Firefox.get", "os.path.dirname", "time.sleep", "selenium.webdriver.Firefox.find_elements_by_xpath", "selenium.webdriver.Firefox.find_elements_by_xpath", "selenium.webdriver.Firefox.find_elements_by_xpath", "selenium.webdriver.Firefox.find_elements_by_xpath", "selenium.webdriver.Firefox.find_elements_by_xpath", "selenium.webdriver.Firefox.find_elements_by_xpath", "selenium.webdriver.Firefox.quit", "os.makedirs", "csv.DictWriter", "csv.DictWriter.writeheader", "selenium.webdriver.Firefox.execute_script", "csv.DictWriter.writerow", "itertools.takewhile"], ["os.path.dirname", "selenium.webdriver.Firefox", "selenium.webdriver.Firefox.get", "os.makedirs", "csv.DictWriter", "csv.DictWriter.writeheader", "time.sleep", "selenium.webdriver.Firefox.quit", "csv.DictWriter.writerow", "time.sleep", "selenium.webdriver.Firefox.find_elements_by_xpath", "re.findall", "re.findall", "re.findall", "re.findall", "re.findall", "re.findall", "itertools.takewhile", "itertools.dropwhile", "itertools.takewhile.strip", "itertools.dropwhile.strip", "itertools.dropwhile", "selenium.webdriver.Firefox.find_element_by_xpath", "itertools.takewhile"]], "module": ["selenium", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DLade@event-graph/Event_Graph.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kenfeldmann@6_12_16_carpentry_class/completed_lesson_part_2.ipynb": {"API": [], "module": ["matplotlib", "statsmodels", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lyniguez@Unit-4-Assignment/Main.ipynb": {"API": [["pandas.read_json", "pandas.read_json.value_counts", "pandas.read_json.value_counts", "pandas.read_json.mean", "pandas.read_json.count", "pandas.read_json.sum", "pandas.cut", "pandas.read_json.head", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.merge", "pandas.merge", "pandas.merge.head", "pandas.DataFrame", "pandas.DataFrame", "pandas.merge", "pandas.DataFrame", "pandas.merge", "pandas.DataFrame", "pandas.DataFrame.drop_duplicates", "pandas.DataFrame", "pandas.DataFrame", "pandas.merge", "pandas.merge", "pandas.merge.sort_values", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yuu@dark/darknet.ipynb": {"API": [], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jyim6@Stat-Learning-Final-Project/Information Projection.ipynb": {"API": [[], [], ["InformationProjection.EF_md", "numpy.log"], ["re.sub"], [], ["numpy.random.normal", "numpy.power", "numpy.array", "numpy.sqrt.flatten", "numpy.asarray", "numpy.squeeze", "numpy.sum", "numpy.sum", "numpy.column_stack", "numpy.array", "numpy.linalg.norm", "numpy.random.uniform", "numpy.exp", "numpy.squeeze", "numpy.sqrt.reshape", "matplotlib.pyplot.scatter", "matplotlib.pyplot.colorbar", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "plotly.graph_objs.Scatter3d", "plotly.graph_objs.Layout", "plotly.graph_objs.Figure", "plotly.plotly.image.save_as", "numpy.array.append", "numpy.exp", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.squeeze", "numpy.squeeze", "numpy.sqrt", "numpy.sqrt", "numpy.arange", "numpy.linalg.svd", "numpy.arange"]], "module": ["matplotlib", "gensim", "numpy", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/n-d-r@signal-processing/Convolution and filter kernels.ipynb": {"API": ["matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "matplotlib.pyplot.close", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "matplotlib.pyplot.close", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "matplotlib.pyplot.close", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "matplotlib.pyplot.close", "numpy.cos", "numpy.cos", "numpy.floor"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Roachns@NSRPandasHW/HeroesOfPymoliHW.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/surojit-das@API-based-Data-Visualization/API-based Data Visualization.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chanitacr@sc-python/Test01.csv.ipynb": {"API": [["numpy.loadtxt", "numpy.loadtxt", "numpy.mean", "numpy.min", "numpy.max", "numpy.sum", "numpy.max", "numpy.max", "numpy.min"]], "module": ["matplotlib", "numpy", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Edgarsalamanca@edgar/generador congruencia mixto (Edgar Salamanca).ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/marioviti@Stats/montecarlo/mcmc.ipynb": {"API": [["random.seed", "numpy.zeros", "numpy.zeros", "random.random", "numpy.abs", "numpy.abs"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/akhiljalan@politics-nerdfest/Apportionment_Disparity.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/srcole@binder_emd/emd.ipynb": {"API": [["numpy.arange", "numpy.zeros", "numpy.max", "numpy.max", "numpy.min", "numpy.sum", "numpy.sum", "numpy.min", "scipy.interpolate.InterpolatedUnivariateSpline", "scipy.interpolate.InterpolatedUnivariateSpline", "numpy.min", "numpy.min", "numpy.abs", "numpy.abs", "numpy.min", "numpy.min", "scipy.signal.argrelmax", "scipy.signal.argrelmin", "numpy.max", "numpy.max", "numpy.max", "numpy.max"]], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/susain-ko@KSEAProject/example.ipynb": {"API": [[], [], ["numpy.diff", "statsmodels.tsa.tsatools.lagmat", "statsmodels.tsa.tsatools.lagmat", "numpy.dot", "numpy.linalg.eig", "numpy.dot", "numpy.linalg.cholesky", "numpy.argsort", "numpy.flipud", "numpy.ones", "numpy.append", "numpy.append", "numpy.linalg.pinv", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.linalg.inv", "numpy.linalg.inv", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.array", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.linalg.inv", "numpy.sum", "numpy.sum", "numpy.asarray", "numpy.log", "numpy.log", "numpy.ones"]], "module": ["matplotlib", "scipy", "pandas", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/adithyaa92@cs185cProject/test.py.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/oanyaoku@DS_Project/Lending Club Data Set.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ipatents@data-visualization/Pie Chart v2.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vedattumen@DGCAN/DCGAN-Sign-Language.ipynb": {"API": [["scipy.misc.imread", "scipy.misc.imresize", "numpy.load", "os.listdir", "numpy.save", "os.listdir", "os.path.exists", "os.makedirs", "numpy.array"]], "module": ["keras", "numpy", "matplotlib", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mrawls@Starfish-tools/fits2hdf5.ipynb": {"API": [], "module": ["matplotlib", "h5py", "numpy", "astropy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/BunnyFrances@Networkx_Tool-Project/Guidance_for_Networkx.ipynb": {"API": [], "module": ["networkx", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/keechul@notebooks/HT-Bayes.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/antoinelanco@PROBAM1/BERRIEN_LANCO_DEOLIVEIRA_Proba_stats.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lulujianjie@accelerometer-signal-recognition-using-ResNet-18-and-modified-Recurrence-Plots/Model/ResNet.ipynb": {"API": [[], [], [], [], ["os.listdir", "math.exp", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "matplotlib.pyplot.close", "matplotlib.pyplot.axis", "matplotlib.pyplot.margins", "matplotlib.pyplot.gca.xaxis.set_major_locator", "matplotlib.pyplot.gca.yaxis.set_major_locator", "matplotlib.pyplot.imshow", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "matplotlib.pyplot.close", "matplotlib.pyplot.axis", "matplotlib.pyplot.margins", "matplotlib.pyplot.gca.xaxis.set_major_locator", "matplotlib.pyplot.gca.yaxis.set_major_locator", "matplotlib.pyplot.close", "matplotlib.pyplot.axis", "matplotlib.pyplot.margins", "matplotlib.pyplot.gca.xaxis.set_major_locator", "matplotlib.pyplot.gca.yaxis.set_major_locator", "numpy.load", "matplotlib.pyplot.NullLocator", "matplotlib.pyplot.NullLocator", "matplotlib.pyplot.NullLocator", "matplotlib.pyplot.NullLocator", "matplotlib.pyplot.imshow", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "matplotlib.pyplot.imshow", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "matplotlib.pyplot.NullLocator", "matplotlib.pyplot.NullLocator", "matplotlib.pyplot.imshow", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "matplotlib.pyplot.imshow", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Eyecandy@Numerical-Methods/week 4/04 Interpolation and Integration.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zingpython@June3rd/data_cs_jun_03/Untitled3.ipynb": {"API": [], "module": ["matplotlib", "pandas_datareader", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/masterfulEJ@AppSocialNetworksAnalysis/Assignment 2.ipynb": {"API": [], "module": ["networkx", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DixithR19@Facial-Expression-Recognition/train_cnn.ipynb": {"API": [["numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.fromstring", "numpy.fromstring"]], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MarileneSoaresDaCosta@Algorithms/Cracking/CTCI_ch1.ipynb": {"API": [[], [], [], [], [], [], [], [], [], [], [], [], [], ["collections.deque"], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ["unittest.main"], [], [], [], [], [], [], [], [], [], [], ["time.time", "time.time", "time.sleep"], [], [], [], [], [], [], [], [], [], ["turtle.Turtle", "turtle.Screen", "turtle.Turtle.left", "turtle.Turtle.up", "turtle.Turtle.backward", "turtle.Turtle.down", "turtle.Turtle.color", "turtle.Screen.exitonclick", "turtle.Turtle.forward", "turtle.Turtle.right", "turtle.Turtle.left", "turtle.Turtle.right", "turtle.Turtle.backward"], [], [], [], ["turtle.Turtle.fillcolor", "turtle.Turtle.up", "turtle.Turtle.goto", "turtle.Turtle.down", "turtle.Turtle.begin_fill", "turtle.Turtle.goto", "turtle.Turtle.goto", "turtle.Turtle.goto", "turtle.Turtle.end_fill", "turtle.Turtle", "turtle.Screen", "turtle.Screen.exitonclick"], [], [], [], [], [], [], [], [], [], ["turtle.Turtle", "turtle.Screen"], ["turtle.Turtle", "turtle.Screen", "turtle.Screen.exitonclick", "turtle.Turtle.speed", "turtle.Turtle.fillcolor", "turtle.Turtle.up", "turtle.Turtle.goto", "turtle.Turtle.down", "turtle.Turtle.begin_fill", "turtle.Turtle.goto", "turtle.Turtle.goto", "turtle.Turtle.goto", "turtle.Turtle.end_fill", "turtle.Turtle.speed", "turtle.Turtle.fillcolor", "turtle.Turtle.up", "turtle.Turtle.goto", "turtle.Turtle.down", "turtle.Turtle.begin_fill", "turtle.Turtle.circle", "turtle.Turtle.end_fill", "turtle.Turtle.speed", "turtle.Turtle.fillcolor", "turtle.Turtle.up", "turtle.Turtle.goto", "turtle.Turtle.down", "turtle.Turtle.begin_fill", "turtle.Turtle.goto", "turtle.Turtle.goto", "turtle.Turtle.goto", "turtle.Turtle.goto", "turtle.Turtle.end_fill"], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ["collections.deque"], ["unittest.main", "platform.python_version", "bst.TreeNode", "bst.TreeNode"], ["turtle.right", "turtle.right", "turtle.forward", "turtle.left", "turtle.forward", "turtle.left", "turtle.forward", "turtle.right", "turtle.forward", "turtle.left", "turtle.forward", "turtle.forward", "turtle.left", "turtle.forward", "turtle.left", "turtle.forward", "turtle.right", "turtle.Turtle", "turtle.Screen", "turtle.Turtle.color", "turtle.Turtle.speed", "turtle.Screen.exitonclick"], [], [], [], [], [], ["turtle.Turtle.left", "turtle.Turtle.right", "turtle.Turtle.left", "turtle.Turtle", "turtle.Screen", "turtle.Turtle.speed", "turtle.Turtle.penup", "turtle.Turtle.backward", "turtle.Turtle.pendown", "turtle.Turtle.color", "turtle.Screen.exitonclick", "turtle.Turtle.forward", "turtle.Turtle.right"], [], [], [], [], [], [], [], [], [], [], ["unittest.main", "random.shuffle", "platform.python_version", "random.randrange", "random.randrange"], [], [], [], [], ["turtle.Turtle", "turtle.Screen", "turtle.Screen.exitonclick", "turtle.Turtle.forward", "turtle.Turtle.right", "turtle.Turtle.left"], [], [], [], [], [], [], [], []], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/felipemfp@python-day-natal-2017/explorando-dados-com-pandas.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kyungjunism@riddler_codes/Riddler Express Solutions 4_6_2018.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hasslercastro@IA/K-Means.ipynb": {"API": [["numpy.random.rand", "numpy.random.rand", "numpy.array", "numpy.array", "numpy.exp"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wddlz@fss16iad/code/workshops/3/adhuri_pom3_ga.ipynb": {"API": [[], [], [], [], [], [], ["time.strftime", "random.seed", "random.randint", "time.gmtime", "random.randint", "random.randint", "random.random", "random.randint", "random.randint"], [], [], ["os.path.basename"], [], [], ["sys.path.append", "os.path.abspath"], ["random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint"], [], ["math.ceil"], ["random.randint"], [], ["math.log", "random.random", "random.uniform"], ["random.shuffle", "random.seed", "random.random", "random.randint", "random.random", "random.randint", "random.random"], [], ["sys.stdout.flush", "random.shuffle", "pom3.pom3.pom3", "random.uniform", "random.random", "random.choice", "random.choice", "random.choice"], ["random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint"], [], ["math.ceil"], ["random.randint"], [], ["math.log", "random.random", "random.uniform"], ["sys.stdout.flush", "random.shuffle", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "random.uniform", "random.random", "random.choice", "random.choice", "random.choice"], ["random.randint", "random.randint", "random.random", "sys.stdout.write", "sys.stdout.flush", "random.randint", "random.randint", "random.randint"], ["random.randint", "random.randint", "sys.stdout.write", "sys.stdout.flush", "random.randint", "random.random"], ["math.exp", "sys.stdout.write", "sys.stdout.flush", "random.randint", "random.random"], [], ["model.Model.__init__", "model.Decision", "model.Decision", "model.Decision", "model.Decision", "model.Decision", "model.Decision"], [], ["model.Model.__init__", "math.exp", "model.Decision", "model.Decision", "model.Decision", "math.sin"], ["random.randint"], ["model.Model.__init__", "model.Decision"], [], [], [], [], [], [], [], [], [], [], []], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/thantuongaotrang@tonghop/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jingw01@Data-Manipulation/HTMRead/Load data from various directories.ipynb": {"API": [[], [], ["json.loads", "pandas.DataFrame", "pandas.DataFrame", "requests.get", "csv.reader", "csv.reader.next", "pandas.DataFrame"]], "module": ["pandas", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/are-dynamic-2018@Dynamic-profs-etudiants/FIN Liquide: Porosit\u00e9 et Perm\u00e9abilit\u00e9.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/megadoro@clifford/clifford.ipynb": {"API": [[]], "module": ["IPython", "sympy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/are-dynamic-2018@Lion-gazelle/Lion_Gazelle 27-03.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/j-castro-m@pythonMLPortStudents/PythonML.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/paepcke@canvas_interaction/src/cluster_key_terms/GenSim Tutorials.ipynb": {"API": [["csv.reader", "pymongo.MongoClient", "numpy.matrix", "numpy.matrix", "numpy.random.randint", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "keras.models.Sequential.evaluate", "numpy.array", "numpy.zeros", "numpy.matrix.append", "numpy.zeros", "numpy.matrix.append", "keras.layers.Highway", "keras.models.Sequential.add", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Highway", "datetime.datetime.now"], [], [], [], [], [], [], [], []], "module": ["keras", "numpy", "pymongo"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JohnWeilandJr@Python_Homework/WeatherPY Homework.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/iamnewneo@ML_For_Trading/01-01/Playing with Stock data with pandas.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/klday@data_viz/first_viz/Untitled.ipynb": {"API": [["pymongo.MongoClient", "pymongo.MongoClient", "pymongo.MongoClient"], ["pymongo.MongoClient", "pymongo.MongoClient", "pymongo.MongoClient"], ["pymongo.MongoClient", "pymongo.MongoClient", "pymongo.MongoClient"]], "module": ["pymongo", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cmacdonell@hopper2016/Hopper_analysis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/petrux@TF-102/01-Graph.ipynb": {"API": [["tensorflow.reset_default_graph", "tensorflow.set_random_seed", "tensorflow.random_normal", "tensorflow.cast", "time.time", "time.time", "tensorflow.Variable", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session", "tensorflow.variable_scope", "tensorflow.FIFOQueue", "tensorflow.FIFOQueue.enqueue", "tensorflow.train.QueueRunner", "tensorflow.train.add_queue_runner", "tensorflow.FIFOQueue.dequeue", "tensorflow.Session", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tensorflow.train.Coordinator.request_stop", "tensorflow.train.Coordinator.join", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.relu", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.cast", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.variable_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_collection", "tensorflow.train.GradientDescentOptimizer.compute_gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.variable_scope", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.global_variables_initializer", "tensorflow.global_variables_initializer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.cast", "time.time", "time.time", "tensorflow.equal"]], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/catniplab@myopiccontrol/pythoncode/sim_inverted_pend_NN.ipynb": {"API": [["pickle.load"], ["tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.unstack", "tensorflow.squeeze", "tensorflow.unstack", "tensorflow.squeeze", "tensorflow.gradients", "tensorflow.gradients", "tensorflow.stack", "tensorflow.gradients", "tensorflow.gradients", "tensorflow.stack", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.transpose", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.stack", "tensorflow.stack", "tensorflow.trace", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.stack", "tensorflow.squeeze", "tensorflow.stack", "tensorflow.trace", "tensorflow.tensordot", "tensorflow.trace", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.stack", "tensorflow.stack", "tensorflow.trace", "tensorflow.squeeze", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.gradients", "tensorflow.stack", "tensorflow.hessians", "tensorflow.stack", "tensorflow.constant", "tensorflow.constant", "numpy.eye", "numpy.eye", "tensorflow.matmul", "tensorflow.matrix_solve", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.squeeze", "tensorflow.transpose", "tensorflow.trace", "tensorflow.matrix_solve", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.squeeze", "tensorflow.cholesky_solve", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.squeeze", "tensorflow.cholesky_solve", "tensorflow.norm", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.squeeze", "tensorflow.transpose", "tensorflow.trace", "tensorflow.matrix_solve", "tensorflow.expand_dims", "tensorflow.expand_dims", "numpy.eye", "numpy.eye", "numpy.eye", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.matmul", "tensorflow.transpose", "numpy.eye", "tensorflow.stack", "tensorflow.stack", "tensorflow.transpose", "tensorflow.trace", "tensorflow.transpose", "tensorflow.trace", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.trace", "tensorflow.matmul", "tensorflow.trace", "tensorflow.squeeze", "tensorflow.transpose", "numpy.eye", "tensorflow.cholesky", "tensorflow.transpose", "numpy.eye", "tensorflow.transpose", "tensorflow.trace", "tensorflow.cholesky", "tensorflow.matmul", "tensorflow.transpose", "numpy.eye", "tensorflow.stack", "tensorflow.stack", "tensorflow.transpose", "tensorflow.trace", "tensorflow.transpose", "tensorflow.trace", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.trace", "tensorflow.matmul", "tensorflow.trace", "tensorflow.squeeze", "tensorflow.transpose", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.matmul", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.expand_dims", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.stack", "tensorflow.stack"], ["tensorflow.ConfigProto", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.constant", "tensorflow.constant", "numpy.random.normal", "numpy.random.normal", "pickle.dump", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "tensorflow.global_variables_initializer", "pickle.dump", "numpy.eye", "numpy.eye", "numpy.eye", "tensorflow.Session.run", "numpy.random.uniform", "numpy.array", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.linalg.norm", "numpy.matmul", "numpy.linalg.norm", "numpy.array", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.transpose", "numpy.transpose"], ["numpy.exp", "tensorflow.exp", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "tensorflow.minimum", "tensorflow.minimum", "numpy.array", "numpy.array", "tensorflow.stack", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "tensorflow.stack", "numpy.array", "numpy.array", "tensorflow.stack", "numpy.array", "tensorflow.stack", "numpy.inner", "numpy.sin", "tensorflow.sin", "numpy.exp", "numpy.exp", "numpy.exp", "tensorflow.exp", "tensorflow.exp", "tensorflow.exp", "math.tanh", "math.tanh", "tensorflow.tanh", "tensorflow.tanh", "tensorflow.norm", "numpy.inner", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.norm", "tensorflow.squeeze"], ["tensorflow.constant", "tensorflow.tanh", "tensorflow.tanh", "tensorflow.stack", "numpy.array", "numpy.array", "math.tanh", "math.tanh", "numpy.array", "tensorflow.exp", "tensorflow.exp", "tensorflow.stack", "math.exp", "math.exp", "numpy.array", "numpy.array", "tensorflow.sin", "math.sin.dot", "math.sin", "tensorflow.minimum", "tensorflow.minimum", "tensorflow.tanh", "tensorflow.tanh", "tensorflow.tanh", "tensorflow.tanh", "math.tanh", "math.tanh", "math.tanh", "math.tanh", "math.cos", "math.sin", "math.cos", "math.cos", "math.sin", "math.cos", "math.sin", "math.sin"]], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/im029@DST-Data-Analysis/DST Data Analysis.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zhengweiyu@P0_bike_sharing/Bay_Area_Bike_Share_Analysis.ipynb": {"API": [["matplotlib.pyplot.figure", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.xticks", "matplotlib.pyplot.hist", "matplotlib.pyplot.bar", "numpy.floor", "numpy.ceil"], ["babs_visualizations.usage_stats", "numpy.array", "numpy.allclose", "numpy.allclose", "numpy.array", "numpy.allclose", "numpy.array", "numpy.array_equal"]], "module": ["matplotlib", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Cynthia2012@BA501/HW4-YingYu.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/KetanPandhi@ds-algos/src/Anagram Check .ipynb": {"API": [[]], "module": ["nose"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tbs1980@research-covariance-matrix-estimation/notes/univariate_gaussian/jupyter/2017_09_10_univariate_gaussian.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gumption@Python_for_Data_Science/4_Python_Simple_Decision_Tree.ipynb": {"API": [[], ["collections.Counter", "collections.defaultdict", "collections.defaultdict", "collections.Counter", "collections.defaultdict", "collections.Counter", "collections.defaultdict.items", "math.log", "collections.Counter.most_common", "operator.itemgetter", "collections.Counter.most_common"]], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/arne7morgen@MasterThesis/notebooks/two_state_cp_test.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/missionkao@ML-Practice/Gradient Decent/gradient_decent.ipynb": {"API": ["numpy.genfromtxt", "numpy.arange", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.show"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/HuoShan-Corleone@how_to_do_math_for_deep_learning/neural_network.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Sakamotto@Udacity-ML-For-Trading/Modulo3.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/obarquero@potenciales_evocados/Practica_EP-student.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JenniferWenHsu@KaraokeProject/EE120/Untitled.ipynb": {"API": [], "module": ["matplotlib", "librosa", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mat-esp-2015@capstone-adelia-daniela-daniel/capstone.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sethjuarez@tfnotes/StartTensorFlow.ipynb": {"API": [], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/abhishek-yadav-cse@PythonMatplotlibDemonstration/PythonMatplotlibDemonstration.ipynb": {"API": [], "module": ["networkx", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/newsch@friend_value_hacking/code/replication.ipynb": {"API": [["networkx.Graph", "networkx.Graph.add_nodes_from", "networkx.Graph.add_edges_from", "networkx.Graph", "networkx.Graph.add_nodes_from", "networkx.Graph.add_edges_from", "networkx.Graph", "networkx.Graph.add_nodes_from", "networkx.Graph.add_edges_from", "networkx.Graph.edges", "numpy.mean", "networkx.shortest_path_length", "numpy.mean", "collections.deque", "collections.deque", "collections.deque", "networkx.Graph", "networkx.Graph.add_nodes_from", "networkx.Graph.add_edges_from", "collections.deque", "random.random", "networkx.Graph.nodes_iter", "networkx.Graph.nodes", "networkx.Graph.has_edge", "networkx.Graph.has_edge", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "collections.deque.popleft", "collections.deque.popleft", "collections.deque.popleft", "collections.deque.extend", "networkx.Graph.add_edges_from", "collections.deque.pop", "collections.deque.extend", "collections.deque.pop", "collections.deque.extend", "networkx.Graph.remove_edge", "networkx.Graph.add_edge", "networkx.Graph.nodes", "collections.deque.extend", "collections.deque.extend", "networkx.Graph.neighbors", "networkx.Graph.neighbors"], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "numpy.asarray", "scipy.stats.geom.pmf", "scipy.stats.hypergeom.pmf", "scipy.stats.poisson.pmf", "numpy.linspace", "numpy.linspace", "scipy.stats.pareto.pdf", "numpy.linspace", "scipy.stats.pareto.pdf", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "numpy.sum", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.asarray", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.special.gamma", "scipy.stats.geom.pmf", "scipy.stats.poisson.pmf", "math.exp", "math.exp", "numpy.exp", "numpy.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "scipy.special.betainc", "scipy.special.betaincinv", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.normal", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "io.open", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "numpy.exp", "numpy.isinf", "math.erf", "numpy.asarray", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "re.search", "thinkplot.Plot", "math.exp", "math.isnan", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.vlines", "matplotlib.pyplot.hlines", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.gca", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "warnings.filterwarnings", "warnings.filterwarnings", "matplotlib.pyplot.gcf", "warnings.warn", "numpy.arange", "matplotlib.pyplot.xticks", "numpy.array", "numpy.array", "matplotlib.pyplot.legend", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.get_xticklabels", "matplotlib.pyplot.setp", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.get_yticklabels", "matplotlib.pyplot.setp", "warnings.warn", "warnings.warn", "math.log", "math.log", "numpy.diff", "numpy.diff"]], "module": ["matplotlib", "scipy", "pandas", "numpy", "plotly", "networkx"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NelsonSpencer@Udacity/Data Analyst Nanodegree/Project 2 - Baseball Analysis/Project 2 - Baseball Analysis.ipynb": {"API": [["media.Movie", "media.Movie", "media.Movie", "media.Movie", "media.Movie", "media.Movie", "fresh_tomatoes.open_movies_page"], ["os.path.abspath", "webbrowser.open", "re.search", "re.search", "re.search.group"], []], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jslucf@MAN6915-Assignment-4/Homework 4.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/laura-ni@data_analyst/P0 bike_sharing/Bay_Area_Bike_Share_Analysis.ipynb": {"API": [["matplotlib.pyplot.figure", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.xticks", "matplotlib.pyplot.hist", "matplotlib.pyplot.bar", "numpy.floor", "numpy.ceil"], ["babs_visualizations.usage_stats", "numpy.array", "numpy.allclose", "numpy.allclose", "numpy.array", "numpy.allclose", "numpy.array", "numpy.array_equal"]], "module": ["matplotlib", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/basilhan@math/ProbAndStats/PS4.ipynb": {"API": [], "module": ["scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/danieljwilson@PSY5212/Final Project.ipynb": {"API": [], "module": ["numpy", "scipy", "plotly", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/johnarban@ben_banneker/Data Analysis.ipynb": {"API": [[]], "module": ["matplotlib", "IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gregcarrigan@DS_Misc/iteration-control-flows-functions.ipynb": {"API": [[], [], [], [], [], ["seaborn.set_style", "numpy.linspace", "scipy.stats.norm.pdf", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.gca", "matplotlib.pyplot.show"]], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn", "pytest"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kaslangg@tna/Twitter_Analysis.ipynb": {"API": [], "module": ["tweepy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/racersmith@CarND-Behavior-Planner/Behavior-Planner.ipynb": {"API": [], "module": ["IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rn-itba-2018@06-CNN/Ejercicio CNN.ipynb": {"API": [], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/reyvaz@Mining-Medical-Records/dates.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lamarrg@udemy_python_a_to_z/Section_2/The \"For\" Loop.ipynb": {"API": [], "module": ["matplotlib", "pandas", "scrapy", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ShivamBh@pandas_mini_project/pandas/pandas_practice2.ipynb": {"API": [], "module": ["matplotlib", "quandl", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alexander-scpv@PythonDataAnalysis/Python_course_1/Assignment 2.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tenkabuto@econ-notebooks/base.ipynb": {"API": [], "module": ["matplotlib", "ipywidgets"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nakanodaiki@probrobo2017/probrob.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Rola1993@TaskRabbit_Data_Analysis/TaskRabbit_data_analysis.ipynb": {"API": [], "module": ["matplotlib", "statsmodels"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Syps@boston_data/boston.ipynb": {"API": [["logging.getLogger", "logging.getLogger.addHandler", "logging.getLogger.setLevel", "os.getenv", "os.getenv", "os.getenv", "logging.StreamHandler", "os.getenv", "os.getenv.endswith", "logging.getLogger.fatal", "urllib2.Request", "json.loads", "urllib2.Request", "logging.getLogger.info", "functools.reduce", "logging.getLogger.info", "logging.getLogger.info", "urllib2.urlopen.decode", "logging.getLogger.info", "time.sleep", "functools.reduce", "logging.getLogger.fatal", "urllib2.urlopen", "functools.reduce", "urllib2.urlopen", "json.loads", "logging.getLogger.error", "logging.getLogger.warn", "json.dumps", "urllib2.urlopen.decode"]], "module": ["numpy", "shapely", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cimat@thinkstats/Chap04/Chap04_practice.ipynb": {"API": [["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth", "nsfg.ReadFemPreg", "nsfg.MakePregMap"], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.stats.hypergeom.pmf", "numpy.linspace", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "io.open", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.special.gamma", "math.exp", "math.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.uniform", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "re.search", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "math.exp", "math.erf", "scipy.special.betainc", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "thinkplot.Plot", "math.exp", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.gcf", "numpy.array", "numpy.array", "warnings.warn", "warnings.warn", "math.log", "math.log", "numpy.diff", "numpy.diff"], ["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth", "collections.defaultdict"], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.stats.hypergeom.pmf", "numpy.linspace", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "io.open", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.special.gamma", "math.exp", "math.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.uniform", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "re.search", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "math.exp", "math.erf", "scipy.special.betainc", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "thinkplot.Plot", "math.exp", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.gcf", "numpy.array", "numpy.array", "warnings.warn", "warnings.warn", "math.log", "math.log", "numpy.diff", "numpy.diff"], ["thinkplot.PrePlot", "thinkplot.Save", "pandas.DataFrame", "thinkstats2.FixedWidthVariables", "thinkstats2.FixedWidthVariables.ReadFixedWidth", "thinkstats2.Cdf", "thinkplot.PrePlot", "thinkplot.Cdf", "thinkplot.Config", "thinkplot.SubPlot", "thinkplot.Cdf", "thinkplot.Config", "thinkplot.Save", "thinkplot.PrePlot", "thinkplot.Save", "thinkstats2.RenderParetoCdf", "thinkplot.Plot", "thinkplot.Save", "thinkplot.PrePlot", "thinkplot.Save", "thinkstats2.TrimmedMeanVar", "math.sqrt", "thinkstats2.RenderNormalCdf", "thinkplot.Plot", "thinkstats2.Cdf", "thinkplot.PrePlot", "thinkplot.Cdf", "thinkplot.Save", "thinkplot.PrePlot", "thinkplot.Save", "thinkstats2.TrimmedMeanVar", "math.sqrt", "thinkstats2.FitLine", "thinkplot.Plot", "thinkplot.PrePlot", "thinkstats2.NormalProbability", "thinkplot.Plot", "thinkstats2.NormalProbability", "thinkplot.Plot", "thinkplot.Save", "thinkstats2.RandomSeed", "nsfg.ReadFemPreg", "thinkstats2.RenderExpoCdf", "thinkplot.Plot", "thinkstats2.RenderParetoCdf", "thinkplot.Plot", "thinkstats2.RenderNormalCdf", "thinkplot.Plot", "numpy.random.normal", "thinkstats2.NormalProbability", "thinkplot.Plot"], ["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth", "collections.defaultdict"], ["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth", "nsfg.ReadFemPreg", "nsfg.MakePregMap"], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.stats.hypergeom.pmf", "numpy.linspace", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "io.open", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.special.gamma", "math.exp", "math.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.uniform", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "re.search", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "math.exp", "math.erf", "scipy.special.betainc", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "thinkplot.Plot", "math.exp", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.gcf", "numpy.array", "numpy.array", "warnings.warn", "warnings.warn", "math.log", "math.log", "numpy.diff", "numpy.diff"], ["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth", "collections.defaultdict"], ["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth", "nsfg.ReadFemPreg", "nsfg.MakePregMap"], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.stats.hypergeom.pmf", "numpy.linspace", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "io.open", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.special.gamma", "math.exp", "math.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.uniform", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "re.search", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "math.exp", "math.erf", "scipy.special.betainc", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "thinkplot.Plot", "math.exp", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.gcf", "numpy.array", "numpy.array", "warnings.warn", "warnings.warn", "math.log", "math.log", "numpy.diff", "numpy.diff"], ["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth", "collections.defaultdict"], ["pandas.DataFrame", "thinkstats2.FixedWidthVariables", "thinkstats2.FixedWidthVariables.ReadFixedWidth", "thinkstats2.Cdf", "thinkstats2.TrimmedMeanVar", "math.sqrt", "thinkstats2.RenderNormalCdf", "thinkplot.Plot", "thinkplot.Cdf", "thinkstats2.TrimmedMeanVar", "math.sqrt", "thinkstats2.FitLine", "thinkplot.Plot", "thinkstats2.NormalProbability", "thinkplot.Plot", "numpy.log10", "thinkplot.PrePlot", "thinkplot.Config", "thinkplot.SubPlot", "thinkplot.Config", "thinkplot.Save", "thinkplot.PrePlot", "thinkplot.Config", "thinkplot.SubPlot", "thinkplot.Config", "thinkplot.Save", "thinkstats2.RandomSeed", "math.sqrt"], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.stats.hypergeom.pmf", "numpy.linspace", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "io.open", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.special.gamma", "math.exp", "math.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.uniform", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "re.search", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "math.exp", "math.erf", "scipy.special.betainc", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "thinkplot.Plot", "math.exp", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.gcf", "numpy.array", "numpy.array", "warnings.warn", "warnings.warn", "math.log", "math.log", "numpy.diff", "numpy.diff"], ["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth", "collections.defaultdict"], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.stats.hypergeom.pmf", "numpy.linspace", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "io.open", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.special.gamma", "math.exp", "math.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.uniform", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "re.search", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "math.exp", "math.erf", "scipy.special.betainc", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "thinkplot.Plot", "math.exp", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.gcf", "numpy.array", "numpy.array", "warnings.warn", "warnings.warn", "math.log", "math.log", "numpy.diff", "numpy.diff"], ["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth", "collections.defaultdict"], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.stats.hypergeom.pmf", "numpy.linspace", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "io.open", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.special.gamma", "math.exp", "math.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.uniform", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "re.search", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "math.exp", "math.erf", "scipy.special.betainc", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "thinkplot.Plot", "math.exp", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.gcf", "numpy.array", "numpy.array", "warnings.warn", "warnings.warn", "math.log", "math.log", "numpy.diff", "numpy.diff"], ["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth", "collections.defaultdict"]], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/goedken@playerscrawler/Untitled.ipynb": {"API": [["json.dumps"], [], ["scrapy.Field", "scrapy.Field"], [], [], []], "module": ["scrapy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jimmybdc@homework11advdatastorageret/data_engineering.ipynb": {"API": [["sqlalchemy.create_engine", "sqlalchemy.ext.automap.automap_base", "sqlalchemy.ext.automap.automap_base.prepare", "sqlalchemy.orm.Session", "flask.Flask", "flask.Flask.route", "flask.Flask.run"], "pandas.read_csv", "pandas.read_csv"], "module": ["numpy", "sqlalchemy", "flask", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/eduardofv@simple_models_for_deep_learning/models_for_deep_learning.ipynb": {"API": ["random.seed", "numpy.ndarray", "numpy.ndarray", "numpy.ndarray", "numpy.ndarray", "matplotlib.pyplot.figure", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.show", "math.sqrt", "math.atan", "tensorflow.Graph", "tensorflow.Graph", "numpy.random.normal", "numpy.random.normal", "numpy.arctan2", "matplotlib.pyplot.axes", "matplotlib.pyplot.scatter", "matplotlib.pyplot.xlim", "matplotlib.pyplot.xticks", "matplotlib.pyplot.ylim", "matplotlib.pyplot.yticks", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "random.uniform", "random.uniform", "numpy.argmax", "numpy.argmax", "matplotlib.pyplot.title", "math.sin", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.constant", "tensorflow.constant", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.nn.softmax", "tensorflow.nn.softmax", "tensorflow.nn.softmax", "tensorflow.Session", "time.time", "tensorflow.initialize_all_variables.run", "tensorflow.matmul.eval", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.constant", "tensorflow.constant", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.train.exponential_decay", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.reduce_mean", "tensorflow.nn.softmax", "tensorflow.nn.softmax", "tensorflow.nn.softmax", "tensorflow.Session", "tensorflow.initialize_all_variables.run", "tensorflow.matmul.eval", "numpy.sum", "numpy.argmax", "math.cos", "tensorflow.truncated_normal", "tensorflow.zeros", "tensorflow.truncated_normal", "tensorflow.zeros", "tensorflow.matmul", "time.time", "tensorflow.matmul.eval", "tensorflow.truncated_normal", "tensorflow.zeros", "tensorflow.truncated_normal", "tensorflow.zeros", "tensorflow.truncated_normal", "tensorflow.zeros", "tensorflow.truncated_normal", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.matmul.eval", "numpy.arange", "numpy.argmax", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.nn.l2_loss", "tensorflow.train.GradientDescentOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.initialize_all_variables", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.initialize_all_variables", "numpy.argmax", "numpy.argmax", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.nn.l2_loss", "tensorflow.nn.relu", "tensorflow.nn.relu", "time.time", "tensorflow.nn.l2_loss", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.l2_loss", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul.eval", "time.time", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.nn.l2_loss", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul.eval", "tensorflow.nn.l2_loss", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.matmul"], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/swyoon@DiRect/DiRect_Demo.ipynb": {"API": [["numpy.all", "numpy.max", "numpy.array", "numpy.array", "numpy.sum", "numpy.nonzero"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wjy5446@movie_recommand/movie_recommend.ipynb": {"API": [], "module": ["numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nitinvijay23@Random-Quote-Generator/Random_Quote_Generator.ipynb": {"API": [["requests.post", "requests.post.json"]], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CloneMindTechnology@RL/K-Armed Bandit Problem.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JonQian@rls/rls.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ColombianAstronomy@GaiaPlay/src/explore.ipynb": {"API": [], "module": ["astropy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JuliaPackageMirrors@IndexableBitVectors.jl/benchmarks/plot.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Jerror@PHY5340-Project1_Billiards/billiards.ipynb": {"API": [["numpy.array", "numpy.array", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.array", "numpy.linalg.norm", "numpy.array", "numpy.array", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.array", "numpy.sin", "numpy.sin", "numpy.cos", "numpy.array", "numpy.array", "numpy.sin", "numpy.cos", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], [], ["scipy.optimize.zeros.RootResults", "scipy.optimize.zeros.RootResults"]], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kimeasyn@Study/Untitled.ipynb": {"API": [["os.environ.setdefault", "django.core.management.execute_from_command_line"], ["django.conf.urls.url", "django.conf.urls.url", "django.conf.urls.url", "django.conf.urls.url", "django.conf.urls.include", "django.conf.urls.include", "django.shortcuts.redirect"], ["os.environ.setdefault", "django.core.wsgi.get_wsgi_application"], [], ["os.path.dirname", "os.path.dirname", "os.path.abspath", "os.path.join"], ["django.forms.CharField", "django.forms.CharField", "django.forms.CharField", "django.forms.CheckboxInput", "django.forms.ValidationError"], ["models.Study.objects.all", "django.shortcuts.render", "django.shortcuts.get_object_or_404", "django.shortcuts.render", "django.shortcuts.render", "models.Study.objects.filter", "forms.StudyForm", "forms.StudyForm.is_valid", "forms.StudyForm", "models.Study", "models.Study.save", "django.shortcuts.redirect"], ["django.conf.urls.url", "django.conf.urls.url", "django.conf.urls.url"], ["django.contrib.admin.register", "django.contrib.admin.register", "django.contrib.admin.register"], [], [], [], ["django.db.models.CharField", "django.db.models.ForeignKey", "django.db.models.CharField", "django.db.models.CharField", "django.db.models.CharField", "django.db.models.TextField", "django.db.models.DateTimeField", "django.db.models.DateTimeField", "django.db.models.DateField", "django.db.models.DateField", "django.db.models.CharField", "django.db.models.ManyToManyField", "django.db.models.ForeignKey", "django.db.models.CharField", "django.db.models.TextField", "django.db.models.DateTimeField", "django.db.models.DateTimeField", "django.db.models.CharField", "django.core.urlresolvers.reverse"], ["django.db.migrations.CreateModel", "django.db.models.AutoField", "django.db.models.CharField", "django.db.models.CharField", "django.db.models.CharField", "django.db.models.CharField", "django.db.models.TextField", "django.db.models.DateTimeField", "django.db.models.DateTimeField", "django.db.models.DateTimeField", "django.db.models.DateTimeField"], ["django.db.migrations.AlterField", "django.db.migrations.AlterField", "django.db.models.DateField", "django.db.models.DateField"], [], ["django.db.migrations.AlterField", "django.db.models.ForeignKey"], ["django.db.migrations.swappable_dependency", "django.db.migrations.RemoveField", "django.db.migrations.AddField", "django.db.models.ForeignKey"], ["django.db.migrations.CreateModel", "django.db.migrations.AddField", "django.db.models.ManyToManyField", "django.db.models.AutoField", "django.db.models.CharField"], ["django.db.migrations.AlterField", "django.db.models.ManyToManyField"], ["django.db.migrations.AlterField", "django.db.migrations.AlterField", "django.db.migrations.AlterField", "django.db.models.DateField", "django.db.models.CharField", "django.db.models.DateField"], ["django.db.migrations.AddField", "django.db.migrations.AlterField", "django.db.migrations.AlterField", "django.db.migrations.AlterField", "django.db.migrations.AlterField", "django.db.models.CharField", "django.db.models.DateField", "django.db.models.DateField", "django.db.models.CharField", "django.db.models.CharField"], ["django.db.migrations.AddField", "django.db.models.CharField"], ["django.db.migrations.CreateModel", "django.db.migrations.AlterModelOptions", "django.db.migrations.AddField", "django.db.models.ForeignKey", "django.db.models.AutoField", "django.db.models.CharField", "django.db.models.TextField", "django.db.models.DateTimeField", "django.db.models.DateTimeField"], ["django.db.migrations.AlterField", "django.db.migrations.AlterField", "django.db.models.DateField", "django.db.models.DateField"], ["django.shortcuts.render"], ["django.conf.urls.url"], ["django.contrib.admin.register"], [], [], [], ["django.db.models.OneToOneField", "django.db.models.CharField", "django.db.models.CharField"], ["django.db.migrations.swappable_dependency", "django.db.migrations.CreateModel", "django.db.models.AutoField", "django.db.models.CharField", "django.db.models.CharField", "django.db.models.OneToOneField"], []], "module": ["django"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jcaraya@Project3/dlnd_tv_script_generation.ipynb": {"API": [["os.path.join", "pickle.dump", "pickle.load", "pickle.dump", "pickle.load"], ["tensorflow.Graph", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "numpy.array", "numpy.array_equal", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "numpy.array", "numpy.array_equal", "numpy.array_equal", "tensorflow.Graph", "tensorflow.Graph", "numpy.array", "numpy.array", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.Graph"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Adekusiek@Udacity_DeepLearningFundation_PJ1/DLND Your first neural network.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chiching@jupyter-notebooks/downloaded/Using Interact.ipynb": {"API": [], "module": ["matplotlib", "ipywidgets", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bharadwaj08@Python/Pandas_practice.ipynb": {"API": [[], [], [], [], [], [], [], [], [], [], [], [], [], []], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hukim1112@HIMYP_INSTACART/src/1_Make_newpriors.ipynb": {"API": [["os.path.abspath", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "os.path.join.set_index", "lightgbm.Dataset", "lightgbm.train", "lightgbm.train.predict", "pandas.DataFrame.from_dict", "pandas.DataFrame.from_dict.reset_index", "pandas.DataFrame.from_dict.to_csv", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "pandas.DataFrame", "numpy.array", "pandas.DataFrame.merge", "pandas.DataFrame.drop", "os.path.join", "pandas.DataFrame.memory_usage"], ["os.path.abspath", "pandas.read_csv", "pandas.read_csv", "pandas.DataFrame", "pandas.DataFrame.corr", "matplotlib.pyplot.matshow", "matplotlib.pyplot.show", "os.path.join", "os.path.join", "os.path.join.groupby"], ["os.path.abspath", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.DataFrame", "os.path.join.set_index", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame.from_dict", "os.path.join.set_index", "lightgbm.Dataset", "lightgbm.train", "lightgbm.train.predict", "pandas.DataFrame.from_dict", "pandas.DataFrame.from_dict.reset_index", "pandas.DataFrame.from_dict.to_csv", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "pandas.DataFrame", "numpy.array", "pandas.DataFrame.drop", "pandas.DataFrame.drop", "pandas.DataFrame.memory_usage", "os.path.join.groupby", "os.path.join.groupby"]], "module": ["matplotlib", "numpy", "lightgbm", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Andrelourencogit@Probabilidade/Aula 11 - An\u00e1lise Explorat\u00f3ria de Dados - Introdu\u00e7\u00e3o/Exploratory Data Analysis I - Line Charts.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/diciurcio-d@ShiftEnter/data_collection_sup.ipynb": {"API": [["numpy.exp"], [], []], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jradaelli@Capstone_dssoccer/Dssoccer.ipynb": {"API": [], "module": ["matplotlib", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/daniel-skrabacz@Working_JSON/sliderule_dsi_json_exercise.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sanieakhtar@Deep.Learning.Lab.WS17/Exercise.01/exercise_1.ipynb": {"API": [["tensorflow.app.run", "tensorflow.nn.conv2d", "tensorflow.nn.max_pool", "tensorflow.truncated_normal", "tensorflow.Variable", "tensorflow.constant", "tensorflow.Variable", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "tensorflow.name_scope", "tensorflow.reshape", "tensorflow.name_scope", "tensorflow.nn.relu", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.nn.relu", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.nn.dropout", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.cast", "tensorflow.Session", "time.time", "tensorflow.trainable_variables", "time.time", "tensorflow.trainable_variables", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.global_variables_initializer", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.run", "tensorflow.reduce_mean.eval", "tensorflow.reduce_mean.eval"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tmerrittsmith@elf_game/original/elfgame_DP.ipynb": {"API": [["collections.defaultdict"], ["collections.namedtuple", "collections.namedtuple", "random.choice"], []], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nted92@taxi/model/sandbox.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chs820@ComputationalLinearAlgebra/Lesson_1.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lucassm@eng-software-sma/notebooks/Intro Python.ipynb": {"API": [["time.strftime"], ["numpy.arange", "matplotlib.pyplot.plot", "matplotlib.pyplot.grid", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "numpy.sin", "numpy.exp"], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aliandra@proj2-movies/oscar_nom.ipynb": {"API": [["scrapy.Request", "scrapy.Request", "scrapy.Request", "scrapy.Request"]], "module": ["scrapy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/erikats@filter_list_py/test_jupyter-github.ipynb": {"API": [["numpy.arange", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.grid", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "numpy.sin"], "numpy.arange", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.grid", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "numpy.sin"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tccnchsu@OTH-tensorflow-tutorials/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/IntelliFinder@BicycleDatasetNN/dlnd-your-first-neural-network.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/slonoten@rl-tetris/rl-tetris.ipynb": {"API": [["curses.wrapper", "tetris.Tetris", "tetris.Tetris.step", "time.sleep"], ["random.randrange", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy"]], "module": ["matplotlib", "IPython", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Anirudhsekar96@Golden_Ratio_using_Monte_Carlo_Method/Finding Value of Golden Ratio using Monte Carlo Method.ipynb": {"API": [["matplotlib.pyplot.plot", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.savefig", "matplotlib.pyplot.plot", "matplotlib.pyplot.savefig", "numpy.random.rand", "numpy.random.rand"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alexsuchar@stat504/STAT 504 hw3 part 2-version 1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Buddhone@Python-dnld_intro_to_GANs/Intro_to_GANs_Exercises.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mannb986@Brewdog_Facebook_Analysis/Brewdog Facebook Analysis.ipynb": {"API": [], "module": ["pandas", "numpy", "matplotlib", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tonespy@deeplearning_beginner/Machine Learning Algorithm.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yuweilin-private@nlo_propagator/ipython/draft code.ipynb": {"API": ["matplotlib.use"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yangzhou95@notes/create_ndArray.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/brianhalperin@330-project/SI 330 Final Project.ipynb": {"API": [], "module": ["IPython", "requests", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/csh3l3-2017b@0a-heroes-miftahuladnan/Untitled.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/GraysonRicketts@titanicDataAnalysis/2015-12-24-titanic-gender-grouping.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Vishnutej@Kaggle/CNN for facial expression recognition.ipynb": {"API": ["keras.backend.set_image_dim_ordering", "numpy.random.seed", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "keras.models.Sequential.evaluate", "numpy.empty", "keras.models.Sequential.predict_classes", "keras.models.Sequential.predict_proba", "keras.layers.convolutional.Convolution2D", "keras.layers.convolutional.Convolution2D", "keras.layers.convolutional.Convolution2D", "keras.layers.convolutional.MaxPooling2D", "keras.layers.convolutional.Convolution2D", "keras.layers.convolutional.Convolution2D", "keras.layers.convolutional.Convolution2D", "keras.layers.convolutional.MaxPooling2D", "keras.layers.convolutional.Convolution2D", "keras.layers.convolutional.Convolution2D", "keras.layers.convolutional.Convolution2D", "keras.layers.convolutional.MaxPooling2D", "keras.layers.core.Dropout", "keras.layers.core.Flatten", "keras.layers.core.Dense", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.core.Activation", "numpy.fromstring", "numpy.fromstring"], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Andong501@Tianchi-taobao/introduction.ipynb": {"API": [[], [], [], []], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ibmw@Flight-Delays/Dataset Preparation.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JadeYu@dognition/get_data.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/duochirou@P0_bike_sharing/Bay_Area_Bike_Share_Analysis.ipynb": {"API": [["matplotlib.pyplot.figure", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.xticks", "matplotlib.pyplot.hist", "matplotlib.pyplot.bar", "numpy.floor", "numpy.ceil"], ["babs_visualizations.usage_stats", "numpy.array", "numpy.allclose", "numpy.allclose", "numpy.array", "numpy.allclose", "numpy.array", "numpy.array_equal"]], "module": ["matplotlib", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/edantonio505@dataAnalysis/exer4.ipynb": {"API": [], "module": ["matplotlib", "pandas_datareader", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/scoutg@test/TestBook.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/HaniAlmousli@dynamicfiltering/MNISTWDGraphLoader.ipynb": {"API": [["numpy.arange", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.train.exponential_decay", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "numpy.arange", "numpy.arange", "tensorflow.cond", "tensorflow.cond", "tensorflow.group", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.train.Saver", "gzip.open", "numpy.asarray", "tensorflow.equal", "tensorflow.equal", "tensorflow.global_variables_initializer", "pickle.load", "tensorflow.slice", "tensorflow.cond", "tensorflow.slice", "tensorflow.cond", "tensorflow.Session.run", "pickle.load", "tensorflow.equal", "tensorflow.equal", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.GradientDescentOptimizer", "tensorflow.Session.run", "tensorflow.train.Saver.save", "tensorflow.train.Saver.export_meta_graph", "pickle.dump", "tensorflow.slice", "tensorflow.slice", "tensorflow.slice", "tensorflow.slice", "tensorflow.Session.run"], ["numpy.arange", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.train.exponential_decay", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "numpy.arange", "tensorflow.cond", "tensorflow.cond", "tensorflow.group", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.train.Saver", "tensorflow.train.Saver.save", "tensorflow.train.Saver.export_meta_graph", "pickle.dump", "tensorflow.equal", "tensorflow.equal", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.slice", "tensorflow.slice", "tensorflow.slice", "tensorflow.slice", "tensorflow.Session.run", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.GradientDescentOptimizer"], ["numpy.random.RandomState", "tensorflow.nn.tanh", "tensorflow.add", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_sum", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.cast", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.nn.relu", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.einsum", "tensorflow.random_normal", "tensorflow.norm", "tensorflow.argmax", "tensorflow.cast", "tensorflow.minimum", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.nn.relu", "tensorflow.nn.softmax"], ["numpy.random.RandomState", "tensorflow.nn.tanh", "tensorflow.nn.relu", "tensorflow.reshape", "tensorflow.einsum", "tensorflow.add", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_sum", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.cast", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.nn.relu", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.einsum", "tensorflow.random_normal", "tensorflow.argmax", "tensorflow.cast", "tensorflow.minimum", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.nn.relu", "tensorflow.nn.softmax"], ["numpy.array", "os.path.join", "os.path.join", "pickle.load", "numpy.asarray", "numpy.concatenate", "numpy.concatenate", "numpy.mean", "numpy.std", "numpy.concatenate", "numpy.concatenate", "numpy.eye", "numpy.concatenate.append", "numpy.concatenate.append"], ["numpy.arange", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.train.exponential_decay", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "numpy.arange", "numpy.arange", "tensorflow.cond", "tensorflow.cond", "tensorflow.group", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.train.Saver", "gzip.open", "numpy.asarray", "tensorflow.equal", "tensorflow.equal", "tensorflow.global_variables_initializer", "pickle.load", "tensorflow.slice", "tensorflow.cond", "tensorflow.slice", "tensorflow.cond", "tensorflow.Session.run", "pickle.load", "tensorflow.equal", "tensorflow.equal", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.GradientDescentOptimizer", "tensorflow.Session.run", "tensorflow.train.Saver.save", "tensorflow.train.Saver.export_meta_graph", "pickle.dump", "tensorflow.slice", "tensorflow.slice", "tensorflow.slice", "tensorflow.slice", "tensorflow.Session.run"]], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/iarlenaquiles@aprendizado-normalization/normalization.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/macGitHub1@TeamGreens/crime_divya.ipynb": {"API": [["pandas.DataFrame", "seaborn.factorplot", "pandas.DataFrame", "seaborn.barplot", "requests.get", "requests.get"], ["pandas.read_csv", "seaborn.lmplot", "matplotlib.pyplot.figure.savefig", "pandas.read_csv", "pandas.read_csv.set_index", "matplotlib.pyplot.figure", "matplotlib.pyplot.axes", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.axes.plot", "matplotlib.pyplot.savefig", "pandas.read_csv", "pandas.read_csv.set_index", "matplotlib.pyplot.figure", "matplotlib.pyplot.axes", "matplotlib.pyplot.axes", "matplotlib.pyplot.axes.plot", "matplotlib.pyplot.axes.plot"], ["pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv.groupby", "pandas.read_csv.groupby", "pandas.DataFrame", "pandas.DataFrame.map", "pandas.DataFrame", "pandas.DataFrame", "matplotlib.pyplot.bar", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "pandas.read_csv.groupby", "pandas.read_csv.groupby", "pandas.DataFrame", "matplotlib.pyplot.bar", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "pandas.DataFrame", "pandas.DataFrame.map", "matplotlib.pyplot.bar", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "pandas.DataFrame", "pandas.DataFrame.map", "matplotlib.pyplot.bar", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "matplotlib.pyplot.bar", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show"], ["pandas.read_csv", "pandas.read_csv.copy", "numpy.multiply", "matplotlib.pyplot.subplots", "numpy.arange", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "pandas.read_csv", "pandas.read_csv.copy", "numpy.multiply", "matplotlib.pyplot.subplots", "numpy.arange", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "pandas.read_csv", "pandas.read_csv.copy", "numpy.multiply", "matplotlib.pyplot.subplots", "numpy.arange", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "pandas.read_csv", "numpy.multiply", "numpy.round", "matplotlib.pyplot.subplots", "numpy.arange", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "pandas.read_csv", "numpy.multiply", "matplotlib.pyplot.subplots", "numpy.arange", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "pandas.read_csv", "numpy.multiply", "matplotlib.pyplot.subplots", "numpy.arange", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "pandas.read_csv", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.title", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "pandas.read_csv", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.title", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "pandas.read_csv", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.title", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame"]], "module": ["matplotlib", "pandas", "numpy", "seaborn", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fsorodrigues@CBDN/mock-data-matrix.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Punctuality@labor/Labor/Untitled.ipynb": {"API": [["matplotlib.pyplot.subplot", "matplotlib.pyplot.scatter", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.subplot", "matplotlib.pyplot.scatter", "matplotlib.pyplot.plot", "matplotlib.pyplot.suptitle", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "matplotlib.pyplot.suptitle", "matplotlib.pyplot.scatter", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "pandas.DataFrame", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.mean", "numpy.mean", "numpy.min", "numpy.mean", "numpy.max", "numpy.min", "numpy.mean", "numpy.max", "numpy.mean", "numpy.mean"], ["pandas.DataFrame.from_csv", "matplotlib.pyplot.plot", "matplotlib.pyplot.scatter", "matplotlib.pyplot.plot", "matplotlib.pyplot.scatter", "matplotlib.pyplot.show"], "pandas.DataFrame.from_csv", "matplotlib.pyplot.plot", "matplotlib.pyplot.scatter", "matplotlib.pyplot.plot", "matplotlib.pyplot.scatter", "matplotlib.pyplot.show"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aerwemi@saqlite-to-csv-sqlalchemy/sqlalchemyToDf-V2.ipynb": {"API": [], "module": ["sqlalchemy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ecogsdill@homework11/data_engineering.ipynb": {"API": [["pymysql.install_as_MySQLdb", "sqlalchemy.create_engine", "sqlalchemy.orm.Session", "sqlalchemy.ext.automap.automap_base", "sqlalchemy.ext.automap.automap_base.prepare", "flask.Flask", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "sqlalchemy.orm.Session.query", "pandas.read_sql", "flask.jsonify", "pandas.read_sql", "flask.jsonify", "datetime.datetime.strptime", "datetime.datetime.date", "pandas.read_sql", "pandas.read_sql.min", "pandas.read_sql.max", "pandas.read_sql.mean", "pandas.DataFrame", "flask.jsonify", "datetime.datetime.strptime", "datetime.datetime.date", "datetime.datetime.strptime", "datetime.datetime.date", "pandas.read_sql", "pandas.read_sql.min", "pandas.read_sql.max", "pandas.read_sql.mean", "pandas.DataFrame", "flask.jsonify", "flask.Flask.run", "pandas.read_sql.to_dict", "pandas.read_sql.to_dict", "pandas.DataFrame.to_dict", "pandas.DataFrame.to_dict", "datetime.timedelta", "datetime.timedelta", "datetime.timedelta", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query"]], "module": ["sqlalchemy", "flask", "matplotlib", "pandas", "numpy", "pymysql"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/khwilson@D4.jl/Exploration.ipynb": {"API": [], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JorginaLaSalle@SAD/Exercicio1 - Data Mining.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/t0tem@Intro_to_DS_in_Python/Week+3.ipynb": {"API": [["pandas.read_csv", "pandas.read_csv.set_index", "pandas.read_csv.apply", "pandas.Series", "pandas.Series", "pandas.Series", "numpy.min", "numpy.max"], ["pandas.read_csv", "pandas.read_csv.head"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vansh007@Python-For-Data-Structure-Algorithm/Untitled.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "nose"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/romovpa@pygeoplot/ipynb/DemoForReadme.ipynb": {"API": [["distutils.core.setup"], ["display.map_to_html", "IPython.display.display", "IPython.display.HTML", "display.standalone_html"], [], [], ["jinja2.Template", "jinja2.Template", "jinja2.Template.render", "jinja2.Template.render", "re.search", "json.dumps", "random.random"]], "module": ["IPython", "jinja2", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/waaronmorris@understanding-statistical-inference-with-python/effect_size.ipynb": {"API": [["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth"], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.stats.hypergeom.pmf", "numpy.linspace", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "io.open", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.special.gamma", "math.exp", "math.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "scipy.special.betainc", "scipy.special.betaincinv", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.normal", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "re.search", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "math.exp", "math.erf", "numpy.asarray", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "thinkplot.Plot", "math.exp", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.vlines", "matplotlib.pyplot.hlines", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.gca", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.gcf", "warnings.warn", "numpy.array", "numpy.array", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.get_xticklabels", "matplotlib.pyplot.setp", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.get_yticklabels", "matplotlib.pyplot.setp", "warnings.warn", "warnings.warn", "math.log", "math.log", "numpy.diff", "numpy.diff"], ["numpy.linspace", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.annotate", "thinkplot.Plot", "thinkplot.Show", "thinkstats2.EvalNormalPdf"], ["thinkplot.Save", "nsfg2.MakeFrames", "thinkstats2.RandomSeed", "first.MakeFrames", "thinkstats2.Hist", "numpy.hstack", "numpy.random.shuffle", "numpy.random.permutation", "numpy.random.choice", "thinkstats2.Hist", "thinkstats2.Hist.Freqs", "thinkstats2.Hist", "numpy.array", "numpy.hstack", "thinkstats2.Pmf", "numpy.array", "numpy.random.shuffle", "thinkstats2.Resample", "thinkstats2.Resample", "random.choice", "thinkstats2.Corr", "thinkstats2.Hist.Freqs", "thinkstats2.Pmf.Probs", "numpy.ones", "numpy.ones"], ["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth", "collections.defaultdict"], ["nsfg.ReadFemPreg", "thinkstats2.CohenEffectSize", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist.Smallest", "thinkstats2.Hist.Largest", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkstats2.Hist", "thinkplot.PrePlot", "thinkplot.Hist", "thinkplot.Hist", "thinkplot.Save", "numpy.floor"]], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/meisben@Absolute_Radio_Statistics/Absolute_Radio_Statistics_Main_Code.ipynb": {"API": [], "module": ["lxml", "pandas", "numpy", "plotly", "requests", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/imminfo@hex/hex.ipynb": {"API": [["collections.deque"], ["collections.namedtuple"], ["collections.namedtuple", "statistics.median", "numpy.trunc", "seaborn.distplot", "os.system", "numpy.percentile"], [], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.path.exists", "os.makedirs", "math.log", "itertools.chain"], ["collections.deque"], ["collections.namedtuple", "statistics.median", "os.system"], ["ipywidgets.HTML", "ipywidgets.VBox", "IPython.display.display", "ipywidgets.IntProgress", "ipywidgets.IntProgress"], ["collections.namedtuple"], ["urllib.request.urlopen"]], "module": ["matplotlib", "ipywidgets", "numpy", "seaborn", "networkx", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/97agarwalmanu@MLP-in-Tensorflow/Multilayer Neural Network.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aa-gamJain@Data-Exploration/Data Wrangling,Clean, Transform, Merge, Reshape.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lincoln1alpha@CO2-Emissions-Levels/Dataset Graphs.ipynb": {"API": ["pandas.read_excel", "pandas.read_excel.head", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.boxplot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.subplot", "matplotlib.pyplot.boxplot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gbronn@MovieRecommender/movie_recommender_segmented.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ggraj@walmart/Untitled.ipynb": {"API": [], "module": ["seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yuggo@SOW/metropolis_simulation.ipynb": {"API": [["numpy.log", "numpy.random.seed", "numpy.random.normal", "numpy.exp", "numpy.random.normal", "numpy.array", "pandas.DataFrame", "math.ceil", "numpy.random.gamma", "numpy.sort", "numpy.sort.append", "numpy.sort", "numpy.asarray", "numpy.zeros", "numpy.random.seed", "numpy.random.normal", "numpy.exp", "numpy.random.normal", "numpy.array", "pandas.DataFrame", "numpy.random.uniform", "numpy.zeros", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.zeros", "numpy.exp", "numpy.log", "numpy.random.binomial", "numpy.random.binomial", "numpy.random.binomial", "scipy.stats.uniform.rvs", "numpy.random.normal", "numpy.exp", "numpy.random.normal", "numpy.transpose", "random.sample", "numpy.log", "numpy.random.binomial", "numpy.random.binomial", "numpy.random.binomial", "scipy.stats.uniform.rvs", "numpy.random.normal", "numpy.random.normal", "numpy.exp", "numpy.random.normal", "numpy.transpose", "numpy.sum", "numpy.array.append", "numpy.sum", "numpy.exp", "numpy.array", "numpy.array", "numpy.array", "numpy.random.gamma", "numpy.array.append", "numpy.array", "numpy.arange", "numpy.array", "numpy.arange", "numpy.array"], ["numpy.array", "numpy.array", "numpy.array", "numpy.divide", "numpy.exp", "numpy.outer", "numpy.outer", "numpy.exp", "numpy.array", "numpy.array", "numpy.array", "numpy.log", "numpy.add.outer", "numpy.outer", "numpy.exp", "numpy.arange", "numpy.array", "numpy.prod", "numpy.arange", "numpy.array", "numpy.sum", "numpy.apply_along_axis", "numpy.array", "numpy.argmax", "scipy.stats.gamma.pdf", "scipy.stats.gamma.pdf", "scipy.stats.gamma.pdf", "matplotlib.pyplot.hist", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "math.ceil", "numpy.zeros", "math.ceil", "numpy.zeros", "scipy.stats.multivariate_normal.rvs", "scipy.stats.uniform.rvs", "math.ceil", "numpy.zeros", "math.ceil", "numpy.zeros", "scipy.stats.multivariate_normal.rvs", "scipy.stats.uniform.rvs", "numpy.mean", "numpy.std", "numpy.transpose", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "numpy.zeros", "numpy.array", "numpy.percentile", "numpy.transpose", "numpy.transpose", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.random.rand.mean", "numpy.random.rand.std", "numpy.random.rand.mean", "numpy.random.rand.std", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.exp", "numpy.arange", "numpy.array", "numpy.prod", "numpy.arange", "numpy.array", "numpy.log", "numpy.sum", "numpy.zeros", "scipy.stats.gamma.cdf", "numpy.multiply", "numpy.arange", "numpy.log", "numpy.array", "numpy.argmax", "scipy.stats.gamma.pdf", "scipy.stats.gamma.pdf", "scipy.stats.gamma.pdf", "matplotlib.pyplot.hist", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "math.ceil", "numpy.zeros", "math.ceil", "numpy.zeros", "scipy.stats.multivariate_normal.rvs", "scipy.stats.uniform.rvs", "numpy.mean", "numpy.mean", "numpy.std", "numpy.mean", "numpy.std", "numpy.array", "numpy.percentile", "numpy.array", "numpy.array", "numpy.zeros", "numpy.dot", "numpy.mean", "numpy.power", "scipy.special.gamma", "numpy.log", "numpy.divide", "numpy.log", "numpy.power", "numpy.log", "numpy.sum", "numpy.arange", "numpy.mean", "scipy.stats.beta.pdf", "scipy.stats.beta.pdf", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.max", "numpy.shape", "numpy.max", "numpy.random.rand.mean", "numpy.random.rand.std", "numpy.array", "numpy.sum", "numpy.arange", "numpy.mean", "scipy.stats.beta.pdf", "numpy.log", "numpy.log", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.gca", "numpy.transpose", "matplotlib.pyplot.show", "numpy.shape", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.gca", "numpy.transpose", "numpy.transpose", "matplotlib.pyplot.show", "numpy.power", "scipy.special.gamma", "scipy.stats.gamma.cdf", "numpy.arange", "numpy.arange", "math.ceil", "numpy.mean", "numpy.zeros", "numpy.exp", "numpy.zeros", "numpy.exp", "numpy.power", "numpy.power", "numpy.arange", "numpy.arange", "numpy.arange", "math.ceil", "numpy.mean", "scipy.stats.beta.pdf", "scipy.stats.beta.pdf", "numpy.zeros", "numpy.exp", "numpy.mean", "numpy.transpose", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "numpy.transpose", "numpy.transpose", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.arange", "numpy.arange", "numpy.random.rand", "numpy.random.rand", "numpy.random.rand", "numpy.random.rand", "numpy.random.rand", "numpy.random.rand", "numpy.random.rand", "numpy.random.rand", "numpy.random.rand", "numpy.random.rand", "numpy.transpose", "numpy.transpose", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.arange", "numpy.arange", "numpy.max", "numpy.random.rand", "numpy.random.rand", "numpy.max", "math.ceil", "math.ceil"]], "module": ["pandas", "numpy", "matplotlib", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dnswlt@jupyter-playground/Matplotlib_Basics.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bovitzk@Capstone/TechnicalEval1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/madliu@cGAN-test-in-keras/Untitled2.ipynb": {"API": [], "module": ["matplotlib", "scipy", "keras", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/n4development@Traffic-Sign-Classifier/Traffic_Sign_Classifier.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gorkemsevim@PythonCourse/Installing and Importing Packages.ipynb": {"API": [], "module": ["matplotlib", "scrapy", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/universezhu@universe/logistic+regression.ipynb": {"API": ["pandas.read_csv"], "module": ["matplotlib", "tensorflow", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/galperins4@First-TicTacToe-Game/TicTacToe Final (1).ipynb": {"API": [], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nrivet84@test/Untitled-Copy1.ipynb": {"API": [], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MengZn@py_learn/keras/demo.ipynb": {"API": [["random.sample"]], "module": ["keras", "numpy", "matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mullachv@dl-really/recitation2.ipynb": {"API": [], "module": ["torch", "numpy", "matplotlib", "torchvision"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/TristanHehnen@FDSInput/Prototyping.ipynb": {"API": [[], ["numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt"], [], [], [], ["os.path.join", "sys.exit", "sys.exit"], ["numpy.array"], ["matplotlib.pyplot.subplots", "matplotlib.patches.Rectangle", "matplotlib.pyplot.show", "numpy.cos", "numpy.sin"], ["numpy.sum", "numpy.sum", "numpy.tan"]], "module": ["matplotlib", "ipywidgets", "pandas", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nazb@farmburg/microtransactions.ipynb": {"API": [["pandas.read_csv", "pandas.read_csv.head", "pandas.read_csv.head", "scipy.stats.chi2_contingency", "scipy.stats.binom_test", "scipy.stats.binom_test", "scipy.stats.binom_test", "pandas.notnull", "pandas.read_csv.groupby"]], "module": ["scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/telecombcn-dl@2017-cfis/sessions/mlp.ipynb": {"API": [["time.time", "keras.datasets.mnist.load_data", "keras.datasets.cifar10.load_data", "time.time", "keras.applications.vgg16.VGG16", "keras.applications.vgg16.VGG16", "time.time", "time.time"], ["matplotlib.pyplot.imshow", "matplotlib.pyplot.title", "matplotlib.pyplot.colorbar", "numpy.arange", "matplotlib.pyplot.xticks", "matplotlib.pyplot.yticks", "itertools.product", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "random.sample", "matplotlib.pyplot.subplots", "matplotlib.pyplot.subplots", "numpy.arange", "matplotlib.pyplot.legend", "matplotlib.pyplot.legend", "numpy.clip.mean", "numpy.clip", "matplotlib.pyplot.text", "numpy.clip.std", "keras.backend.image_dim_ordering", "numpy.clip.transpose", "numpy.clip", "keras.backend.sqrt", "keras.backend.mean", "keras.backend.square"], ["keras.preprocessing.image.load_img", "keras.preprocessing.image.img_to_array", "numpy.expand_dims", "keras.applications.vgg16.preprocess_input", "keras.backend.square", "keras.backend.square", "keras.backend.sum", "keras.backend.image_dim_ordering", "keras.backend.pow", "numpy.copy", "numpy.clip", "numpy.array"]], "module": ["matplotlib", "scipy", "keras", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Diiso@triva/tp1/tp1_python/tp1.ipynb": {"API": [["matplotlib.image.imread", "matplotlib.pyplot.figure", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "gaussian_convolution.gaussianConvolution", "gaussian_convolution.gaussianConvolution", "gaussian_convolution.gaussianConvolution", "gradient.computeGradientNoConvolution", "numpy.zeros", "numpy.zeros", "numpy.zeros", "quantify_gradient.quantifyGradient", "numpy.zeros", "non_max_supression.nms", "non_max_supression.nms", "gaussian_convolution.gaussianConvolution", "gaussian_convolution.gaussianConvolution", "gradient.computeGradientNoConvolution", "gradient.computeGradientNoConvolution", "quantify_gradient.quantifyGradient", "quantify_gradient.quantifyGradient", "non_max_supression.nms", "non_max_supression.nms", "canny_edges.cannyEdges", "non_max_supression.nms", "canny_edges.cannyEdges", "non_max_supression.nms", "matplotlib.pyplot.imread", "matplotlib.pyplot.figure", "matplotlib.pyplot.axis", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.imread", "matplotlib.pyplot.figure", "matplotlib.pyplot.axis", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.imread", "matplotlib.pyplot.figure", "matplotlib.pyplot.axis", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.imread", "matplotlib.pyplot.figure", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.imread", "matplotlib.pyplot.figure", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.imread", "matplotlib.pyplot.figure", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.imread", "matplotlib.pyplot.figure", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.imread", "matplotlib.pyplot.figure", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.imread", "matplotlib.pyplot.figure", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.imread", "matplotlib.pyplot.figure", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.show", "os.path.exists", "os.makedirs", "numpy.dot", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.imshow", "matplotlib.pyplot.figure.savefig", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn", "matplotlib.pyplot.get_cmap"], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.matrix", "numpy.matrix", "scipy.signal.convolve2d", "scipy.signal.convolve2d", "numpy.zeros", "numpy.zeros", "math.sqrt", "math.atan", "math.sqrt", "math.atan", "math.pow", "math.pow", "math.pow", "math.pow"], ["math.ceil", "numpy.arange", "numpy.vectorize", "numpy.arange", "numpy.vectorize", "numpy.dot", "math.exp", "numpy.sum", "math.pow"], ["gaussian_convolution.gaussianConvolution", "gradient.computeGradient", "quantify_gradient.quantifyGradient", "non_max_supression.nms", "non_max_supression.nms"], ["numpy.zeros"], ["gaussian_filter_2d.gaussianFilter2d", "scipy.signal.convolve2d"], ["numpy.zeros"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MGEScan@evaluation/results/mgescan.ipynb": {"API": ["numpy.arange", "matplotlib.pyplot.subplots", "matplotlib.pyplot.show", "numpy.arange", "matplotlib.pyplot.subplots", "matplotlib.pyplot.show"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mattphillipsphd@tensorflow_dlrtp/week-3/matt-week-3.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nicocheh@TP2-ALGO3/problema 1/Untitled.ipynb": {"API": ["pandas.read_csv", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.show"], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/erjenkins29@shsu-stats/Untitled2.ipynb": {"API": [["pandas.read_csv", "pandas.DataFrame", "pandas.read_csv", "pandas.read_csv.apply", "pandas.read_csv", "pandas.read_csv", "pandas.Series", "pandas.read_csv", "os.listdir", "os.path.isfile", "numpy.intersect1d", "numpy.intersect1d", "numpy.intersect1d", "numpy.intersect1d", "os.path.join", "numpy.array"], ["pandas.read_csv", "numpy.unique", "matplotlib.pyplot.show", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xticks", "matplotlib.pyplot.yticks", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot"], ["pandas.read_csv", "numpy.round", "pandas.read_csv.groupby", "pandas.read_csv.groupby"], ["pandas.Series", "pandas.read_csv", "pandas.DataFrame", "pandas.read_csv.groupby", "pandas.read_csv", "pandas.DataFrame", "pandas.read_csv.groupby", "pandas.Series", "os.listdir", "os.path.isfile", "os.path.join"], [], ["simshoy.sim_SHOY"], [], ["pandas.read_csv", "pandas.read_csv.iterrows", "matplotlib.pyplot.show", "os.listdir", "os.path.isfile", "csv.reader", "csv.reader", "csv.reader", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xticks", "matplotlib.pyplot.yticks", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "os.path.join", "csv.reader", "csv.DictWriter", "csv.DictWriter", "csv.DictWriter.writerow", "csv.DictWriter.writeheader"], ["pandas.read_csv", "pandas.read_csv", "numpy.nditer", "numpy.nditer", "numpy.nditer"], ["pandas.read_csv", "pandas.read_csv.iterrows", "matplotlib.pyplot.show", "os.listdir", "os.path.isfile", "csv.reader", "csv.reader", "csv.reader", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xticks", "matplotlib.pyplot.yticks", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "os.path.join", "csv.reader", "csv.DictWriter", "csv.DictWriter", "csv.DictWriter.writerow", "csv.DictWriter.writeheader"], ["pandas.read_csv", "pandas.read_csv", "numpy.nditer", "numpy.nditer", "numpy.nditer"]], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gwifish@Labs/Modeling Static Friction.ipynb": {"API": ["numpy.linspace", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.ylim", "scipy.optimize.curve_fit", "scipy.optimize.curve_fit"], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MitchelOsb1@numpy/Array.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/feudalism@euler-msv/Euler_Mehrschrittverfahren.ipynb": {"API": [["openpyxl.Workbook", "numpy.array", "numpy.array", "numpy.array", "matplotlib.pyplot.subplots", "matplotlib.pyplot.show", "openpyxl.Workbook.save", "openpyxl.chart.Reference", "numpy.array.append", "numpy.array.append", "numpy.array.append", "openpyxl.styles.Font", "openpyxl.chart.ScatterChart", "openpyxl.chart.Reference", "openpyxl.chart.Series", "numpy.amin", "numpy.amax"]], "module": ["matplotlib", "openpyxl", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DanielSaldivarSalas@My-Jupyter-Notebooks/Some Functions with matplotlib.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vrishank97@MNIST-Tensorflow/Deep MNIST with Tensorflow.ipynb": {"API": [["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.InteractiveSession", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.placeholder", "tensorflow.nn.dropout", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.truncated_normal", "tensorflow.Variable", "tensorflow.constant", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.max_pool", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.InteractiveSession.run", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.global_variables_initializer", "tensorflow.train.AdamOptimizer.run", "tensorflow.cast.eval", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.InteractiveSession", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.InteractiveSession.run", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.global_variables_initializer", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.train.GradientDescentOptimizer.run", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.train.GradientDescentOptimizer"]], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/seanking94@sportz/Stat 2017.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bovenson@Tianchi/o2o/o2o1st.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv.head", "pandas.read_csv.head", "pandas.read_csv.head"], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/apmaniyar@bot-practice/ChatterBot.ipynb": {"API": [["os.environ.get", "os.environ.get", "os.environ.get", "os.environ.get", "os.environ.get", "tweepy.OAuthHandler", "tweepy.OAuthHandler.set_access_token", "tweepy.API", "tweepy.parsers.JSONParser.update_status", "time.sleep", "tweepy.parsers.JSONParser"], "tweepy.OAuthHandler", "tweepy.OAuthHandler.set_access_token", "tweepy.API", "tweepy.parsers.JSONParser.update_status", "time.sleep", "tweepy.parsers.JSONParser"], "module": ["tweepy", "config"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/arushi-bhatt@RnnTextGenerator/TextGeneratorFinal.ipynb": {"API": [["numpy.reshape", "keras.utils.np_utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.callbacks.ModelCheckpoint", "keras.models.Sequential.fit", "numpy.reshape", "keras.utils.np_utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.load_weights", "keras.models.Sequential.compile", "numpy.random.randint", "keras.layers.LSTM", "keras.layers.Dropout", "keras.layers.Dense", "keras.layers.LSTM", "keras.layers.Dropout", "keras.layers.Dense", "numpy.reshape", "keras.models.Sequential.predict", "numpy.ndarray.argmax", "sys.stdout.write"], ["keras.utils.data_utils.get_file", "numpy.zeros", "numpy.zeros", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.optimizers.RMSprop", "keras.models.Sequential.compile", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.Activation", "numpy.exp", "numpy.random.multinomial", "numpy.argmax", "keras.models.Sequential.fit", "random.randint", "numpy.log", "numpy.sum", "sys.stdout.write", "numpy.asarray", "numpy.zeros", "sys.stdout.write", "sys.stdout.flush", "keras.models.Sequential.predict"], [], "numpy.reshape", "keras.utils.np_utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.callbacks.ModelCheckpoint", "keras.models.Sequential.fit", "keras.layers.LSTM", "keras.layers.Dropout", "keras.layers.Dense"], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nbennett4025@project/Homework #2.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bogordon86@Belly-Button-Biodiversity/Data_Engineering.ipynb": {"API": [["flask.Flask", "sqlalchemy.create_engine", "sqlalchemy.ext.automap.automap_base", "sqlalchemy.ext.automap.automap_base.prepare", "sqlalchemy.orm.Session", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.render_template", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.Flask.run", "sqlalchemy.orm.Session.query", "sqlalchemy.desc", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query"]], "module": ["sqlalchemy", "numpy", "flask", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/clayadavis@Slides-IEA/img/draw graphs.ipynb": {"API": [["networkx.barabasi_albert_graph", "networkx.barabasi_albert_graph.nodes", "networkx.readwrite.json_graph.node_link_data", "json.dumps"]], "module": ["networkx", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kallavenkatesh@AI_TF_Estimators/AI_TF_Estimators.ipynb": {"API": [], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tingwu-zhang@TensorFlow-Examples/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.group", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.python.ops.resources.initialize_resources", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.python.ops.resources.shared_resources", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/singhal@python_workshop/women_engineers.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/khenders@Python-Bridge-Project-2/OurProject2/4_21_17_Food_Processing.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/WeiqingYu@SAS/example.ipynb": {"API": [["numpy.matmul", "numpy.random.randn", "numpy.empty", "numpy.isnan", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.identity", "numpy.matmul", "numpy.linalg.inv", "numpy.matmul", "numpy.linalg.inv", "numpy.empty.transpose", "numpy.nansum", "numpy.nanmean", "numpy.linalg.inv", "numpy.matmul", "numpy.matmul", "numpy.linalg.inv", "numpy.matmul", "numpy.matmul", "numpy.nansum", "numpy.matmul", "numpy.identity"], ["numpy.linspace", "numpy.array", "numpy.random.rand", "numpy.random.rand.copy", "sas.SAS", "sas.SAS.fit", "numpy.dot", "matplotlib.pyplot.subplots", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.dot", "numpy.random.rand", "numpy.mean", "numpy.random.choice", "math.sin", "math.cos", "math.sinh", "math.cosh", "numpy.isnan"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fbonafe@octools/run_analysis.ipynb": {"API": [[], [], ["numpy.genfromtxt", "numpy.genfromtxt", "numpy.genfromtxt", "numpy.genfromtxt", "numpy.genfromtxt", "numpy.linspace", "scipy.interpolate.interp1d", "scipy.interpolate.interp1d", "scipy.interpolate.interp1d", "scipy.interpolate.interp1d", "scipy.interpolate.interp1d", "numpy.atleast_1d", "numpy.zeros", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.subplot.set_ylabel", "matplotlib.pyplot.subplot.tick_params", "matplotlib.pyplot.subplot.axis", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.subplot.set_ylabel", "matplotlib.pyplot.subplot.tick_params", "matplotlib.pyplot.subplot.legend", "matplotlib.pyplot.subplot.axis", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.subplot.set_xlabel", "matplotlib.pyplot.subplot.set_ylabel", "matplotlib.pyplot.subplot.tick_params", "matplotlib.pyplot.subplot.ticklabel_format", "matplotlib.pyplot.subplot.axis", "matplotlib.pyplot.savefig", "matplotlib.pyplot.cla", "matplotlib.pyplot.clf", "matplotlib.pyplot.close", "scipy.interpolate.splint"], [], [], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.linspace", "numpy.linspace", "matplotlib.mlab.griddata", "matplotlib.pyplot.figure", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.contourf", "matplotlib.pyplot.axis", "matplotlib.pyplot.colorbar", "matplotlib.pyplot.savefig", "matplotlib.pyplot.scatter", "numpy.sqrt", "numpy.sqrt", "numpy.array.min", "numpy.array.max", "numpy.array.min", "numpy.array.max", "numpy.sqrt", "numpy.sqrt", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.hypot", "numpy.hypot", "numpy.hypot", "numpy.hypot"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DavidNKraemer@urate-nowcast/notebooks/Tests.ipynb": {"API": [["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "json.dumps", "requests.post", "json.loads", "datetime.datetime.today"], ["seaborn.set_context", "seaborn.set_style", "pandas.read_csv", "statsmodels.api.tsa.ARIMA", "numpy.empty", "numpy.empty", "matplotlib.pyplot.subplots", "seaborn.despine", "matplotlib.pyplot.savefig", "pandas.read_csv.diff"], []], "module": ["matplotlib", "pandas", "statsmodels", "numpy", "seaborn", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jamesflint@mini-project-xml-wrangling/sliderule_dsi_xml_exercise.ipynb": {"API": [], "module": ["IPython", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/UniqueAndys@Think_Bayes/7_Prediction.ipynb": {"API": [[], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.gcf", "numpy.array", "numpy.array", "logging.warning", "logging.warning", "math.log", "math.log", "numpy.diff", "numpy.diff"], ["csv.reader", "matplotlib.pyplot.plot", "matplotlib.pyplot.show"]], "module": ["matplotlib", "numpy", "plotly", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NicholasDeLateur@matplotlib-practice/Matplotlib practice.ipynb": {"API": ["numpy.array", "numpy.array", "numpy.linspace", "scipy.interpolate.spline", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.scatter", "matplotlib.pyplot.suptitle", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.yscale", "matplotlib.pyplot.legend", "matplotlib.pyplot.grid", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "scipy.interpolate.spline", "numpy.array.min", "numpy.array.max", "numpy.linspace"], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/HusainZafar@TransferLearningTutorial/Re-train multiple layers/second.ipynb": {"API": [], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/RossGiorgio@Prog/Lab 4.ipynb": {"API": [[], ["random.seed", "pairslist_impl.MakeList", "pairslist_impl.MakeList", "pairslist_impl.MakeList", "pairslist_impl.MakeList", "pairslist_impl.MakeList", "pairslist_impl.EmptyList", "random.randint", "pairslist_impl.EmptyList", "pairslist_impl.MakeList", "pairslist_impl.Head", "pairslist_impl.Tail", "pairslist_impl.Head", "pairslist_impl.Head", "pairslist_impl.MakeList", "pairslist_impl.Tail", "pairslist_impl.Tail", "pairslist_impl.MakeList", "pairslist_impl.Head", "pairslist_impl.Tail", "pairslist_impl.EmptyList", "pairslist_impl.Tail", "pairslist_impl.Tail", "pairslist_impl.Head", "pairslist_impl.Tail", "pairslist_impl.Head", "pairslist_impl.Head", "pairslist_impl.Tail", "pairslist_impl.Head", "pairslist_impl.Tail", "pairslist_impl.Head", "pairslist_impl.Tail", "pairslist_impl.MakeList", "pairslist_impl.Tail", "pairslist_impl.MakeList", "pairslist_impl.Head", "pairslist_impl.Head", "pairslist_impl.Tail", "pairslist_impl.Tail", "pairslist_impl.Head", "pairslist_impl.Head", "pairslist_impl.Tail"], [], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dbevzenko@kb-stats/data/SymbolStatistics.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/srifilter@Springboard-StatisticalInterferencExercise2v2/sliderule_dsi_inferential_statistics_exercise_2.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "seaborn", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/leogovan@investigate-a-dataset/investigate-a-dataset-tidyup-version.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tgenewein@StopUsingRainbowColormaps/WhyRainbowColormapsAreABadIdea.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kimitoboku@learn_note/Bayesian_Methdos_for_Hackers/chap01.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/PeterSteiglechner@EBM_MyModel/EBM1D_Georg.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yongyehuang@view_based_sentiment/notebook/data_preprocess.ipynb": {"API": [[], ["numpy.asarray", "numpy.asarray", "numpy.random.permutation", "numpy.random.permutation"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/adrian-soto@PresidentsVerbosities/wordclouds.ipynb": {"API": [["re.compile", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.axis", "matplotlib.pyplot.savefig", "os.path.exists", "os.makedirs", "wordcloud.STOPWORDS.union", "matplotlib.pyplot.show", "wordcloud.WordCloud", "re.escape", "re.escape"]], "module": ["matplotlib", "wordcloud"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hickokc@group-project-1/group activity 1.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fengdasuk19@GAN/DCGAN-test/DCGAN-label2image.ipynb": {"API": [], "module": ["matplotlib", "torchvision", "torch", "pandas", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Steven-N-Hart@demo_GenoGAN/Synthesizing genetic data with `GenoGAN`.ipynb": {"API": [], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/PLMA52@Music-Data/music_data_exercices July 15 2017.ipynb": {"API": [], "module": ["sqlalchemy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/amirkeren@kaggle-toxic/toxic.ipynb": {"API": [], "module": ["keras", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Slavin22@MatPlotLib_Homework/SeanSlavin_Pyber.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv", "pandas.merge", "matplotlib.pyplot.subplots", "matplotlib.pyplot.legend", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.annotate", "matplotlib.pyplot.annotate", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.show", "matplotlib.pyplot.title", "matplotlib.pyplot.pie", "matplotlib.pyplot.show", "matplotlib.pyplot.title", "matplotlib.pyplot.pie", "matplotlib.pyplot.show", "matplotlib.pyplot.title", "matplotlib.pyplot.pie", "matplotlib.pyplot.show", "pandas.merge", "pandas.read_csv.groupby", "pandas.read_csv.groupby"], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/THUPZJ@Matrix-factorization-based-recommender-system/BigData2thAssignment.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ZainRaza14@Logistic-Regression-Model/Logistic-Regression.ipynb": {"API": [[], ["math.exp", "math.log", "math.log"], ["numpy.min", "numpy.max", "numpy.mean", "numpy.std"], []], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/brandn@dc-project-crypto-market/Exploring the Bitcoin cryptocurrency market.ipynb": {"API": ["matplotlib.pyplot.style.use", "pandas.read_json", "pandas.read_json.head", "matplotlib.pyplot.subplots"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/saikatbsk@Rachael-Chatbot/notebooks/baseline_evaluation.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hec44@hmm/tarea3.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SujayCS@Genetic-Algorithms/Frozen+Lake+Environment+with+Genetic+Algorithm.ipynb": {"API": [["numpy.random.randint", "numpy.sum", "numpy.random.randint", "numpy.random.random", "numpy.random.randint", "numpy.random.randint", "numpy.array", "numpy.random.randint"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/penny860806@Hello/jungyi/1.ipynb": {"API": [], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jlguerreiro@Testing-ipywidgets/Widget List.ipynb": {"API": [], "module": ["ipywidgets"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/physics91si@lab03-larkw/lab3.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pauloabelha@deeplearning/DeepJester/Jester.ipynb": {"API": [["keras.datasets.mnist.load_data", "matplotlib.pyplot.interactive", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "keras.models.Sequential.evaluate", "keras.models.Sequential.predict_classes", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure", "matplotlib.pyplot.show", "matplotlib.pyplot.subplot", "matplotlib.pyplot.imshow", "matplotlib.pyplot.title", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.core.Activation", "numpy.nonzero", "numpy.nonzero", "matplotlib.pyplot.subplot", "matplotlib.pyplot.imshow", "matplotlib.pyplot.title", "matplotlib.pyplot.subplot", "matplotlib.pyplot.imshow", "matplotlib.pyplot.title"]], "module": ["lxml", "matplotlib", "keras", "numpy", "requests", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NGHS-CSP@knight-challenge-v2-bcopengm85/Knight Poster Challenge.ipynb": {"API": ["matplotlib.pyplot.imread", "matplotlib.pyplot.subplots", "matplotlib.pyplot.imread", "matplotlib.pyplot.subplots"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/iagsav@AS/T4/Polyakova/\u0443\u043f\u0440 4.ipynb": {"API": [["timeit.default_timer", "math.pow", "timeit.default_timer", "random.random"], ["timeit.default_timer", "math.pow", "timeit.default_timer", "random.random"], [], [], ["timeit.default_timer", "random.randint", "math.floor", "timeit.default_timer", "math.floor"], ["time.time", "time.time", "random.randint"], ["time.time", "time.time", "random.randint"], ["timeit.default_timer", "random.randint", "math.floor", "timeit.default_timer", "math.floor"], ["timeit.default_timer", "math.pow", "timeit.default_timer", "random.random"], ["timeit.default_timer", "math.pow", "timeit.default_timer", "random.random"], ["timeit.default_timer", "random.randint", "math.floor", "timeit.default_timer", "math.floor"], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ["random.random"], [], [], ["timeit.default_timer", "math.pow", "timeit.default_timer", "random.random"], ["timeit.default_timer", "math.pow", "timeit.default_timer", "random.random"], [], [], ["random.uniform"], [], ["time.time", "random.randint", "time.time"], ["time.time", "time.time", "random.randint"], ["time.time", "time.time", "random.randint"], [], ["timeit.default_timer", "math.pow", "timeit.default_timer", "random.random"], ["timeit.default_timer", "math.pow", "timeit.default_timer", "random.random"], ["timeit.default_timer", "random.shuffle", "timeit.default_timer"], [], [], ["timeit.default_timer", "math.pow", "timeit.default_timer", "random.random"], [], [], [], [], [], ["time.time", "time.time", "random.randint"], [], [], [], [], [], [], [], [], [], ["random.random"], [], [], ["random.random"], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/flying-pi@HPI_ML/test.ipynb": {"API": [], "module": ["pandas", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/WillFleming@logistic-regression/Logistic-Regression-with-IRLS.ipynb": {"API": [[], ["numpy.genfromtxt", "numpy.genfromtxt.view", "numpy.split", "numpy.split.flatten", "numpy.concatenate", "numpy.array", "numpy.mean", "math.log", "numpy.diag", "numpy.transpose", "numpy.transpose.dot", "numpy.linalg.inv", "numpy.linalg.inv.dot", "numpy.exp", "numpy.ones_like", "numpy.ones_like", "numpy.divide", "numpy.split.flatten", "numpy.exp", "numpy.log", "numpy.log"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ejweisbrod@No-show-project/Investigate_a_Dataset.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv.head", "pandas.read_csv.astype", "pandas.read_csv.head", "pandas.read_csv.apply", "pandas.read_csv.head", "pandas.read_csv.apply", "pandas.read_csv.head", "pandas.read_csv.head", "pandas.read_csv.apply", "pandas.read_csv.apply", "numpy.percentile", "numpy.percentile", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.scatter", "matplotlib.pyplot.show", "matplotlib.pyplot.title", "matplotlib.pyplot.axis", "matplotlib.pyplot.pie", "matplotlib.pyplot.show", "numpy.corrcoef", "pandas.read_csv.isnull", "pandas.read_csv.duplicated"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lucas-matt@kaggle-mnist-digit-recognizer/src/minst.ipynb": {"API": [], "module": ["matplotlib", "numpy", "keras", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alexeysas@aind2-rnn/RNN_project.ipynb": {"API": [["numpy.asarray", "numpy.asarray", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "numpy.shape", "keras.layers.LSTM", "keras.layers.Dropout", "keras.layers.Dense"]], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rohantilva@Apple-Detection/perceptron-for-apple-detection.ipynb": {"API": [], "module": ["torch", "IPython", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SSShupe@Python_Sandbox/Untitled3.ipynb": {"API": [[], ["os.walk", "time.time", "os.remove", "os.stat", "os.listdir", "shutil.copy"], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "random.choice", "random.choice", "random.choice"], [], [], [], [], ["os.walk", "os.listdir", "itertools.chain", "shutil.move"], ["os.chdir", "glob.iglob"], [], [], [], [], [], [], [], ["os.walk", "time.time", "os.remove", "os.stat", "os.listdir", "shutil.copy"]], "module": ["numpy", "plotly", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SonaliKalthur@Uni/MachineLearning_Assg.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/juanhenao21@BPM/BPM.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/BenEgeIzmirli@arcfinder/arcfinder 0.4.2.ipynb": {"API": [["numpy.exp", "numpy.sqrt", "numpy.real", "numpy.real", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.nansum", "numpy.nansum", "numpy.absolute", "numpy.absolute", "numpy.nansum", "numpy.nansum", "numpy.absolute", "numpy.absolute", "numpy.nansum", "numpy.nansum", "numpy.real", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.abs", "numpy.absolute", "numpy.absolute"], ["os.chdir", "os.listdir", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.colorbar", "numpy.fft.fftn", "astropy.io.fits.open", "os.path.isfile", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.rot90", "numpy.mean", "numpy.std", "numpy.mean", "numpy.log10", "numpy.mean", "numpy.linspace", "numpy.array", "os.path.basename", "numpy.linspace", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "multiprocessing.Pool", "multiprocessing.Pool.map", "numpy.sqrt", "numpy.absolute", "numpy.absolute", "numpy.absolute", "multiprocessing.Pool", "multiprocessing.Pool.map", "multiprocessing.Pool", "multiprocessing.Pool.map", "astropy.io.fits.open", "numpy.linspace", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.zeros", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.subplots_adjust", "matplotlib.pyplot.plot", "numpy.linspace", "matplotlib.pyplot.xticks", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "numpy.sqrt", "numpy.sqrt", "multiprocessing.cpu_count", "multiprocessing.cpu_count", "numpy.sqrt", "multiprocessing.cpu_count", "numpy.mean", "numpy.mean", "sys.exit", "numpy.abs", "numpy.shape", "numpy.shape", "numpy.shape", "numpy.array", "numpy.sqrt", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "numpy.average", "numpy.linspace", "numpy.sqrt", "numpy.linspace", "numpy.abs", "numpy.float", "numpy.fft.fftshift", "numpy.array", "numpy.absolute", "numpy.absolute", "numpy.absolute", "numpy.absolute", "numpy.linspace", "numpy.sqrt", "numpy.absolute", "numpy.absolute", "numpy.absolute", "numpy.absolute", "numpy.sqrt", "numpy.absolute", "numpy.absolute"]], "module": ["matplotlib", "numpy", "astropy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/theBlindRooster@Pyber/pyber2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bstano@Pokemon/Pokemon.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fabricio-2Uu@P2-Pandas/An\u00e1lise de Dados - Projeto P2 - Titanic .ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/krishanth4@nn/basic_nn.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "h5py"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jameskeegan@connect_three/aic2_three_connect - Copy.ipynb": {"API": [["numpy.full", "numpy.arange", "numpy.zeros", "numpy.all", "numpy.full", "utils.search_sequence_numpy", "numpy.random.choice", "numpy.setdiff1d", "numpy.append", "utils.search_sequence_numpy", "numpy.diagonal", "utils.search_sequence_numpy", "numpy.diagonal", "utils.search_sequence_numpy"], ["numpy.array", "numpy.arange", "numpy.any", "numpy.zeros", "numpy.zeros", "numpy.arange"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/xynazog@VisualizingAirbnb/Visualization.ipynb": {"API": [["os.system", "os.system", "os.system", "os.system", "os.system", "os.system", "os.system"], "pandas.read_csv", "collections.Counter", "pandas.DataFrame.from_dict.sort_index", "pandas.DataFrame.from_dict.plot", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.show", "matplotlib.pyplot.subplots", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.show", "matplotlib.pyplot.scatter", "pandas.DataFrame.from_dict"], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yoichinaka@text-generator/RNN_project.ipynb": {"API": [["numpy.asarray", "numpy.asarray", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "numpy.shape", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.LSTM", "keras.layers.Dense"]], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/YungChunLu@AIND-RNN/RNN_project.ipynb": {"API": [["numpy.array", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "re.sub", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "numpy.array.append", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.Activation", "numpy.array"]], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lsn88211@KymoAnalyzer/KymoAnalyzer.ipynb": {"API": ["pandas.ExcelWriter", "pandas.ExcelWriter", "pandas.ExcelWriter", "glob.glob", "pandas.DataFrame", "pandas.DataFrame.from_dict", "pandas.DataFrame.transpose", "pandas.DataFrame.transpose.to_excel", "pandas.DataFrame", "pandas.DataFrame.from_dict", "pandas.DataFrame.transpose", "pandas.DataFrame.transpose.to_excel", "pandas.DataFrame", "pandas.DataFrame.from_dict", "pandas.DataFrame.transpose", "pandas.DataFrame.transpose.to_excel", "pandas.ExcelWriter.save", "pandas.ExcelWriter.save", "pandas.ExcelWriter.save", "pandas.DataFrame.transpose.apply", "pandas.DataFrame.transpose.groupby", "pandas.DataFrame.transpose.apply", "pandas.DataFrame.transpose.groupby", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "pandas.ExcelFile", "pandas.ExcelFile.parse", "pandas.read_excel", "pandas.ExcelFile.parse", "pandas.read_excel", "pandas.set_option", "pandas.set_option", "pandas.read_excel.iterrows", "pandas.read_excel.groupby", "numpy.arange", "numpy.arange"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/etiennethomassen@opsnoeien-en-rente/douglas.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dvanelten@code-examples/pandas_example.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MLtaotao@AIND-Simulated_Annealing/AIND-Simulated_Annealing.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jpcp13@bezout/python/bezout_2.ipynb": {"API": [[], "bezout_2.P2txt", "time.clock", "bezout_2._GH", "bezout_2._HK", "bezout_2._J", "bezout_2._C", "bezout_2._B", "time.clock", "numpy.linalg.matrix_rank", "time.clock", "bezout_2.Y_reduct", "bezout_2.Y_test", "time.clock", "bezout_2.qz_BB2roots", "bezout_2.roots_test", "numpy.histogram", "time.clock", "bezout_2.compute_grobner", "bezout_2.gb2txt", "bezout_2.poly2prism", "time.clock", "time.clock", "time.clock", "numpy.array", "time.clock", "numpy.log10", "time.clock", "numpy.array"], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/isu17@Pytorch-Projects/jupyter_nb/linear_regression.ipynb": {"API": [["torch.rand.int", "torch.rand.int", "torch.rand", "torch.rand"], [], ["numpy.arange", "matplotlib.pyplot.plot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.show"]], "module": ["torch", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/technicakidz@CNN_har/SubjectDetection.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/PasteurTran@ISL_Python/Chapter_2_Statistical_Learning/Chapter 2 Statistical Learning .ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/deannachurch@GIAB_work/CheckRemappedSites.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/manishjathan@Data-Analysis-Project/Titanic DataSet Project.ipynb": {"API": [], "module": ["matplotlib", "pandas_datareader", "pandas", "numpy", "seaborn", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/millerafy@FutureLearn-TB-Deaths/Project 1 - TB Deaths .ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/michhar@rpy2_sample_notebooks/TestingRpy2.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/niartenyaw@backprop_project/Tensors.ipynb": {"API": [], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Yamini-S@Python/classData.py.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mittrayash@Pandas-Data-Manipulation/Assignment+3.ipynb": {"API": [["pandas.read_excel", "pandas.read_csv", "pandas.read_csv.replace", "pandas.read_csv.rename", "pandas.read_excel", "pandas.merge", "pandas.merge", "pandas.merge", "pandas.DataFrame", "pandas.cut", "pandas.merge", "pandas.merge", "pandas.merge"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/codeofzen@tensorflow-examples/02-mnist-with-layers/mnist_with_tf_layers.ipynb": {"API": [["tensorflow.contrib.learn.datasets.mnist.read_data_sets", "tensorflow.reset_default_graph", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.summary.image", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.summary.merge_all", "tensorflow.Variable", "tensorflow.zeros.assign", "tensorflow.train.Saver", "tensorflow.Session.run", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter.add_graph", "tensorflow.contrib.tensorboard.plugins.projector.ProjectorConfig", "tensorflow.contrib.tensorboard.plugins.projector.visualize_embeddings", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.nn.max_pool", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.nn.max_pool", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.zeros", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.summary.FileWriter.add_summary", "tensorflow.Session.run", "tensorflow.train.Saver.save", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "os.path.join"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ashishkumardoke@Fasttext/fast+text+_telugu.ipynb": {"API": [["gensim.models.KeyedVectors.load_word2vec_format", "gensim.models.KeyedVectors.load_word2vec_format.similar_by_word", "gensim.models.KeyedVectors.load_word2vec_format.most_similar"]], "module": ["gensim"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Shinseeker@IS362_Week7/IS362_Week7.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/faketooth@Python-Spiders/fang.ipynb": {"API": [[], [], [], [], [], [], []], "module": ["scrapy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/spectorp@muon_production/muon_production_calculations.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ninjakx@XOR_ANN/XOR.ipynb": {"API": ["numpy.mat", "numpy.mat", "numpy.multiply", "numpy.mat", "numpy.mat", "numpy.mat", "numpy.mat", "numpy.multiply", "numpy.exp", "numpy.zeros", "numpy.zeros", "numpy.mat", "numpy.mat", "numpy.random.random", "numpy.random.random", "numpy.shape", "numpy.shape", "numpy.append", "numpy.append"], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/scottmcalister@04_Numpy_Pandas_Hw/Heroes_of_Pymoli.ipynb": {"API": ["pandas.read_json", "pandas.DataFrame", "pandas.read_json.nunique", "pandas.read_json.mean", "pandas.read_json.count", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.cut", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.merge", "pandas.read_json.drop_duplicates", "pandas.merge", "pandas.merge.set_index", "pandas.merge.rename", "pandas.DataFrame", "pandas.merge.sort_values", "pandas.DataFrame", "pandas.merge", "pandas.merge", "pandas.merge.set_index", "pandas.merge.rename", "pandas.read_json.sum", "pandas.DataFrame.sort_values", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby"], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zyl007@NN_DL_ANG_2017/week2/vectorization.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kshitizrimal@Digit-Recognizer/notebook.ipynb": {"API": [["pandas.read_csv", "pandas.read_csv.values.astype", "keras.utils.np_utils.to_categorical", "numpy.max", "numpy.std", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "keras.models.Sequential.predict_classes", "os.listdir", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.optimizers.Adam", "pandas.read_csv", "pandas.DataFrame"]], "module": ["keras", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/KirillTushin@tmp/2 \u0441\u0434\u0430\u0447\u0430.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/talles17@Projeto-2---Prob/Projeto2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pranavreddy1@Population-vs-GDP/Population.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gugaevkirill@Data-science-tasks/2. Polynomic approximation/approximator.ipynb": {"API": [["numpy.array", "re.split", "numpy.argmin", "scipy.spatial.distance.cosine"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wangfei-cn@deep-learning/mnist_softmax.ipynb": {"API": ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.InteractiveSession", "tensorflow.global_variables_initializer.run", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.InteractiveSession.run", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.InteractiveSession.run", "tensorflow.train.GradientDescentOptimizer", "tensorflow.global_variables_initializer"], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/elvira29@OM_project/Model.ipynb": {"API": [], "module": ["numpy", "xlsxwriter"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/anishsharma3@anish/floydhub/Bootstrap/bootstrap.ipynb": {"API": [["os.path.basename", "os.path.basename"], ["os.path.basename", "os.path.basename"], ["os.path.basename", "os.path.basename"], ["json.load"], [], ["random.choice", "random.randint", "random.choice", "random.choice"], [], ["os.path.basename", "os.path.basename"], ["os.path.basename", "os.path.basename"], ["os.path.basename", "os.path.basename"], ["json.load"], [], ["random.choice", "random.randint", "random.choice", "random.choice"], []], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Dipanshu007@data_science_learning/test.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/harishtm@learningpython/sqlalchemylearning/sqlalchemy_backref_vs_back_populates.ipynb": {"API": [[], [], [], [], [], [], [], [], ["asyncio.get_event_loop", "asyncio.get_event_loop.run_in_executor"], ["weakref.ref"], [], [], [], [], [], [], ["sqlite3.connect", "sqlite3.connect.cursor", "sqlite3.connect.close"], ["sqlalchemy.create_engine", "sqlalchemy.orm.sessionmaker", "sqlite_sqlalchemy.Person", "sqlite_sqlalchemy.Address"], ["sqlite3.connect", "sqlite3.connect.cursor", "sqlite3.connect.commit", "sqlite3.connect.close"], ["sqlalchemy.create_engine", "sqlalchemy.orm.sessionmaker", "sqlite_sqlalchemy.Person.session.query.all", "sqlite_sqlalchemy.Address.session.query.all"], ["sqlalchemy.ext.declarative.declarative_base", "sqlalchemy.create_engine", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.Column", "sqlalchemy.orm.relationship", "sqlalchemy.String", "sqlalchemy.String", "sqlalchemy.String", "sqlalchemy.String", "sqlalchemy.ForeignKey"], ["re.findall"], [], [], [], [], ["django.conf.settings.configure", "django.http.HttpResponse", "django.conf.urls.url", "django.core.management.execute_from_command_line"]], "module": ["IPython", "sqlalchemy", "django"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/li-chengze@Python-TicTacToe/TicTacToe.ipynb": {"API": [["IPython.display.clear_output", "random.randint"]], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/HongleiXie@Learning-Deeper/simple_MLP.ipynb": {"API": [[], [], [], ["numpy.mean", "numpy.zeros", "numpy.sum", "numpy.argmin", "numpy.abs"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rafaelcs10@ga-ds-projects/projects/project-2/starter-code/project2-starter.ipynb": {"API": [[]], "module": ["matplotlib", "scipy", "pandas", "statsmodels", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jasminapegan@prog1/Projekt.ipynb": {"API": [["os.path.dirname", "os.makedirs", "sys.stdout.flush", "requests.get", "os.path.join", "csv.DictWriter", "csv.DictWriter.writeheader", "os.path.isfile", "os.listdir", "csv.DictWriter.writerow"], ["re.compile", "re.compile", "orodja.zapisi_tabelo", "re.finditer", "re.finditer"], ["os.path.isfile"], ["pandas.read_csv", "orodja.zapisi_tabelo", "pandas.read_csv", "pandas.concat", "os.path.isfile", "os.makedirs"], ["sys.stdout.flush", "os.path.isfile", "requests.get"]], "module": ["pandas", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alvarogg777@google-hashcode2018/OptimalRoutes2.ipynb": {"API": [["numpy.abs", "numpy.abs", "pandas.DataFrame"], []], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Shahan83@Twitter-Sentiment-Analysis-using-Python/Twitter Sentiment Analysis using Python.ipynb": {"API": [], "module": ["textblob", "tweepy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/raspstephan@TRMM_NN/test.ipynb": {"API": [], "module": ["netCDF4", "matplotlib", "keras", "numpy", "tensorflow", "h5py"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/WalterWangNYUMLC@Tensorphone/Bruxism_tensorboard.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "tensorflow", "IPython", "librosa"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/matule@jupytertest/Vids2.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/djechlin@coms4995-hw1/HW1-uni.ipynb": {"API": [["glob.glob.sort", "numpy.array", "numpy.zeros", "numpy.column_stack", "numpy.save", "sys.exit", "glob.glob"], ["numpy.load", "numpy.mean", "numpy.std"], ["numpy.random.seed", "numpy.vectorize", "numpy.vectorize", "numpy.maximum", "numpy.random.rand", "numpy.exp", "numpy.maximum", "numpy.argmax", "numpy.sum", "numpy.dot", "numpy.dot", "numpy.sum", "datetime.datetime.now", "random.sample", "numpy.dot", "numpy.max", "numpy.sum", "numpy.sum", "datetime.datetime.now.strftime", "numpy.random.randn", "numpy.sign", "numpy.log", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sign", "numpy.abs", "numpy.abs", "numpy.multiply", "numpy.multiply", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/taraokelly@Problem-set-Jupyter-Pyplot-and-Numpy/solutions/solution.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/3824@miya_zillow/notebook/xgboost_submit.ipynb": {"API": [], "module": ["numpy", "xgboost", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/huangfeng2017@Time-series-data-visualization/Time Series Data Visualization.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/econokeith@Bayesian-AR-1--MCMC-Demo/Bayesian AR(1) MCMC Demo.ipynb": {"API": [["numpy.zeros", "scipy.stats.t.fit", "scipy.stats.t", "scipy.stats.invgamma.fit", "scipy.stats.invgamma", "numpy.linspace", "matplotlib.pyplot.plot", "numpy.linspace", "matplotlib.pyplot.plot", "numpy.random.randn", "scipy.stats.t.pdf", "scipy.stats.invgamma.pdf", "numpy.inner", "numpy.inner"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/TheRusskiy@deep-support-agent/deep_agent.ipynb": {"API": [["os.path.join", "pickle.dump", "pickle.load", "pickle.dump", "pickle.load"], ["flask.Flask", "predictor.Predictor", "predictor.Predictor.init", "flask.Flask.route", "flask.request.get_json", "predictor.Predictor.predict", "flask.jsonify", "flask.Flask.run"], ["tensorflow.Graph", "pickle.load", "pickle.load", "tensorflow.Session", "tensorflow.train.import_meta_graph", "tensorflow.train.import_meta_graph.restore", "tensorflow.Graph.get_tensor_by_name", "tensorflow.Graph.get_tensor_by_name", "tensorflow.Graph.get_tensor_by_name", "tensorflow.Graph.get_tensor_by_name", "tensorflow.Graph.get_tensor_by_name", "numpy.random.choice", "numpy.array", "numpy.where"]], "module": ["numpy", "flask", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Marswang92@D-Tech-Competition/Di-Tech Train Data Generation.ipynb": {"API": [], "module": ["matplotlib", "numpy", "keras", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pennkoad@notebook/jupyter/dynamic_simulation_in_python.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jcitp@vae-cop/AnalyseVAE-COP.ipynb": {"API": [["numpy.zeros", "numpy.zeros", "glob.glob", "pandas.read_table", "pandas.read_table", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt"], []], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/RyanOngAI@CS50FinalProject/Ryan Ong - CS50 Final Project.ipynb": {"API": [], "module": ["matplotlib", "pandas_datareader", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MicrosoftLearning@Deep-Learning-Explained/Module7/IntroductonToRecurrentNNs.ipynb": {"API": [], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/prabinkarki777@Eupore-Top-League-Predictability/top league predictability.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dormilon@python_assignment/Montes_python_assignment.ipynb": {"API": [["pandas.read_csv", "Bio.SeqIO.parse"]], "module": ["pandas", "seaborn", "matplotlib", "Bio"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mansourkheffache@intESN/scribble.ipynb": {"API": [["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.array", "numpy.dot", "numpy.dot", "numpy.sqrt", "numpy.zeros", "numpy.zeros", "numpy.argmax", "copy.copy", "numpy.argmax", "numpy.append", "numpy.zeros", "numpy.zeros", "numpy.linalg.pinv", "numpy.mean", "numpy.zeros", "numpy.zeros", "numpy.dot", "numpy.sqrt", "numpy.zeros", "numpy.append", "numpy.random.randn", "numpy.dot", "numpy.max", "numpy.exp", "numpy.dot", "numpy.sum", "numpy.max", "numpy.zeros", "numpy.arange", "numpy.zeros.append", "numpy.zeros", "numpy.zeros", "numpy.append", "numpy.mean", "numpy.sum", "numpy.log", "numpy.sum", "numpy.sum", "numpy.append", "numpy.append", "numpy.zeros", "numpy.append", "numpy.arange", "numpy.roll", "numpy.max", "numpy.roll", "numpy.roll", "numpy.roll", "numpy.roll"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sjmartin2228@Taller-Diplomado-AME-ModuloI-ETVL-IPython/Taller_Sindy Martinez Marin.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nishizawashigeki24@Frequency_Response_to_Unit_Response/Frequency_Response_to_Unit_Response.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/RPI-Analytics@assignment-3-christiankapp/hm/intro-python-exercises.ipynb": {"API": [[]], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/toncus@HeroeofPymoli/MyHomework.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/UHHPhysik@Physik5/mu_analysis.ipynb": {"API": [["math.copysign", "math.asinh", "math.atanh", "sys.stdout.write", "sys.stdout.write", "sys.stdout.write", "matplotlib.pyplot.hist", "matplotlib.pyplot.savefig", "matplotlib.pyplot.show", "math.copysign", "math.copysign", "sys.stdout.write", "json.load", "sys.stdout.write", "sys.stdout.write", "sys.stdout.write", "math.atan2", "math.atan2", "math.cos", "math.sin", "math.sinh", "math.cosh"], "mu_analysis.LorentzVector", "mu_analysis.LorentzVector", "mu_analysis.LorentzVector", "mu_analysis.read_events", "matplotlib.pyplot.hist", "matplotlib.pyplot.hist", "numpy.average", "numpy.std"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jbn@who_follows_james_damore/Analysis.ipynb": {"API": [["os.path.join", "os.path.join", "collections.defaultdict", "os.listdir", "random.shuffle", "json.load", "json.dump", "os.path.join", "os.path.join"]], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Tijil@Nuffield/Untitled15 (1).ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/conwayyao@WMATA-Trip-Analysis/Trip-Analysis.ipynb": {"API": [[], "pandas.read_csv", "pandas.to_datetime", "pandas.read_csv.sort_values", "pandas.DataFrame", "pandas.DataFrame.set_index", "pandas.DataFrame.drop", "pandas.DataFrame.sort_values", "pandas.DataFrame.sort_values", "pandas.DataFrame.sort_values"], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kearajune@Fourier-Transforms/Fourier1.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yiulau@l2hmc_mod/l2hmc-master/SCGExperiment.ipynb": {"API": [[], [], [], [], [], [], ["tensorflow.diag_part", "numpy.zeros", "scipy.stats.ortho_group.rvs", "numpy.array", "numpy.diag", "numpy.linalg.inv", "numpy.linalg.cholesky", "numpy.random.randn", "scipy.stats.ortho_group.rvs", "numpy.random.randn", "numpy.random.randn", "numpy.random.choice", "collections.Counter", "collections.Counter.iteritems", "numpy.concatenate", "numpy.random.shuffle", "numpy.log", "numpy.zeros", "numpy.square", "numpy.exp", "numpy.cos", "numpy.sin", "tensorflow.matmul", "numpy.exp", "numpy.eye", "numpy.linalg.det", "numpy.copy", "tensorflow.constant", "tensorflow.constant", "numpy.diag", "numpy.zeros", "numpy.sqrt", "tensorflow.reduce_sum", "tensorflow.concat", "numpy.zeros.append", "tensorflow.square", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.cast", "tensorflow.exp", "tensorflow.exp", "tensorflow.minimum", "tensorflow.where", "tensorflow.where", "numpy.exp", "numpy.array", "numpy.eye", "tensorflow.matmul", "tensorflow.transpose", "scipy.stats.multivariate_normal", "numpy.exp", "numpy.eye", "tensorflow.square", "tensorflow.reduce_logsumexp", "numpy.random.multivariate_normal", "tensorflow.square", "tensorflow.greater", "tensorflow.greater", "numpy.random.randn", "numpy.random.randn", "numpy.square", "tensorflow.shape", "numpy.log", "numpy.random.uniform", "numpy.sqrt", "tensorflow.expand_dims", "tensorflow.log", "numpy.log", "numpy.random.uniform", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "numpy.linalg.inv", "tensorflow.shape", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.cos", "tensorflow.cos", "numpy.linalg.det", "tensorflow.log", "scipy.stats.multivariate_normal"], ["tensorflow.where", "tensorflow.while_loop", "tensorflow.cast", "tensorflow.random_normal", "tensorflow.less", "tensorflow.random_uniform", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.random_uniform", "tensorflow.shape", "tensorflow.cast", "tensorflow.shape", "tensorflow.zeros", "tensorflow.constant", "tensorflow.shape", "tensorflow.shape"], ["tensorflow.exp", "tensorflow.check_numerics", "tensorflow.exp", "tensorflow.placeholder", "tensorflow.constant", "tensorflow.gather", "tensorflow.squeeze", "tensorflow.tile", "tensorflow.reduce_sum", "tensorflow.multiply", "tensorflow.multiply", "numpy.zeros", "numpy.logical_not", "tensorflow.constant", "tensorflow.zeros", "tensorflow.while_loop", "tensorflow.constant", "tensorflow.zeros", "tensorflow.while_loop", "tensorflow.exp", "tensorflow.where", "tensorflow.get_variable", "tensorflow.log", "numpy.zeros", "numpy.stack", "tensorflow.cast", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.stop_gradient", "tensorflow.stop_gradient", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.constant", "tensorflow.gradients", "numpy.logical_not.astype", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.less", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.less", "tensorflow.minimum", "tensorflow.is_finite", "tensorflow.zeros_like", "tensorflow.constant", "tensorflow.zeros_like", "numpy.random.permutation", "tensorflow.cos", "tensorflow.sin", "tensorflow.square", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.shape", "tensorflow.shape", "tensorflow.log", "tensorflow.zeros_like", "tensorflow.zeros_like", "numpy.arange", "tensorflow.shape", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.shape", "tensorflow.constant", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply"], ["tensorflow.constant", "tensorflow.scan", "tensorflow.split", "tensorflow.linspace", "dynamics.Dynamics", "dynamics.Dynamics.forward", "tensorflow.where", "tensorflow.where", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.zeros_like", "tensorflow.zeros_like", "tensorflow.random_normal", "tensorflow.reduce_logsumexp", "tensorflow.log", "tensorflow.reduce_mean", "tensorflow.stack", "tensorflow.shape", "tensorflow.random_uniform", "tensorflow.shape", "tensorflow.cast", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape"], ["tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.multiply", "tensorflow.reduce_logsumexp", "tensorflow.log", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.shape", "tensorflow.square"], [], ["tensorflow.add", "tensorflow.variable_scope", "tensorflow.contrib.layers.variance_scaling_initializer", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.matmul", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.exp", "tensorflow.nn.tanh", "tensorflow.get_variable", "tensorflow.constant_initializer", "tensorflow.constant_initializer"], ["numpy.random.uniform", "numpy.shape", "tensorflow.transpose", "scipy.stats.multivariate_normal", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.where", "tensorflow.log", "tensorflow.reduce_sum", "tensorflow.get_collection", "numpy.array", "tensorflow.stack", "tensorflow.log", "tensorflow.square", "tensorflow.square", "numpy.sum", "scipy.stats.multivariate_normal.logpdf", "tensorflow.random_uniform", "numpy.random.random", "tensorflow.shape", "numpy.random.permutation", "numpy.sum", "tensorflow.unstack", "tensorflow.gradients"], ["matplotlib.pyplot.figure", "matplotlib.pyplot.figure", "dynamics.Dynamics", "tensorflow.placeholder", "sampler.propose", "numpy.array", "matplotlib.pyplot.subplot", "matplotlib.pyplot.imshow", "matplotlib.pyplot.grid", "matplotlib.pyplot.axis", "matplotlib.pyplot.subplot", "matplotlib.pyplot.imshow", "matplotlib.pyplot.grid", "matplotlib.pyplot.axis", "numpy.copy"]], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mojoblue@practice_Tensorflow/CNN_CIFAR(Image Classification)/CIFAR-10.ipynb": {"API": [], "module": ["matplotlib", "pandas", "keras", "numpy", "tensorflow", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/masahiro12345@meetup/RNN for meet up model2.ipynb": {"API": ["keras.datasets.imdb.load_data", "keras.preprocessing.sequence.pad_sequences", "keras.preprocessing.sequence.pad_sequences", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "keras.models.Sequential.evaluate", "keras.layers.Embedding", "keras.layers.GRU", "keras.layers.Dense"], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/xmeng17@TV-Script-Generation/dlnd_tv_script_generation.ipynb": {"API": [["os.path.join", "pickle.dump", "pickle.load", "pickle.dump", "pickle.load"], ["tensorflow.Graph", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "numpy.array", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/outlace@FitVec/Example.ipynb": {"API": [[], ["numpy.random.choice", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.arange", "numpy.array", "numpy.zeros", "numpy.zeros", "numpy.matrix", "numpy.random.random_integers", "numpy.random.randint", "numpy.concatenate", "numpy.concatenate", "numpy.random.choice", "numpy.argmin", "numpy.repeat", "numpy.random.permutation", "numpy.argmin", "numpy.array", "numpy.float", "numpy.random.normal", "numpy.sum"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fengdasuk19@Uda-MLND-Smartcab/smartcab.ipynb": {"API": [[], [], [], [], ["environment.Environment", "environment.Environment.create_agent", "environment.Environment.set_primary_agent", "simulator.Simulator", "simulator.Simulator.run", "planner.RoutePlanner", "os.path.join", "random.random", "csv.DictWriter", "math.exp", "numpy.random.choice", "csv.DictWriter", "math.exp", "numpy.random.choice", "numpy.random.choice", "numpy.random.choice", "numpy.random.choice"], ["random.choice"], "visuals.plot_trials", "visuals.plot_trials", "visuals.plot_trials"], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fairfield-university-is505-fall2017@health-stats-part-2-yiqi0904/HealthStatsPart1.ipynb": {"API": ["IPython.display.display", "IPython.display.HTML"], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mukhilazhagan@XOR_Classifier/2_Class_Classifier.ipynb": {"API": ["numpy.loadtxt", "copy.deepcopy", "numpy.arange", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.title", "numpy.random.shuffle", "numpy.insert", "numpy.random.rand", "numpy.random.rand", "numpy.append", "numpy.exp", "numpy.exp"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yipengliu@globalpruning/CIFAR10.ipynb": {"API": ["keras.datasets.cifar10.load_data", "numpy.mean", "numpy.mean", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.models.load_model", "keras.models.load_model.compile", "time.time", "keras.models.load_model.evaluate", "time.time", "keras.models.load_model", "keras.models.load_model.compile", "time.time", "keras.models.load_model.evaluate", "time.time", "keras.layers.Input", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.MaxPooling2D", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.MaxPooling2D", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.MaxPooling2D", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.MaxPooling2D", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.BatchNormalization", "keras.layers.Dense", "keras.models.Model", "keras.models.Sequential", "numpy.round", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.MaxPooling2D", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.MaxPooling2D", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.MaxPooling2D", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.MaxPooling2D", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Convolution2D", "keras.layers.BatchNormalization", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.BatchNormalization", "keras.layers.Dense", "keras.backend.function", "h5py.File", "h5py.File.close", "numpy.round", "numpy.zeros", "numpy.zeros", "keras.layers.Convolution2D", "keras.models.load_model.add", "copy.deepcopy", "numpy.zeros", "numpy.zeros", "keras.layers.Convolution2D", "keras.models.load_model.add", "copy.deepcopy", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "keras.layers.BatchNormalization", "keras.models.load_model.add", "numpy.expand_dims", "numpy.squeeze", "h5py.File.create_dataset", "keras.layers.MaxPooling2D", "keras.models.load_model.add", "keras.backend.learning_phase", "numpy.sum", "numpy.sum", "keras.layers.Flatten", "keras.models.load_model.add", "numpy.mean", "numpy.abs", "numpy.abs", "numpy.round", "numpy.zeros", "numpy.expand_dims", "keras.backend.placeholder", "keras.layers.Flatten", "keras.backend.function", "numpy.squeeze", "keras.layers.Dense", "keras.models.load_model.add", "copy.deepcopy", "keras.layers.Dense", "keras.models.load_model.add", "keras.models.load_model.add", "numpy.round", "keras.backend.int_shape", "keras.layers.Flatten", "keras.backend.learning_phase", "numpy.sum", "numpy.abs"], "module": ["keras", "h5py", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Klaproth@asteroids/Untitled.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AMRiehle@matplotlib-challenge/Pymaceuticals Inc/Pymaceuticals Inc.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv", "pandas.merge", "pandas.merge.head", "pandas.merge.groupby", "matplotlib.pyplot.subplots", "matplotlib.pyplot.subplots", "matplotlib.pyplot.subplots", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "numpy.arange", "matplotlib.pyplot.subplots", "matplotlib.pyplot.axhline", "matplotlib.pyplot.grid"], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/venamax@ucb-261/MIDS-W261-2015-Quiz-Week01-AlejandroRojas.ipynb": {"API": [[], [], ["csv.reader"], [], ["csv.reader"], [], [], [], [], [], [], ["sys.stderr.write"], [], ["csv.reader", "sys.stderr.write", "sys.stderr.write"], ["sys.stderr.write"], ["csv.reader", "sys.stderr.write"], ["csv.reader", "sys.stderr.write"], [], ["csv.reader", "sys.stderr.write"]], "module": ["mrjob"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cmitR@myNum_mooc/assignment_rep/02_spacetime/traffic_flow.ipynb": {"API": [[], []], "module": ["matplotlib", "IPython", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nirupamaprv@DAND_Test_Asgt/Uda_NumPy_Test_Asgt.ipynb": {"API": ["numpy.array", "numpy.array", "numpy.array.mean", "numpy.array.sum", "numpy.array.sum", "numpy.array.sum"], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/WangXinJun448@-/data_cleaning.ipynb": {"API": [["pandas.read_csv"], ["pandas.read_csv", "pandas.concat", "pandas.concat.append", "pandas.concat.append", "pandas.concat.append", "pandas.concat.append", "pandas.concat", "pandas.concat.append", "pandas.concat.append", "pandas.concat", "pandas.read_csv", "pandas.concat", "pandas.concat.append", "pandas.concat.append", "pandas.concat.append", "pandas.concat.append", "pandas.concat", "pandas.concat.sort_values", "pandas.to_datetime", "pandas.concat.groupby", "pandas.to_datetime", "pandas.to_datetime", "pandas.to_datetime", "pandas.read_csv.get_chunk", "pandas.concat.groupby", "pandas.concat.groupby", "pandas.read_csv.get_chunk"], ["pandas.read_csv", "pandas.concat", "pandas.read_csv.iterrows", "pandas.concat", "pandas.read_csv", "pandas.concat", "pandas.read_csv", "pandas.concat", "pandas.concat", "pandas.concat.append", "pandas.to_datetime", "pandas.read_csv.get_chunk", "pandas.read_csv.get_chunk"], [], ["pandas.read_csv", "collections.Counter", "pandas.read_csv", "pandas.concat", "pandas.concat", "pandas.merge", "pandas.merge.to_csv", "pandas.read_csv.get_chunk"], ["pandas.read_csv", "collections.Counter", "pandas.read_csv", "pandas.concat", "pandas.read_csv", "pandas.to_datetime", "pandas.concat", "pandas.merge", "pandas.merge", "pandas.merge.to_csv", "pandas.read_csv.get_chunk", "pandas.read_csv.groupby"], ["pandas.read_csv", "pandas.concat.map", "pandas.to_datetime", "pandas.concat.to_csv", "pandas.read_csv", "pandas.read_csv", "pandas.concat", "pandas.concat.head", "pandas.concat.describe", "pandas.concat.head", "pandas.read_csv.get_chunk"]], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Gan-Jiang@DLND-P4-Language-Translation/dlnd_language_translation.ipynb": {"API": [["os.path.join", "copy.copy", "pickle.dump", "pickle.load", "pickle.dump", "pickle.load", "copy.copy.items", "numpy.array", "numpy.array"], ["helper.create_lookup_tables", "helper.create_lookup_tables", "numpy.array_equal", "tensorflow.Graph.as_default", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.reduce_max", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.LSTMStateTuple", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.LSTMStateTuple", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_max", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_max", "tensorflow.python.layers.core.Dense", "tensorflow.contrib.rnn.LSTMStateTuple", "tensorflow.variable_scope", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_max", "tensorflow.python.layers.core.Dense", "tensorflow.contrib.rnn.LSTMStateTuple", "itertools.chain.from_iterable", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph", "tensorflow.random_uniform", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.variable_scope", "tensorflow.contrib.rnn.LSTMCell", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.truncated_normal_initializer", "tensorflow.variable_scope", "tensorflow.contrib.rnn.LSTMCell", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.truncated_normal_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/TakuyaIgarashi@Python-Code/B\u30af\u30e9\u30b9\u3000\u25cb\u00d7\u30af\u30a4\u30ba\u63d0\u51fa\u7528\uff08\u4e94\u5341\u5d50\u62d3\u4e5f\uff09\u306e\u30b3\u30d4\u30fc.ipynb": {"API": ["IPython.display.display", "pandas.DataFrame", "IPython.display.display", "pandas.DataFrame"], "module": ["IPython", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Alexoner@dl-experiment/nlp/segmentation/word_seg_nn.ipynb": {"API": [[], ["gensim.models.word2vec.Word2Vec.Word2Vec", "numpy.random.shuffle", "gensim.models.word2vec.Word2Vec.build_vocab", "tqdm.trange", "numpy.random.shuffle", "gensim.models.word2vec.Word2Vec.train"], ["os.path.getsize", "os.path.isdir", "struct.unpack", "struct.unpack", "glob.glob", "sys.exit"], [], ["os.listdir", "codecs.open", "codecs.open", "codecs.open.readlines", "codecs.open.close", "codecs.open.close", "codecs.open", "codecs.open", "codecs.open.readlines", "codecs.open.close", "codecs.open.close", "numpy.array", "os.path.join", "os.listdir", "codecs.open.write", "codecs.open.write", "functools.reduce", "os.path.join", "codecs.open.write", "codecs.open.write", "codecs.open.write", "codecs.open.write", "codecs.open.write", "codecs.open.write", "codecs.open.write", "codecs.open.write"], ["numpy.loadtxt", "numpy.concatenate", "itertools.chain.from_iterable", "numpy.array", "numpy.array", "logging.Logger", "numpy.unique"]], "module": ["keras", "gensim", "numpy", "tqdm"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AschHarwood@KNN/Untitled.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/crotty-d@customer-churn-explore/customer_churn_explore.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chrispaulca@waterfall_testing/test1.ipynb": {"API": [["matplotlib.ticker.FuncFormatter", "pandas.DataFrame", "pandas.DataFrame.plot", "pandas.DataFrame.max", "pandas.DataFrame.iterrows", "pandas.DataFrame.sum"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dangm24@recommender_hw/recommender_homework.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/baker12355@Autotrading/trader.ipynb": {"API": [["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "pandas.read_csv", "pandas.Series", "pandas.Series"]], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/diarmaidfinnerty@Inferential-Statistics-Body-Temp/Exercise 1 - Body Temperature.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alvations@neurotic/Hello Neuron!.ipynb": {"API": [], "module": ["keras", "IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cnrudd@jupyter-notebooks/Dataframes.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/abehmiel@pystats-MANOVA-demo/manova.ipynb": {"API": [], "module": ["matplotlib", "statsmodels", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mat-esp-2016@integracao-numerica-gnt6/tarefa-integracao.ipynb": {"API": [[]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/unifam123@ML-ya/Course 3/Week 4/edit_CookingLDA_PA.ipynb": {"API": [], "module": ["numpy", "gensim"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dimdub34@pres_frejus/mateSHS__expe_eco.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mattiaz88@data-science-at-scale/Crime-Analytics.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cmondorf@DLND-your-first-network/dlnd-your-first-neural-network-archived.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AlexSun1995@SentimentAnalysis/word2vec_training.ipynb": {"API": [], "module": ["numpy", "gensim", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ndaman@continuum/Airy Stress Demos.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "sympy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Songeo@animalshelters/src/Untitled.ipynb": {"API": [["matplotlib.rcParams.update", "pandas.read_csv", "pandas.read_csv.head", "numpy.array", "numpy.unique", "numpy.unique", "numpy.array"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/eglewis@OCNG-DYNM/HW1-DYNM.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ssoftcheck@kdd1999/kdd_1999_no_spark.ipynb": {"API": [["numpy.empty", "numpy.empty", "numpy.empty", "numpy.array_split", "multiprocessing.Pool", "multiprocessing.Pool.close", "multiprocessing.Pool.join", "numpy.concatenate", "numpy.isnan", "numpy.isnan", "numpy.isnan", "multiprocessing.Pool.starmap", "numpy.concatenate", "numpy.concatenate", "numpy.empty", "numpy.empty", "multiprocessing.Pool.starmap", "multiprocessing.Pool.starmap", "pandas.concat", "numpy.random.uniform", "numpy.random.uniform"], ["numpy.isnan", "numpy.random.uniform", "pandas.concat"], ["numpy.empty", "numpy.empty", "numpy.random.uniform", "numpy.random.uniform", "pandas.concat", "numpy.isnan", "numpy.isnan"], ["numpy.empty", "numpy.empty", "numpy.empty", "numpy.isnan", "numpy.isnan", "numpy.isnan", "numpy.empty", "numpy.empty", "numpy.random.uniform", "numpy.random.uniform", "pandas.concat"]], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chengwq613@aind2-rnn2/RNN_project.ipynb": {"API": [["numpy.asarray", "numpy.asarray", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "numpy.asarray.append", "numpy.asarray.append", "numpy.shape", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.Activation"]], "module": ["keras", "numpy", "tensorflow", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jankokk@thesis/notebooks/arch/bolfire_arch__n_sim_500.ipynb": {"API": [], "module": ["matplotlib", "numpy", "utils", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/TarunSunkaraneni@Clustering/notebooks/Single-Link.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "seaborn", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vdibs@dt_rnn/cogs181_project.ipynb": {"API": ["scipy.misc.imread", "scipy.misc.imread"], "module": ["matplotlib", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shaddreamteam@ggbm/shitty_python_prototypes/Tree_examples.ipynb": {"API": [[], ["numpy.array", "numpy.max", "numpy.min", "numpy.hstack", "numpy.zeros_like", "numpy.arange", "numpy.arange", "numpy.percentile"], [], ["numpy.array", "numpy.max", "numpy.min", "numpy.hstack", "numpy.zeros", "numpy.arange", "numpy.arange", "numpy.ones_like", "numpy.array", "numpy.percentile"], ["FeatureTransformer.FeatureTransformer", "numpy.mean", "numpy.array", "numpy.ones_like", "Tree.Tree", "Tree.Tree.construct", "dataset_transform.OptEntry", "Tree.Tree.predict", "Tree.Tree.predict"], ["numpy.ones_like"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/YoonHanho@bc_music/bmcamp.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shenbo18@DigitRecognition/minist_softmax.ipynb": {"API": [], "module": ["keras", "numpy", "tensorflow", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/weninc@manganese/analysis.ipynb": {"API": [["numpy.linspace", "os.path.join", "subprocess.Popen", "os.wait", "os.wait"]], "module": ["matplotlib", "ipywidgets", "scipy", "numpy", "h5py"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pedrosiracusa@financial_stuff/Quandl Exploration.ipynb": {"API": [], "module": ["quandl"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Liaro@python_challenge/PyParagraph/boring_main.ipynb": {"API": [["os.path.join"], ["os.path.join", "os.path.isfile", "sys.exit"], ["pandas.concat", "pandas.concat.nunique", "pandas.concat.unique", "collections.defaultdict", "os.path.join", "pandas.read_csv"], ["pandas.concat", "pandas.concat.nunique", "pandas.concat.unique", "collections.defaultdict", "pandas.concat.unique", "os.path.join", "pandas.read_csv"], "os.path.join"], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cjgargano@UCI-Project-01/NHL_Data_Analysis.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/w38huang@US_Health_Agency/code/HealthDataAnalysis_Feb16.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AdamJChristensen@P177_Homework08/Homework08-master/Untitled.ipynb": {"API": ["numpy.linspace", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "numpy.sum", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.rand", "numpy.exp"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jannab@avengers/avengers.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vansh007@TEAM-MINER/K means/OuputGeneration.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pedrofolim@first-neural-network/Your_first_neural_network.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alxndrad@first-python-notebook/Untitled3.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ssteele92@QuantEcon/pbe_solutions.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mat-esp-2016@python-3-python3sno/python3.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mollyehanson@ML-HW3-Boosting/Boosting.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NPoi@onsha_heisha-webdataml/Chapter2.ipynb": {"API": [], "module": ["matplotlib", "sympy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rnavares@8-Queens-Problem/8-Quens.ipynb": {"API": [["matplotlib.colors.ListedColormap", "matplotlib.image.imread.astype", "numpy.meshgrid", "matplotlib.pyplot.matshow", "matplotlib.pyplot.axis", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.gca", "matplotlib.pyplot.show", "matplotlib.pyplot.gcf.get_dpi", "matplotlib.offsetbox.OffsetImage", "matplotlib.offsetbox.AnnotationBbox", "matplotlib.pyplot.gca.add_artist", "matplotlib.image.imread"]], "module": ["matplotlib", "IPython", "numpy", "sympy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/andriipetruk@techcrunch_dataset/news_analytics.ipynb": {"API": [[], [], [], [], [], [], []], "module": ["matplotlib", "pandas", "scrapy", "seaborn", "pymongo", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chapman-cs510-2017f@cw-06-cw05-tim-evan/critique-logan-julie-tim-evan.ipynb": {"API": [["numpy.linspace", "numpy.linspace", "numpy.meshgrid", "pandas.DataFrame"], ["cplane_np.ArrayComplexPlane", "pandas.DataFrame", "pandas.util.testing.assert_frame_equal", "cplane_np.ArrayComplexPlane", "cplane_np.ArrayComplexPlane.apply", "pandas.DataFrame", "pandas.util.testing.assert_frame_equal", "cplane_np.ArrayComplexPlane", "cplane_np.ArrayComplexPlane.apply", "cplane_np.ArrayComplexPlane.zoom", "pandas.DataFrame", "pandas.util.testing.assert_frame_equal", "cplane_np.ArrayComplexPlane", "cplane_np.ArrayComplexPlane.apply", "cplane_np.ArrayComplexPlane.refresh", "pandas.DataFrame", "pandas.util.testing.assert_frame_equal", "cplane_np.ArrayComplexPlane.getPlane", "cplane_np.ArrayComplexPlane.getPlane", "cplane_np.ArrayComplexPlane.getPlane", "cplane_np.ArrayComplexPlane.getPlane"], []], "module": ["matplotlib", "numpy", "sympy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/russodanielp@sbv/Untitled.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NickleDave@data-mining-biomedical/data-mining-in-biological-engineering.ipynb": {"API": [["Bio.SeqIO.parse", "Bio.pairwise2.align.globalxx", "Bio.pairwise2.format_alignment"], ["requests.get"], ["requests.get", "requests.post"], ["pymongo.MongoClient", "flask.Flask", "flask.Flask.route", "flask.Flask.run", "flask.jsonify"], ["flask.Flask", "flask.Flask.route", "flask.Flask.run"], ["Bio.SeqIO.parse"], ["requests.get", "lxml.html.fromstring", "lxml.html.fromstring.xpath", "requests.post"], ["pymongo.MongoClient", "requests.get", "lxml.html.fromstring", "lxml.html.fromstring.xpath", "requests.post", "Bio.SeqIO.parse"]], "module": ["lxml", "flask", "Bio", "pymongo", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ragbadaskar@keras-deeplearning-notebook/notebooks/3.6-classifying-newswires.ipynb": {"API": [], "module": ["keras", "numpy", "scipy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/guevaracar@Matplotlib-Challenge/raw_data/Pyber testing.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SmylieMan@CGN-3405/old Project Milestone 4.ipynb": {"API": ["scipy.array", "scipy.linalg.lu", "pprint.pprint", "pprint.pprint", "pprint.pprint", "pprint.pprint"], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/victorlongo@first-python-notebook/Week 2 Forum - Question 1.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ylochman@sysan-5/save_JSON.ipynb": {"API": [[], ["ipywidgets.Layout", "ipywidgets.IntSlider", "ipywidgets.interactive_output", "ipywidgets.HBox", "numpy.array", "numpy.array.argmin", "numpy.array", "numpy.array.argmin", "ipywidgets.interactive_output", "ipywidgets.HBox", "ipywidgets.Layout", "ipywidgets.Button", "ipywidgets.Button.on_click", "ipywidgets.HBox", "ipywidgets.VBox", "ipywidgets.VBox", "ipywidgets.VBox", "IPython.display.display", "ipywidgets.Label", "ipywidgets.HBox", "ipywidgets.HBox", "numpy.array.argmax", "numpy.array.append", "numpy.array.argmax", "ipywidgets.Label", "ipywidgets.VBox", "ipywidgets.VBox", "json.load", "ipywidgets.VBox", "ipywidgets.VBox", "ipywidgets.VBox", "ipywidgets.VBox", "ipywidgets.VBox", "ipywidgets.VBox", "ipywidgets.Label", "ipywidgets.Label", "ipywidgets.Label", "ipywidgets.Label", "ipywidgets.Label", "ipywidgets.Label", "numpy.random.rand"], ["ipywidgets.Layout", "ipywidgets.Layout", "ipywidgets.Layout", "ipywidgets.Layout", "ipywidgets.Layout", "ipywidgets.Layout", "ipywidgets.Layout", "ipywidgets.HTML", "ipywidgets.BoundedIntText", "ipywidgets.BoundedIntText", "ipywidgets.HBox", "ipywidgets.FloatRangeSlider", "ipywidgets.FloatRangeSlider", "ipywidgets.HBox", "ipywidgets.Dropdown", "ipywidgets.Dropdown", "ipywidgets.VBox", "ipywidgets.Checkbox", "ipywidgets.Tab", "ipywidgets.Tab.set_title", "ipywidgets.Label"]], "module": ["IPython", "numpy", "ipywidgets", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/iamsiter@Digit-recognition-on-MNIST-data-set/mnist-nn.ipynb": {"API": [], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/k53sc@DataScience/UnderStanding Titanic Data.ipynb": {"API": [], "module": ["matplotlib", "pandas", "statsmodels", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/GKjohns@Bayesian-Statistics-5224/hw_1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ashupalia@Information-Retrieval/Assignment 2/index.ipynb": {"API": [[], ["numpy.matrix", "numpy.around", "numpy.array", "numpy.array", "numpy.array", "numpy.nditer", "os.path.join", "numpy.matrix", "numpy.array", "numpy.array.nonzero", "numpy.matrix", "numpy.sum", "numpy.around.copy", "numpy.dot", "numpy.around", "numpy.around.copy", "numpy.array.sum", "numpy.abs"], [], "time.time", "os.listdir", "collections.OrderedDict", "time.time", "time.time", "time.time", "time.time", "time.time", "time.time", "collections.OrderedDict", "time.time", "time.time", "collections.OrderedDict", "time.time", "time.time", "collections.OrderedDict", "time.time", "math.log10", "math.log10", "operator.itemgetter", "math.log10", "operator.itemgetter", "math.log10", "operator.itemgetter", "math.sqrt", "math.sqrt", "math.sqrt", "math.sqrt", "operator.itemgetter", "math.sqrt", "math.sqrt", "math.log10"], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/LynetteJoosten@informationvisualization/cleandata.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vfedorova@fluttype-task/task.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv.head", "pandas.read_csv"], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rdlareau@Thinkful/CapstoneSolar.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mithragoesdark@Kaggle-Data-Analysis/Crime_NYC.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/brion101@brion101.github.io/CA_01.ipynb": {"API": [[], [], [], [], [], [], [], [], ["pandas.read_csv", "pandas.read_csv.head", "pandas.read_csv.head", "pandas.DataFrame", "pandas.DataFrame", "pandas.merge", "pandas.DataFrame.set_index", "pandas.merge", "pandas.merge", "pandas.merge", "pandas.DataFrame", "pandas.DataFrame", "pandas.concat", "pandas.read_csv.groupby", "pandas.read_csv.groupby", "pandas.read_csv.groupby", "pandas.read_csv.groupby", "numpy.random.randn", "numpy.random.randn", "pandas.read_csv.groupby", "pandas.read_csv.assign", "pandas.read_csv.sort_values"]], "module": ["matplotlib", "numpy", "networkx", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/srirambaskaran@python-notebooks/hmm/hmm.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/haoyu987@python_for_data_analysis/ch02/ch02.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mjmdavis@mjmdavis.github.io/_posts/where_do_we_meet.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "requests", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nazoking@notebook/test1.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/stijnvanhoey@open_data_showcases/gent_cijfers/wijkmigratie_in_beeld.ipynb": {"API": [["matplotlib.font_manager.FontProperties", "matplotlib.font_manager.FontProperties.set_size", "numpy.array", "numpy.array", "matplotlib.pyplot.figure.get_figheight", "matplotlib.pyplot.figure.get_figwidth", "matplotlib.pyplot.figure.get_dpi", "matplotlib.pyplot.figure.suptitle", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.figure.subplots_adjust", "matplotlib.pyplot.subplots", "matplotlib.pyplot.figure", "matplotlib.gridspec.GridSpec", "matplotlib.pyplot.figure.subplots_adjust", "matplotlib.pyplot.figure.savefig", "numpy.array.append", "numpy.array.append", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot", "matplotlib.font_manager.FontProperties.get_size", "numpy.diff", "matplotlib.pyplot.setp", "pandas.cut", "pandas.cut", "pandas.cut", "pandas.cut", "pandas.cut", "pandas.cut"], ["datetime.datetime", "datetime.datetime", "requests.get", "pandas.Series", "matplotlib.pyplot.subplots", "numpy.zeros", "matplotlib.dates.DayLocator", "matplotlib.dates.DateFormatter", "calendar.timegm", "calendar.timegm", "datetime.datetime.timetuple", "datetime.datetime.timetuple", "datetime.datetime.fromtimestamp", "datetime.datetime.fromtimestamp"]], "module": ["matplotlib", "pandas", "numpy", "seaborn", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hugogr99@CIENCIA-DOS-DADOS/APS8 - Hugo Gon\u00e7alves.ipynb": {"API": [], "module": ["matplotlib", "pandas", "scipy", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pquinter@aws103/AWS_tutorial.ipynb": {"API": [["IPython.lib.passwd"], ["email.mime.multipart.MIMEMultipart", "email.mime.multipart.MIMEMultipart.attach", "smtplib.SMTP", "smtplib.SMTP.starttls", "smtplib.SMTP.login", "email.mime.multipart.MIMEMultipart.as_string", "smtplib.SMTP.sendmail", "smtplib.SMTP.quit", "email.mime.text.MIMEText"]], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/WindChimeRan@learn-machine-learning/hmm_viterbi.ipynb": {"API": [["numpy.column_stack", "numpy.column_stack", "numpy.mean", "numpy.mean", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.arange", "numpy.random.random", "numpy.sin", "numpy.linalg.det", "numpy.mean", "numpy.ones", "numpy.ones", "numpy.mean", "numpy.mean", "numpy.linalg.inv"]], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/imamol555@Data-Analysis-/Pandas+Primer.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/themiyan@zfire_survey/catalogue_analysis.ipynb": {"API": [[]], "module": ["matplotlib", "pandas", "numpy", "astropy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sohwkjames@exploring-singapore-housing/sg-housing-data.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ishank26@Digital-Signal-Processing/Multirate_sp.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/giangduong36@DataScience-Personal/Coursera_DataScience_Intro/Assignment2.ipynb": {"API": [["numpy.array", "numpy.array", "numpy.ones", "numpy.array", "numpy.array", "numpy.array", "numpy.array.copy", "numpy.random.randint", "numpy.arange", "numpy.linspace", "numpy.array.reshape", "numpy.array.resize", "numpy.ones", "numpy.eye", "numpy.diag", "numpy.array", "numpy.repeat", "numpy.vstack", "numpy.hstack", "numpy.array.dot", "numpy.array.sum", "numpy.array.max", "numpy.array.mean", "numpy.array.std", "numpy.array.argmax", "numpy.array"], ["datetime.datetime.fromtimestamp", "csv.DictReader.keys", "time.time", "time.time", "csv.DictReader"], ["pandas.Series", "pandas.Series", "numpy.random.randint.iteritems", "pandas.Series", "pandas.Series", "pandas.Series", "pandas.Series", "pandas.DataFrame", "pandas.read_csv", "pandas.read_csv", "pandas.Series", "pandas.Series", "pandas.Series", "pandas.Series", "pandas.Series", "numpy.random.randint", "numpy.random.randint.head", "numpy.random.randint.head", "pandas.Series.append"], []], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Rapt007@Analysis_NBA_dataset/data1/NBA.ipynb": {"API": [["numpy.loadtxt", "random.sample", "numpy.zeros", "numpy.zeros", "numpy.empty_like", "numpy.where", "numpy.mean", "numpy.sqrt", "numpy.array_equal", "numpy.square"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/austingould1@SafestState/script.ipynb": {"API": [["sqlalchemy.create_engine", "sqlalchemy.ext.automap.automap_base", "sqlalchemy.ext.automap.automap_base.prepare", "sqlalchemy.orm.Session", "flask.Flask", "pandas.read_csv", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.render_template", "pandas.DataFrame", "pandas.DataFrame.sort_values", "pandas.DataFrame.drop", "flask.jsonify", "pandas.DataFrame", "pandas.DataFrame.sort_values", "pandas.DataFrame.drop", "pandas.DataFrame.apply", "flask.jsonify", "customfunctions.addGeoJson", "flask.jsonify", "pandas.DataFrame", "pandas.DataFrame.sort_values", "pandas.DataFrame.drop", "flask.jsonify", "flask.render_template", "flask.jsonify", "flask.render_template", "sqlalchemy.orm.Session.query", "pandas.DataFrame", "pandas.DataFrame.append", "flask.jsonify", "flask.Flask.run", "pandas.DataFrame.to_dict", "pandas.DataFrame.to_dict", "pandas.read_csv.to_dict", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "pandas.DataFrame.groupby", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "operator.itemgetter", "sqlalchemy.sql.func.sum"], ["json.load"]], "module": ["sqlalchemy", "numpy", "flask", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chilperic@Computational-Statistic/effect_size.ipynb": {"API": [["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth"], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.stats.hypergeom.pmf", "numpy.linspace", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "io.open", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.special.gamma", "math.exp", "math.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "scipy.special.betainc", "scipy.special.betaincinv", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.normal", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "re.search", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "math.exp", "math.erf", "numpy.asarray", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "thinkplot.Plot", "math.exp", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.vlines", "matplotlib.pyplot.hlines", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.gca", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.gcf", "warnings.warn", "numpy.array", "numpy.array", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.get_xticklabels", "matplotlib.pyplot.setp", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.get_yticklabels", "matplotlib.pyplot.setp", "warnings.warn", "warnings.warn", "math.log", "math.log", "numpy.diff", "numpy.diff"], ["numpy.linspace", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.annotate", "thinkplot.Plot", "thinkplot.Show", "thinkstats2.EvalNormalPdf"], ["thinkplot.Save", "nsfg2.MakeFrames", "thinkstats2.RandomSeed", "first.MakeFrames", "thinkstats2.Hist", "numpy.hstack", "numpy.random.shuffle", "numpy.random.permutation", "numpy.random.choice", "thinkstats2.Hist", "thinkstats2.Hist.Freqs", "thinkstats2.Hist", "numpy.array", "numpy.hstack", "thinkstats2.Pmf", "numpy.array", "numpy.random.shuffle", "thinkstats2.Resample", "thinkstats2.Resample", "random.choice", "thinkstats2.Corr", "thinkstats2.Hist.Freqs", "thinkstats2.Pmf.Probs", "numpy.ones", "numpy.ones"], ["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth", "collections.defaultdict"], ["nsfg.ReadFemPreg", "thinkstats2.CohenEffectSize", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist.Smallest", "thinkstats2.Hist.Largest", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkstats2.Hist", "thinkplot.PrePlot", "thinkplot.Hist", "thinkplot.Hist", "thinkplot.Save", "numpy.floor"]], "module": ["matplotlib", "ipywidgets", "scipy", "pandas", "numpy", "seaborn", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gpjacob@Visualizing-CNN-filters/Filter visualization.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/PanaceaGenomics@DAT/Numpy-and-Pandas.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shlok6368@Python-for-Data-Analysis-Numpy/NumPy Arrays.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/htts001@Learners-data-science/visualisation.ipynb": {"API": ["matplotlib.pyplot.get_backend", "pandas.read_csv", "pandas.to_datetime", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.fill_between", "pandas.merge", "pandas.merge", "matplotlib.pyplot.figure", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend"], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lampsonnguyen@tfExamples/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DrMichaelWang@Data-Project-Tic-Tac-Toe-Game/Tic Tac Toe Game.ipynb": {"API": [["IPython.display.clear_output", "random.randint"]], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chapman-phys220-2018s@cw-08-phys220/cw08-examples.ipynb": {"API": [["numpy.linspace", "matplotlib.pyplot.subplots", "matplotlib.animation.FuncAnimation", "matplotlib.pyplot.close", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.animation.FuncAnimation.save", "matplotlib.rc", "IPython.display.HTML", "matplotlib.animation.FuncAnimation.to_html5_video"]], "module": ["matplotlib", "IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rescu@brainstorm/chapter0.ipynb": {"API": [[]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/samiarja@Recommender-System-for-Movie-dataset/Recommender system.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kitstonier@puzzles/puzzles.ipynb": {"API": [[]], "module": ["matplotlib", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NlGG@Home/seminar/Chap05.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NgoManhJP@db-python-advanced/Excel_to_csv_converter.ipynb": {"API": [], "module": ["xlrd", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ktdevmasters@uncompletedprojects/Loan Prediction, First Two Priorities of Cleaning Data.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sushil-bharati@Udacity-Intro-To-Self-Driving-Cars/2DHistogramFilter/writeup.ipynb": {"API": [["helpers.blur"], [], [], ["math.pow", "numpy.random.normal", "math.pow", "math.pow"], [], ["matrix.Matrix", "matrix.Matrix", "matrix.Matrix", "matrix.Matrix", "matrix.Matrix", "matrix.Matrix", "matrix.Matrix", "matrix.Matrix", "matrix.Matrix", "matrix.Matrix", "matrix.Matrix.inverse", "matrix.Matrix.inverse", "matrix.Matrix.T", "matrix.Matrix.T", "matrix.zeroes", "matrix.identity.trace", "matrix.Matrix.T", "matrix.identity", "matrix.identity"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Jellyq@PC/Tensorflow/Software install.ipynb": {"API": [[], []], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/enakai00@jupyter_ml4se/06-k_means.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AadiBhumihar@Joebgar-assignment/Untitled.ipynb": {"API": [["pandas.read_excel", "pandas.read_excel.apply", "pandas.read_excel.apply", "pandas.read_excel.apply", "pandas.read_excel.drop_duplicates", "pandas.read_excel.drop_duplicates", "pandas.read_excel.drop", "pandas.ExcelWriter", "pandas.read_excel.to_excel", "pandas.ExcelWriter.save", "re.compile.findall", "re.split", "pandas.isnull", "re.compile", "pandas.isnull", "pandas.isnull"]], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AhmedMohsen123@Neural-Network/Ahmed Normalization fn.ipynb": {"API": [["numpy.linalg.norm", "numpy.arange"], ["numpy.sum"], ["numpy.sum", "numpy.absolute"], ["numpy.exp"], ["numpy.array", "numpy.array.reshape"], "numpy.linalg.norm", "numpy.arange"], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chiragnagpal@noisy-neural-training/MNIST.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/choldgraf@live_sync/mydemo.ipynb": {"API": ["matplotlib.pyplot.scatter", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lijiaqigreat@tf-everything/expert_mnist.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ronshnapp@Graphinator/Graphinator.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vkorotkikh@img-check-subset/imgcomp_devtest.ipynb": {"API": [["logging.basicConfig", "logging.getLogger", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.Formatter", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "scipy.ndimage.imread", "scipy.ndimage.imread", "numpy.flipud", "logging.getLogger.info", "numpy.set_printoptions", "numpy.asarray", "numpy.asarray", "numpy.std", "numpy.amax", "numpy.unravel_index", "numpy.std", "logging.getLogger.debug", "numpy.set_printoptions", "scipy.ndimage.imread", "scipy.ndimage.imread", "logging.getLogger.debug", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.unravel_index", "numpy.unravel_index", "numpy.unravel_index", "numpy.sum", "scipy.fftpack.ifft2", "numpy.amax", "scipy.fftpack.ifft2", "numpy.amax", "numpy.average", "numpy.average", "numpy.std", "scipy.average", "scipy.ndimage.imread.std", "numpy.flipud.std", "logging.getLogger.debug", "logging.getLogger.debug", "numpy.argmax", "numpy.flipud", "numpy.flipud", "numpy.argmin", "numpy.argmin", "numpy.argmin", "numpy.min", "numpy.min", "numpy.min", "numpy.argmin", "scipy.fftpack.fft2", "scipy.fftpack.fft2", "numpy.average", "numpy.std", "scipy.inner", "scipy.ndimage.imread.mean", "numpy.flipud.mean", "scipy.fftpack.fft2", "scipy.fftpack.fft2", "numpy.asarray.mean", "numpy.std", "numpy.asarray.mean", "numpy.std", "numpy.partition", "numpy.unravel_index", "numpy.median", "numpy.median", "scipy.fftpack.ifft2", "numpy.average", "numpy.argmax", "numpy.median", "numpy.median", "scipy.fftpack.fft2", "scipy.fftpack.fft2", "scipy.fftpack.fft2", "inspect.stack", "numpy.where", "numpy.median", "numpy.median", "numpy.amax", "scipy.fftpack.fft2", "numpy.where", "numpy.median", "numpy.median", "scipy.fftpack.fft2", "numpy.amax", "scipy.fftpack.fft2"], [], ["logging.basicConfig", "logging.getLogger", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.Formatter", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "sys.exit", "scipy.ndimage.imread", "scipy.ndimage.imread", "os.path.realpath", "os.path.dirname", "os.path.isdir", "os.path.realpath", "os.path.dirname", "os.path.isdir", "os.path.isfile", "sys.exit", "itertools.combinations", "scipy.ndimage.imread", "os.path.basename", "os.path.basename", "logging.getLogger.info", "logging.getLogger.info", "logging.getLogger.info", "sys.exit", "os.path.basename", "os.path.basename", "logging.getLogger.info", "logging.getLogger.info", "logging.getLogger.info", "fx_img_process.fft2_crosscorr", "fx_img_process.fft2_crosscorr", "fx_img_process.fft2_crosscorr", "sys.exit", "fx_img_process.fft2_crosscorr", "sys.exit"], [], "scipy.ndimage.imread", "scipy.fftpack.fft2", "scipy.fftpack.fft2", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "scipy.fftpack.ifft2", "numpy.amax", "itertools.combinations", "scipy.average", "numpy.abs", "scipy.fftpack.fft2", "matplotlib.colors.LogNorm", "numpy.argmax", "numpy.amax", "scipy.fftpack.ifft2", "scipy.fftpack.fft2", "scipy.fftpack.fft2", "scipy.fftpack.fft2", "numpy.amax", "scipy.fftpack.fft2", "numpy.argmax", "scipy.fftpack.fft2", "numpy.amax", "scipy.fftpack.fft2"], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/TianweiXing@TB/xtw_CNN.ipynb": {"API": [["keras.datasets.mnist.load_data", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "tensorflow.reset_default_graph", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.bias_add", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.GPUOptions", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.max_pool.get_shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.cast", "tensorflow.Session", "numpy.arange", "numpy.arange", "tensorflow.Graph", "tensorflow.truncated_normal_initializer", "tensorflow.constant_initializer", "tensorflow.truncated_normal_initializer", "tensorflow.constant_initializer", "tensorflow.equal", "tensorflow.global_variables_initializer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.ConfigProto", "numpy.random.choice"], [], ["numpy.argmax", "numpy.argmax", "numpy.argmax", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.placeholder", "model_utils.fully_connected", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.gradients", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.placeholder", "model_utils.fully_connected", "tensorflow.nn.relu", "model_utils.fully_connected", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.gradients", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.gradients", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.train.GradientDescentOptimizer", "tensorflow.placeholder", "tensorflow.name_scope", "model_utils.conv_layer", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.name_scope", "model_utils.conv_layer", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.name_scope", "model_utils.fully_connected", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.train.GradientDescentOptimizer"]], "module": ["matplotlib", "numpy", "keras", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/saramazi@tensorflow/010_linear_regression.ipynb": {"API": ["matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.global_variables_initializer", "numpy.random.normal", "tensorflow.random_uniform", "tensorflow.zeros", "tensorflow.square", "tensorflow.Session", "numpy.random.normal"], "module": ["matplotlib", "pandas", "quandl", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Raymond-Luong@Pyber/Pyber.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wonderui@ProbStat/10_Inference/linregress_ttest.ipynb": {"API": [], "module": ["numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hinafirdaus@Naive-Bayes/naive_bayes_2.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv.get", "numpy.array", "pandas.read_csv.get", "numpy.array", "pandas.read_csv.get", "numpy.array", "pandas.read_csv.tail"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Feesterra@epam_course/task10_3.ipynb": {"API": [["functools.wraps"], ["sys.exit", "re.search", "re.search"], [], [], [], [], [], ["random.randint", "random.randint"], ["itertools.islice"], [], ["datetime.datetime.now", "time.time", "time.time"], [], [], [], [], [], [], []], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jhamrick@quals/notebooks/Guez2013.ipynb": {"API": [["urllib.parse.quote"], ["datetime.datetime.now", "datetime.datetime.now.strftime", "datetime.datetime.now", "os.path.split", "os.path.join", "os.rename", "re.match", "os.path.splitext", "re.match.groupdict"]], "module": ["nbconvert", "matplotlib", "ipywidgets", "scipy", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NicolasSchreuder@AdversarialBandit/StochasticBandit.ipynb": {"API": [["numpy.zeros", "numpy.zeros", "numpy.ones", "numpy.zeros", "numpy.zeros", "numpy.exp", "numpy.sum", "numpy.random.choice", "numpy.zeros", "numpy.exp", "numpy.sum", "numpy.random.choice", "numpy.zeros", "numpy.exp", "numpy.random.choice", "numpy.exp", "numpy.exp", "numpy.sum", "numpy.exp", "numpy.max", "numpy.max", "numpy.min"], ["numpy.zeros", "numpy.zeros", "numpy.argmax", "numpy.random.randint", "numpy.sqrt", "numpy.log"], ["numpy.random.binomial", "numpy.random.binomial", "numpy.random.binomial"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/avantichande@Cryptocurrency_Project/Project/CryptoCurrency_Analysis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/becomedragon@project4/dlnd_language_translation.ipynb": {"API": [["os.path.join", "pickle.dump", "pickle.load", "copy.copy", "pickle.dump", "pickle.load", "copy.copy.items", "numpy.array", "numpy.array"], ["helper.create_lookup_tables", "helper.create_lookup_tables", "numpy.array_equal", "tensorflow.Graph.as_default", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.LSTMStateTuple", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session", "tensorflow.variable_scope", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.LSTMStateTuple", "tensorflow.variable_scope", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.LSTMStateTuple", "itertools.chain.from_iterable", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.contrib.layers.fully_connected", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph", "tensorflow.contrib.layers.fully_connected", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gaussic@pytorch-poem-generator/Untitled2.ipynb": {"API": [["os.path.exists", "os.path.exists"], ["torch.nn.Dropout", "torch.nn.Embedding", "torch.nn.Linear", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable"], ["re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "json.loads", "os.listdir", "os.path.join"]], "module": ["torch", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jaspindersingh83@Reporting_infra_MongoDB/Reporting_infra_Pymongo_NoSQl.ipynb": {"API": [], "module": ["pymongo", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/almojuela@Canadian-Tire/Final Assignment.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Karthik-Nagaraja@Excercise-Numpy/Excercise-Numpy.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mvanapp@SciPy2017_SimpleComputationalStats_tutorial/effect_size.ipynb": {"API": [["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth"], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.stats.hypergeom.pmf", "numpy.linspace", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "io.open", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.special.gamma", "math.exp", "math.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "scipy.special.betainc", "scipy.special.betaincinv", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.normal", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "re.search", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "math.exp", "math.erf", "numpy.asarray", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "thinkplot.Plot", "math.exp", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.vlines", "matplotlib.pyplot.hlines", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.gca", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.gcf", "warnings.warn", "numpy.array", "numpy.array", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.get_xticklabels", "matplotlib.pyplot.setp", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.get_yticklabels", "matplotlib.pyplot.setp", "warnings.warn", "warnings.warn", "math.log", "math.log", "numpy.diff", "numpy.diff"], ["numpy.linspace", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.annotate", "thinkplot.Plot", "thinkplot.Show", "thinkstats2.EvalNormalPdf"], ["thinkplot.Save", "nsfg2.MakeFrames", "thinkstats2.RandomSeed", "first.MakeFrames", "thinkstats2.Hist", "numpy.hstack", "numpy.random.shuffle", "numpy.random.permutation", "numpy.random.choice", "thinkstats2.Hist", "thinkstats2.Hist.Freqs", "thinkstats2.Hist", "numpy.array", "numpy.hstack", "thinkstats2.Pmf", "numpy.array", "numpy.random.shuffle", "thinkstats2.Resample", "thinkstats2.Resample", "random.choice", "thinkstats2.Corr", "thinkstats2.Hist.Freqs", "thinkstats2.Pmf.Probs", "numpy.ones", "numpy.ones"], ["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth", "collections.defaultdict"], ["nsfg.ReadFemPreg", "thinkstats2.CohenEffectSize", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist.Smallest", "thinkstats2.Hist.Largest", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkstats2.Hist", "thinkplot.PrePlot", "thinkplot.Hist", "thinkplot.Hist", "thinkplot.Save", "numpy.floor"]], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Kornel@hadamard-plot/Hadamard.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ctinaa@COGS108-Final-Project/FinalProject.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Zhou42@BitCoinDataMining/BitcoinNetworkAnalysis.ipynb": {"API": [], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Morqos@IntroAI/GraphSearch.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/xiaojunzhao@NBA-Data-Project/NBA_Player_Tracker.ipynb": {"API": [], "module": ["matplotlib", "pandas", "scipy", "seaborn", "numpy", "requests", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mkourjan@GalaxyProject/CompletedSeniorProject.ipynb": {"API": [["numpy.sqrt", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.sqrt", "numpy.array", "numpy.arange", "matplotlib.pyplot.figure", "matplotlib.pyplot.grid", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.grid", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.array.append", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "scipy.integrate.odeint", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.array", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt"], ["numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.sqrt", "numpy.array", "numpy.arange", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "numpy.sqrt", "numpy.sqrt", "numpy.array.append", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "scipy.integrate.odeint", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.array", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt"], "IPython.html.widgets.interact", "IPython.html.widgets.fixed", "IPython.html.widgets.fixed", "IPython.html.widgets.fixed", "IPython.html.widgets.fixed", "numpy.load"], "module": ["matplotlib", "IPython", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/the-vampiire@deep-learning-notes/NumPy Notes.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sVujke@radionica-start/Untitled.ipynb": {"API": [[], [], [], [], [], [], [], [], [], [], ["requests.get"]], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/m3h0w@HashCode2018/hashcode_agata.ipynb": {"API": [["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.argwhere", "numpy.min", "numpy.random.randint"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dianag1@DS_Rep/Untitled.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Avyukth@Project-3-TV-script-generation/Project-3-TV-script-generation/dlnd_tv_script_generation.ipynb": {"API": [["os.path.join", "pickle.dump", "pickle.load", "pickle.dump", "pickle.load"], ["tensorflow.Graph", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "numpy.array", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cgturhan@assignments/Assignment2.ipynb": {"API": [["zipfile.ZipFile", "zipfile.ZipFile.extractall", "zipfile.ZipFile.close", "numpy.load", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.initialize_all_variables", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.unique", "numpy.eye", "numpy.eye", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "numpy.random.choice", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.random_normal.get_shape"], [], [], ["numpy.maximum", "numpy.exp", "numpy.sum.copy", "numpy.exp", "numpy.dot", "numpy.sum", "numpy.sum", "numpy.argmax", "numpy.max", "numpy.sum", "numpy.max", "numpy.log", "numpy.arange", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.arange", "numpy.ones", "numpy.arange"], ["numpy.empty", "numpy.empty.fill", "numpy.sum", "numpy.zeros", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "numpy.zeros", "numpy.linspace", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "numpy.zeros", "numpy.zeros", "numpy.linspace", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "numpy.square", "numpy.dot", "numpy.exp", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and"], ["zipfile.ZipFile", "zipfile.ZipFile.extractall", "zipfile.ZipFile.close", "numpy.load", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.initialize_all_variables", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.unique", "numpy.eye", "numpy.eye", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "numpy.random.choice", "tensorflow.random_normal.items", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.device", "matplotlib.pyplot.figure", "matplotlib.pyplot.title", "matplotlib.pyplot.savefig", "tensorflow.ConfigProto", "matplotlib.pyplot.subplot", "matplotlib.pyplot.cla", "matplotlib.pyplot.imshow", "matplotlib.pyplot.gca", "tensorflow.random_normal.get_shape"], ["zipfile.ZipFile", "zipfile.ZipFile.extractall", "zipfile.ZipFile.close", "numpy.load", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.initialize_all_variables", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.unique", "numpy.eye", "numpy.eye", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "numpy.random.choice", "tensorflow.random_normal.items", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "matplotlib.pyplot.figure", "matplotlib.pyplot.title", "matplotlib.pyplot.savefig", "tensorflow.ConfigProto", "matplotlib.pyplot.subplot", "matplotlib.pyplot.cla", "matplotlib.pyplot.imshow", "matplotlib.pyplot.gca", "tensorflow.random_normal.get_shape"], ["numpy.amin", "numpy.amax", "numpy.meshgrid", "matplotlib.pyplot.contourf", "matplotlib.pyplot.scatter", "numpy.linspace", "numpy.linspace", "numpy.abs"], "zipfile.ZipFile", "zipfile.ZipFile.extractall", "zipfile.ZipFile.close", "numpy.load", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.initialize_all_variables", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "zipfile.ZipFile", "zipfile.ZipFile.extractall", "zipfile.ZipFile.close", "numpy.load", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.initialize_all_variables", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.maximum", "numpy.exp", "numpy.sum.copy", "numpy.exp", "numpy.unique", "numpy.eye", "numpy.eye", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "numpy.random.choice", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "numpy.unique", "numpy.eye", "numpy.eye", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "numpy.random.choice", "tensorflow.random_normal.items", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "numpy.dot", "numpy.sum", "numpy.sum", "numpy.argmax", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "numpy.max", "numpy.sum", "numpy.max", "matplotlib.pyplot.figure", "matplotlib.pyplot.title", "matplotlib.pyplot.savefig", "tensorflow.ConfigProto", "numpy.log", "numpy.arange", "numpy.dot", "numpy.dot", "numpy.dot", "matplotlib.pyplot.subplot", "matplotlib.pyplot.cla", "matplotlib.pyplot.imshow", "matplotlib.pyplot.gca", "numpy.arange", "numpy.ones", "tensorflow.random_normal.get_shape", "tensorflow.random_normal.get_shape", "numpy.arange"], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aariveros@Features/Ch_8_Summary/Ch_8.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/troylf@ADRC-Equation-Calculator/ADRC equations.ipynb": {"API": [], "module": ["IPython", "sympy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gganssle@organize-yaself/plot_testing.ipynb": {"API": [["numpy.zeros"], ["numpy.zeros", "som3D.SOM", "som3D.SOM.train", "som3D.SOM.get_centroids"], ["tensorflow.Graph", "numpy.zeros", "tensorflow.Variable", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.argmin", "tensorflow.pad", "tensorflow.reshape", "tensorflow.sub", "tensorflow.mul", "tensorflow.mul", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.mul", "tensorflow.pack", "tensorflow.mul", "tensorflow.add", "tensorflow.assign", "tensorflow.Session", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "numpy.array", "tensorflow.sqrt", "tensorflow.reshape", "numpy.array", "tensorflow.slice", "tensorflow.div", "tensorflow.pow", "tensorflow.neg", "tensorflow.sub", "tensorflow.reduce_sum", "tensorflow.constant", "tensorflow.sub", "tensorflow.div", "tensorflow.tile", "tensorflow.pack", "tensorflow.pow", "numpy.array", "tensorflow.pack", "tensorflow.cast", "tensorflow.pow", "tensorflow.slice", "numpy.array", "numpy.linalg.norm", "tensorflow.sub", "numpy.array", "numpy.array", "tensorflow.pack"], ["requests.get", "pandas.DataFrame"], ["rpc.RPC", "mod_func.modeler", "rpc.RPC.query", "mod_func.modeler.doit", "matplotlib.pyplot.plot", "matplotlib.pyplot.show"], ["numpy.zeros", "numpy.sum", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.zeros", "numpy.zeros", "numpy.convolve", "math.floor", "numpy.exp", "math.floor", "math.floor", "math.sin", "math.tan", "math.sin"], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.sum", "numpy.exp", "numpy.convolve", "math.floor", "math.floor", "math.sin", "math.tan", "math.sin", "math.floor"], ["rpc.RPC", "mod_func.modeler", "rpc.RPC.query", "rpc.RPC.query", "rpc.RPC.query", "mod_func.modeler.doit"], ["numpy.zeros", "numpy.zeros", "tensorflow.constant", "tensorflow.argmin", "tensorflow.constant", "tensorflow.pad", "tensorflow.reshape", "tensorflow.Session", "tensorflow.sqrt", "numpy.array", "tensorflow.reshape", "numpy.array", "tensorflow.slice", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.reduce_sum", "tensorflow.constant", "tensorflow.pow", "numpy.array", "tensorflow.sub", "tensorflow.pack", "numpy.array"], ["numpy.array", "matplotlib.pyplot.imshow", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.text", "tensorflow.Graph", "tensorflow.Variable", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.argmin", "tensorflow.pad", "tensorflow.reshape", "tensorflow.sub", "tensorflow.mul", "tensorflow.mul", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.mul", "tensorflow.pack", "tensorflow.mul", "tensorflow.add", "tensorflow.assign", "tensorflow.Session", "tensorflow.initialize_all_variables", "tensorflow.random_normal", "numpy.array", "tensorflow.sqrt", "tensorflow.reshape", "numpy.array", "tensorflow.slice", "tensorflow.div", "tensorflow.pow", "tensorflow.neg", "tensorflow.sub", "tensorflow.reduce_sum", "tensorflow.constant", "tensorflow.sub", "tensorflow.div", "tensorflow.tile", "tensorflow.pack", "numpy.array", "tensorflow.pow", "numpy.array", "tensorflow.pack", "tensorflow.cast", "tensorflow.pow", "tensorflow.slice", "numpy.linalg.norm", "tensorflow.sub", "numpy.array", "numpy.array", "tensorflow.pack"]], "module": ["matplotlib", "pandas", "numpy", "tensorflow", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ftenoz@analyzing-movie-reviews/Basics.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kapilgolimar@Animal_Recognition/Animal_recognition.ipynb": {"API": ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.models.Sequential.fit_generator", "keras.layers.Convolution2D", "keras.layers.MaxPooling2D", "keras.layers.Convolution2D", "keras.layers.MaxPooling2D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Dense"], "module": ["keras"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AlliedToasters@Exoplanets/Exoplanets.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dianvanrooi@Assignments-AEA/World+development (7).ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/willengel88@Pandas-homework/PyCitySchools/PyCitySchoolsAnalysis.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/murrayLuke@dithering/Dithering.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MNE-2017-2@MNE/teste-04-a.ipynb": {"API": ["numpy.arange", "numpy.sum", "numpy.sqrt"], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Carterhuang@kaggle_digit/kaggle_digit_recognizer.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Vishu26@Markov-Chain-and-MCMC/Snakes and Ladder.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ksnt@Sorting_Algorithms_C_and_Python/Compare the execusion time to make list.ipynb": {"API": [[], [], [], ["timeit.Timer", "timeit.Timer.timeit", "timeit.Timer", "timeit.Timer.timeit", "timeit.Timer", "timeit.Timer.timeit", "timeit.Timer", "timeit.Timer.timeit", "matplotlib.pyplot.bar", "matplotlib.pyplot.xticks", "matplotlib.pyplot.show"], [], ["math.sqrt"], [], [], [], [], [], [], [], [], [], [], [], ["timeit.Timer", "timeit.Timer", "timeit.Timer", "timeit.Timer", "timeit.Timer.timeit", "timeit.Timer.timeit", "timeit.Timer.timeit", "timeit.Timer.timeit"], [], []], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yijingli676@stat679work/hw2/script.ipynb": {"API": [["datetime.datetime.strptime", "re.search", "re.search", "re.search", "datetime.datetime.strptime", "re.search.group", "re.search.group", "re.search.group", "re.search.group", "datetime.timedelta"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/WDAva@clustering/k-means.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/KRoeling@assignments/final assignment Python.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/njberejan@consumer-complaints/consumer-complaints.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/RandallSPQR@sliderule_dsi_json_exercise/data_wrangling_json/sliderule_dsi_json_exercise.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ru57y34nn@data_analysis_with_pandas/DataFrames_III.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cobraforpython@ipythonCodes/movie-checkpoint.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aamiel16@udacity-dand/Data Analysis Process/develop/2015-09-08-as-analysis-process-py.ipynb": {"API": [[], [], [], [], [], [], [], []], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/KruchDmitriy@dsp/1/mix_with_noise.ipynb": {"API": [], "module": ["matplotlib", "IPython", "librosa", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/LeoMorais@DeepLearning/Listas de Exercicios/Lista 1 - Exercicio 19.ipynb": {"API": [], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wangbeiqi199159@data-512-final-project/Risk Factors for Suicide.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Kagami@video-tools/fps.ipynb": {"API": [["os.getenv", "locale.getpreferredencoding", "subprocess.Popen.communicate", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "matplotlib.pyplot.subplots", "subprocess.Popen", "os.path.basename", "tempfile.mkstemp", "os.close", "os.path.basename", "matplotlib.ticker.FuncFormatter", "argparse.ArgumentParser.error", "os.path.splitext", "shlex.split", "shlex.split", "shlex.split", "os.path.splitext", "sys.exit", "sys.exit", "os.path.basename", "re.search", "math.log", "math.log", "os.remove", "os.path.basename", "argparse.ArgumentParser.error", "traceback.format_exc", "traceback.format_exc", "traceback.format_exc"]], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/atooke@nfl_arrests_analysis/Untitled.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dhdrew@gads-dhd/pyt/Untitled.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/etsafe11@nlp_nltk/NLP w Pandas and NLTK.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ChenDuBUAA@test/test.ipynb": {"API": [["numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.ones", "matplotlib.pyplot.figure", "numpy.array", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "numpy.array", "numpy.sin", "numpy.sin"], "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.ones", "numpy.set_printoptions", "matplotlib.pyplot.figure", "numpy.array", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "numpy.array", "numpy.sin", "numpy.sin"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/be-rays@Phugoid_rocket/Phugoid_rocket.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/FranckVachon@ipythonotebook/Classification lineaire.ipynb": {"API": ["numpy.ones", "numpy.zeros", "numpy.vstack", "numpy.hstack", "numpy.random.permutation", "numpy.arange", "numpy.arange", "numpy.meshgrid", "numpy.array", "matplotlib.pyplot.subplots", "numpy.array", "numpy.array", "numpy.dot", "numpy.sum", "matplotlib.pyplot.subplot", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "numpy.random.randn", "numpy.random.randn", "numpy.exp", "numpy.dot", "numpy.dot", "numpy.hstack"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/saininaresh4435@time-series-/Untitled2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/luatling@SpringboardWork/data_wrangling_json/sliderule_dsi_json_exercise.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ZKeiLin@AccessMap-Dashboard/test_graph_measures.ipynb": {"API": [["math.radians", "math.radians", "math.atan2", "networkx.Graph", "math.sin", "math.sin", "math.sin", "math.sqrt", "math.sqrt", "numpy.round", "numpy.round", "math.sin", "math.cos", "math.cos", "math.radians", "math.radians"]], "module": ["networkx", "numpy", "geopandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ovainola@halMLearning/neural_network.ipynb": {"API": [], "module": ["h5py", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yukinagae@two_sigma_financial_modeling_challenge/eda.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ashuthoshgowda@Simulations/Monte Carlo Simulation of Stock Prices.ipynb": {"API": [], "module": ["matplotlib", "pandas_datareader", "scipy", "pandas", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tbelaire@shadowrun_jupyter_notebooks/Damage worksheet.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/seblabbe@MATH2010-Logiciels-mathematiques/Devoirs/devoir-1-MATRICULE-NOM.ipynb": {"API": [], "module": ["IPython", "sympy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/binojohnthomas@AIND-SimulatedAnnealing-TSP/AIND-Simulated_Annealing.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jmf-mas@fimproso-data-science-workshop2017/1.01-Data types.ipynb": {"API": [], "module": ["matplotlib", "numpy", "networkx"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jmurali@myfirst_python_notebook/test.ipynb": {"API": [], "module": ["matplotlib", "ipywidgets", "pandas", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/LibrarPotter@OSFapi/get_contrib_from_OSF_proj.ipynb": {"API": [], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chrisw7@quantum-in-jupyter/1 Quantum Harmonic Oscillators.ipynb": {"API": [], "module": ["matplotlib", "ipywidgets", "numpy", "plotly", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/j-min@conv_s2s/overview.ipynb": {"API": [["collections.defaultdict", "re.escape", "re.compile", "re.compile.sub"], ["tensorflow.GraphDef", "IPython.display.display", "numpy.random.rand.replace", "IPython.display.HTML", "numpy.random.rand"]], "module": ["IPython", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MatsudaTakuya@TA/MD_simulation.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jarthurgross@symbolic-algebra-lesson/symbolic-algebra.ipynb": {"API": [], "module": ["IPython", "numpy", "sympy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pyastropd@2018-03-20/2. Plotting in Pandas.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/teaguejt@discovery_fresh/jteague6_analysis.ipynb": {"API": [], "module": ["pymongo"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/babai95@Cats-vs-dogs-classification-using-Convolutional-Neural-Network-in-Keras/main.ipynb": {"API": [], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chris-redfield@mnist/mnist-for-beginners.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/InSaNeML@Thyroid-Disease/notebook1.ipynb": {"API": [["os.path.exists", "os.path.exists", "shutil.rmtree", "shutil.rmtree", "os.remove", "os.remove"], ["pandas.read_csv", "shutil.rmtree", "os.getcwd", "os.path.normpath", "os.path.join", "os.path.join", "shutil.copy", "os.getcwd", "os.path.normpath", "os.path.join", "os.path.join", "shutil.copy"], ["requests.Session", "requests.Session.get", "requests.Session.get"], ["os.mkdir", "os.chdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.chdir", "os.chdir", "os.chdir", "os.getcwd", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir"], ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Dense", "keras.models.Sequential.summary"], ["seaborn.set", "model.create_model", "keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "model.create_model.fit_generator", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.plot", "matplotlib.pyplot.savefig", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.plot", "matplotlib.pyplot.savefig"]], "module": ["matplotlib", "pandas", "keras", "numpy", "seaborn", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ditto504@myRnotebooks/cad presentation.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Jooakim@hashcode2018/b_should_be_easy_new.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/brandonzink@Sabermetrics-SP18/Assignments/Player and Team Performance/Player and Team Analysis.ipynb": {"API": [], "module": ["matplotlib", "pandas", "scipy", "statsmodels", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kashifmin@lstm_char_generation/lstm_quran.ipynb": {"API": [], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/karopastal@test-ipynb/test-ipynb/test-pynb.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mokundong@CISDI/ipython/Demos.ipynb": {"API": [[], ["pandas.read_csv", "pandas.read_csv", "time.time", "pandas.DataFrame.from_dict", "time.time", "time.time", "pandas.DataFrame", "time.time", "re.compile"], [], ["pandas.read_csv", "pandas.read_csv", "time.time", "time.time", "time.time", "time.time", "pandas.DataFrame.from_dict", "pandas.DataFrame.from_dict", "pandas.DataFrame.from_dict.to_csv", "pandas.DataFrame.from_dict.to_csv", "re.compile"], ["pandas.read_csv", "pandas.read_csv", "time.time", "time.time", "time.time", "time.time", "pandas.DataFrame.from_dict", "pandas.DataFrame", "re.compile"]], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/robocod777@TensorFlow-Examples-/notebooks/5_MultiGPU/multigpu_basics.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.mul", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.split", "tensorflow.nn.rnn_cell.BasicLSTMCell", "tensorflow.nn.rnn", "tensorflow.pack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.split", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.random_normal.get_shape"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "numpy.reshape", "numpy.reshape"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.split", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.train.AdamOptimizer"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.mul", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/afaonline@jupyter-play/Hg Explore.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kwierman@textcog/notebook/1. Data Interface.ipynb": {"API": [], "module": ["numpy", "tensorflow", "tqdm"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vibrioh@GraphDB/src/hw3_demo.ipynb": {"API": [[], [], ["requests.post", "requests.get.json", "requests.post", "requests.get.json", "requests.post", "requests.get.json", "requests.get", "json.dumps", "json.dumps", "shutil.copyfileobj"], []], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/manugupt1@information_diffusion_networks/datav4.0/datav4.0/Data/create_network.ipynb": {"API": [[], ["csv.reader", "csv.reader", "csv.reader", "networkx.Graph", "networkx.Graph.add_edges_from", "networkx.draw", "networkx.draw", "networkx.draw", "matplotlib.pyplot.show", "networkx.Graph.number_of_nodes", "networkx.Graph.number_of_edges", "networkx.Graph.edges", "math.sqrt", "math.sqrt", "networkx.Graph.number_of_nodes", "networkx.Graph.number_of_edges", "networkx.Graph.edges", "networkx.Graph.number_of_nodes", "networkx.Graph.number_of_edges", "networkx.Graph.number_of_edges", "networkx.Graph.number_of_nodes", "math.sqrt", "math.sqrt", "networkx.Graph", "networkx.Graph.add_nodes_from", "networkx.Graph.add_node", "networkx.Graph.nodes", "networkx.Graph.nodes", "networkx.Graph.nodes", "networkx.Graph.nodes", "networkx.Graph.edges", "networkx.Graph.add_edge", "random.choice", "random.choice", "networkx.Graph.nodes", "networkx.Graph.nodes"]], "module": ["networkx", "matplotlib", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/TananK@Showcase/Kaggle/House_Prices_Prediction/HousePriceModel.ipynb": {"API": [["csv.reader", "numpy.array", "numpy.zeros", "csv.reader", "csv.reader.next", "csv.writer", "csv.writer.writerow", "numpy.array.append", "numpy.unique", "numpy.mean", "numpy.mean", "csv.writer.writerow", "csv.writer.writerow", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype"], [], []], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/songduong@Pyber/pyber.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rnjailamba@tf-notebooks/4-Logistic-Regression.ipynb": {"API": ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.zeros", "tensorflow.sigmoid", "tensorflow.reduce_mean", "tensorflow.train.string_input_producer", "tensorflow.TextLineReader", "tensorflow.TextLineReader.read", "tensorflow.decode_csv", "tensorflow.train.shuffle_batch", "tensorflow.to_float", "tensorflow.to_float", "tensorflow.to_float", "tensorflow.to_float", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.cast", "tensorflow.Session", "tensorflow.initialize_all_variables.run", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "time.sleep", "tensorflow.train.Coordinator.request_stop", "tensorflow.train.Coordinator.join", "tensorflow.matmul", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.equal", "tensorflow.equal", "tensorflow.equal", "tensorflow.pack", "tensorflow.transpose", "tensorflow.pack", "os.path.join", "tensorflow.pack", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_mean", "tensorflow.initialize_all_variables", "os.getcwd", "tensorflow.cast", "tensorflow.equal"], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ischurov@nesopendata2017/API-JSON.ipynb": {"API": [], "module": ["matplotlib", "pandas_datareader", "sympy", "ipywidgets", "pandas", "scipy", "statsmodels", "numpy", "seaborn", "requests", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SirPrime@MatrixAnalysis-Beams/VigaContinua_mx.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aanchan@TensorFlow-Tutorials/3_mnist_from_scratch.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/5f5e0ff@repository/TensorFlowMachineLearning/TensorFlowMachineLearning.ipynb": {"API": [["numpy.random.seed", "tensorflow.set_random_seed", "tensorflow.ConfigProto", "tensorflow.Session", "keras.backend.set_session", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "keras.callbacks.ModelCheckpoint", "keras.callbacks.EarlyStopping", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.array", "numpy.array", "numpy.array.astype", "numpy.array", "numpy.array", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "keras.layers.InputLayer", "keras.layers.normalization.BatchNormalization", "keras.layers.Dropout", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.layers.Dense", "keras.layers.Activation", "numpy.array.append", "numpy.mean", "numpy.ones", "numpy.array", "tensorflow.get_default_graph", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dropout", "numpy.mean", "keras.initializers.glorot_normal", "keras.initializers.RandomNormal", "keras.initializers.glorot_normal", "keras.initializers.RandomNormal"], ["numpy.random.seed", "tensorflow.set_random_seed", "tensorflow.ConfigProto", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder_with_default", "tensorflow.placeholder_with_default", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.array", "numpy.array", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Variable", "tensorflow.Variable", "numpy.array.append", "numpy.mean", "numpy.ones", "tensorflow.get_default_graph", "tensorflow.nn.dropout", "tensorflow.nn.dropout", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.matmul", "tensorflow.nn.relu", "tensorflow.nn.softmax", "numpy.mean", "tensorflow.train.AdamOptimizer", "numpy.mean"], ["pandas.DataFrame", "pandas.DataFrame.dropna", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader.resample"], ["pandas.to_datetime", "pandas.concat", "pandas.to_datetime", "pandas.to_datetime", "pandas.read_html", "pandas.to_datetime", "pandas.to_datetime", "pandas.datetime.now"], "pandas.DataFrame", "numpy.array", "matplotlib.pyplot.show", "pandas.DataFrame", "pandas.DataFrame", "time.time", "keras_model.Model", "pandas.read_csv", "pandas.to_datetime", "numpy.log", "keras_model.Model.initial", "keras_model.Model.train", "keras_model.Model.test", "keras_model.Model.value", "time.time"], "module": ["matplotlib", "pandas_datareader", "pandas", "keras", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ajg379@NetworkAnalysis/calculations.ipynb": {"API": [["networkx.read_edgelist", "networkx.nodes", "networkx.Graph", "networkx.Graph.subgraph", "matplotlib.pyplot.figure", "matplotlib.pyplot.axis", "networkx.draw_networkx", "matplotlib.pyplot.savefig", "networkx.Graph", "networkx.Graph.subgraph", "matplotlib.pyplot.figure", "matplotlib.pyplot.axis", "networkx.draw_networkx", "matplotlib.pyplot.savefig", "networkx.read_edgelist.edges", "networkx.Graph.nodes", "networkx.read_edgelist.edges", "networkx.Graph.nodes", "networkx.Graph.add_edge", "networkx.Graph.add_edge"], ["os.listdir", "os.listdir", "networkx.read_edgelist.nodes", "networkx.pagerank", "networkx.pagerank.items", "networkx.read_edgelist", "time.time", "gc.collect", "networkx.read_edgelist.degree", "numpy.mean", "networkx.nodes_with_selfloops", "networkx.read_edgelist.remove_edge", "networkx.read_edgelist.nodes", "networkx.read_edgelist.degree", "networkx.nodes", "networkx.edges", "networkx.edges.items", "networkx.nodes", "networkx.edges", "statistics.stdev", "networkx.read_edgelist.remove_node", "networkx.read_edgelist.edges", "networkx.read_edgelist.nodes", "networkx.read_edgelist.nodes", "networkx.read_edgelist.nodes", "networkx.read_edgelist.edges", "time.time", "time.time", "time.time", "time.time", "time.time", "time.time", "time.time", "time.time", "time.time"]], "module": ["networkx", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/deepconvolution@AWS-Rekognition/Introduction.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "requests", "boto3"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/akashprem12@Portfolio-Optimisation-using-Monte-Carlo-Simulation/Portfolio Optimisation using Monte Carlo Simulation.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/andrewmusicant@flipping-out/coin-flips.ipynb": {"API": [["random.randint"], []], "module": ["matplotlib", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Simon-at-Ely@OdorMaterials/IR_Spectra_plot.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "pandas.read_csv", "pandas.read_csv", "matplotlib.pyplot.subplots", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "numpy.arange", "numpy.arange", "pandas.cut", "pandas.cut", "pandas.cut", "matplotlib.pyplot.subplots", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "numpy.arange", "numpy.arange", "pandas.cut", "pandas.cut", "pandas.cut", "matplotlib.pyplot.subplots", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.arange", "numpy.arange", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "matplotlib.pyplot.subplots", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.arange", "numpy.arange", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "matplotlib.pyplot.subplots", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "pandas.value_counts", "pandas.value_counts", "pandas.value_counts", "pandas.value_counts", "pandas.value_counts", "pandas.value_counts", "pandas.read_csv.groupby", "pandas.read_csv.groupby", "pandas.read_csv.groupby", "pandas.read_csv.groupby", "pandas.read_csv.groupby", "pandas.read_csv.groupby", "pandas.cut", "pandas.cut", "pandas.cut", "pandas.cut", "pandas.cut", "pandas.cut"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Python1001@Workshop-2/Histogram.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/davidomo@Heroes-of-Pymoli/Pymoli.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/stephenpaff@Country_Profile_Data_Project/Country Profile Data Project.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mkrijal@happiness/Happiness Code.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jimankang@week4/Week4-assignment.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/elsaboori@matplotlip/Matplotlip homework.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/HariPadBharti@R-Project/Conversion and Cleaning/xlstocsv.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DaniellMoreno@Simulacion-I/Taller 3 pruebas generadores/Test Numerical.Reciepes.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/csh3l3-2017b@0a-heroes-hafidzmuhammadirhas/predictions.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yangxy641x@MDP/MDP 1.2 \u8bbe\u5907\u66f4\u65b0.ipynb": {"API": ["numpy.array", "numpy.array", "numpy.array", "numpy.mat", "numpy.mat", "numpy.arange", "numpy.zeros", "numpy.zeros", "numpy.arange"], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/debjit-ray@UDACITY_DEEP_LEARNING-PROJ03/dlnd_tv_script_generation.ipynb": {"API": [["os.path.join", "pickle.dump", "pickle.load", "pickle.dump", "pickle.load"], ["tensorflow.Graph", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "numpy.array", "numpy.array_equal", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "numpy.array", "numpy.array_equal", "numpy.array_equal", "tensorflow.Graph", "tensorflow.Graph", "numpy.array", "numpy.array", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.Graph"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/RobFirth@zoidberg/ABPSoton10k/Data_Analysis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "astropy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dg-no-9@data-vis/src/MachineLearning.ipynb": {"API": [[]], "module": ["networkx", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AK-Saigyouji@Python-Machine-Learning/Neural Network.ipynb": {"API": [["scipy.stats.norm.rvs", "scipy.stats.norm.rvs", "numpy.sum", "numpy.array", "scipy.stats.norm.rvs"], ["numpy.empty", "numpy.hstack", "numpy.zeros", "numpy.ones"], ["scipy.optimize.fmin_cg", "numpy.concatenate", "numpy.zeros", "scipy.special.expit", "numpy.hstack", "numpy.log", "numpy.argmax", "numpy.random.rand.sum", "numpy.array", "numpy.random.rand.transpose", "numpy.random.rand.flatten", "numpy.ones", "numpy.random.rand"], ["scipy.optimize.fmin_bfgs", "numpy.empty", "numpy.log", "scipy.special.expit", "numpy.hstack", "numpy.zeros", "numpy.ones"]], "module": ["pandas", "numpy", "matplotlib", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Igorth@tableau_contando_historias/Projeto final Udacity.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dmlicht@blog-notebooks/K-Means Clustering.ipynb": {"API": [["numpy.setdiff1d", "numpy.sqrt", "numpy.square"]], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/abhijitkulkarni25@Pandas_Practice/PandasPractice.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/prashant-chopra@deep-learning/Building-Blocks/01.tensorflow_fundamentals.ipynb": {"API": [["tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.get_default_graph", "tensorflow.Graph.as_default", "tensorflow.constant", "tensorflow.constant", "tensorflow.add", "tensorflow.multiply", "tensorflow.add", "tensorflow.subtract", "tensorflow.divide", "tensorflow.Graph.as_default", "tensorflow.constant", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.Graph.as_default", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.add", "tensorflow.Session", "tensorflow.get_default_graph", "tensorflow.Session", "tensorflow.get_default_graph", "tensorflow.Session", "tensorflow.get_default_graph"]], "module": ["keras", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/machine-learning-experiments@bicycle-sharing-forecast/bicycle_sharing_neural_network.ipynb": {"API": [["numpy.random.normal", "numpy.random.normal", "numpy.zeros", "numpy.zeros", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.exp"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/caiwenhao0537@deep_learning/mnist_inference.ipynb": {"API": [["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.layers.l2_regularizer", "mnist_inference.inference", "tensorflow.Variable", "tensorflow.train.ExponentialMovingAverage", "tensorflow.train.ExponentialMovingAverage.apply", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.train.exponential_decay", "tensorflow.train.Saver", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.app.run", "tensorflow.trainable_variables", "tensorflow.add_n", "tensorflow.control_dependencies", "tensorflow.no_op", "tensorflow.Session", "tensorflow.global_variables_initializer.run", "tensorflow.argmax", "tensorflow.get_collection", "tensorflow.train.GradientDescentOptimizer", "tensorflow.global_variables_initializer", "tensorflow.train.Saver.save", "os.path.join"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.train.ExponentialMovingAverage", "tensorflow.train.ExponentialMovingAverage.apply", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.contrib.layers.l2_regularizer", "tensorflow.train.exponential_decay", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.app.run", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.trainable_variables", "tensorflow.control_dependencies", "tensorflow.no_op", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.initialize_all_variables.run", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.train.GradientDescentOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.initialize_all_variables"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.InteractiveSession", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.placeholder", "tensorflow.nn.dropout", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.InteractiveSession.run", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.truncated_normal", "tensorflow.Variable", "tensorflow.constant", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.max_pool", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.train.AdamOptimizer.run", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.cast.eval", "tensorflow.cast.eval"], ["tensorflow.get_variable", "tensorflow.add_to_collection", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.nn.relu", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.truncated_normal_initializer", "tensorflow.matmul", "tensorflow.constant_initializer", "tensorflow.matmul", "tensorflow.constant_initializer"], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.variable_scope", "tensorflow.get_variable"]], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JojoSeiler@assignment3/Assignment_3.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yperez10@first-python-notebook2/Analysis.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hugolouzada@aster_classy/2_classify_columns.ipynb": {"API": [["pandas.DataFrame", "pandas.Series", "pandas.Series", "pandas.concat", "pandas.Series", "pandas.Series", "pandas.Series", "pandas.DataFrame"], []], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aparecidovieira@CIFAR10_Keras/CIFAR10_Keras.ipynb": {"API": [], "module": ["matplotlib", "pandas", "keras", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sertaco@Summoners-War-Arena-Simulator---Speed-Tuner/Summoners War Arena Simulator - Speed Tuner.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Yoga07@Udacity-DAND-P3-Analyze-A-B-Test-Results/AnalyzeABTestResults/Analyze_ab_test_results_notebook.ipynb": {"API": [], "module": ["matplotlib", "statsmodels", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jhjanicki@Updatable_Reusable_Circular_Heat/data_clean/Clean_Acoustic_Data.ipynb": {"API": [["warnings.filterwarnings", "pandas.read_csv", "pandas.to_datetime", "pandas.to_datetime"]], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zerickso@Glider_data/Glider_dataset_539.ipynb": {"API": [], "module": ["matplotlib", "numpy", "netCDF4"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jasccyang@ABTest-ecommerce/Analyze_ab_test_results_notebook.ipynb": {"API": [], "module": ["patsy", "matplotlib", "pandas", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tprinkki@data-cleaning/validation-notebooks/04 - Hypothesis.ipynb": {"API": [[], [], [], [], [], [], [], ["sys.path.append", "os.path.dirname", "random.choice", "time.sleep", "random.random", "random.randint", "random.randint", "datetime.datetime.now.isoformat", "random.randint", "random.random", "random.randint", "random.random", "datetime.datetime.now"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yatharthn@Open-Source-Tools-Yves-Hilpisch/01_financial_time_series_analysis.ipynb": {"API": [["flask.Flask", "flask.Flask.route", "numpy.round", "flask.jsonify", "flask.Flask.run", "numpy.random.normal", "datetime.datetime.now.str.replace", "datetime.datetime.now"]], "module": ["numpy", "flask"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lu22do@dancer-generator/DCGAN-dancer-gen1.ipynb": {"API": [["numpy.asarray", "matplotlib.pyplot.subplots", "matplotlib.verbose.set_level", "matplotlib.animation.ArtistAnimation", "matplotlib.pyplot.show", "matplotlib.animation.ImageMagickFileWriter", "matplotlib.animation.ArtistAnimation.save", "numpy.round", "numpy.round"]], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Sreenuraj@ProblemSolving/Search an element in an array where difference between adjacent elements is 1.ipynb": {"API": [], "module": ["selenium", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/brandondakinard@movie-association-project/info_app_learning_project.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/meghanamurthy17@Python-for-Algorithms--Data-Structures/Array Sequences/Dynamic Arrays.ipynb": {"API": [], "module": ["nose", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Gogumee@cnnmrf_tf/tf.extract_image_patches.ipynb": {"API": [["tensorflow.extract_image_patches", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.squeeze", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.unstack", "tensorflow.stack", "tensorflow.name_scope", "tensorflow.div", "tensorflow.squeeze", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.nn.conv2d", "tensorflow.squeeze", "tensorflow.gather", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.stack.append", "tensorflow.reduce_sum", "tensorflow.transpose.get_shape", "tensorflow.argmax", "tensorflow.square", "tensorflow.reshape.get_shape", "tensorflow.subtract"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rupello@birdai/notebooks/Bella Canto API.ipynb": {"API": [], "module": ["pandas", "numpy", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sushant2811@pythonAndStatsForDS/advancedPandas.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rtcastellano@Rob_Zi_Yannick_Michael--Airbnb/data_processing_v2 for xgboost.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/akuzni2@ie300_hw8/HW8.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/joefinlon@HydroViewer/hydroViewer2.ipynb": {"API": [["numpy.array", "xarray.open_dataset", "xarray.open_dataset", "numpy.array", "numpy.array", "numpy.empty", "numpy.unique", "numpy.ones", "numpy.array", "numpy.zeros", "numpy.diff", "numpy.insert", "numpy.array.append", "numpy.array", "numpy.array", "numpy.tile", "numpy.ones", "numpy.arange", "numpy.array", "numpy.isnan", "numpy.empty", "numpy.empty", "numpy.array_equal", "numpy.array.append", "numpy.array.append", "numpy.array", "numpy.arange", "numpy.asarray", "numpy.tile", "numpy.ones", "numpy.arange", "numpy.array", "numpy.where", "numpy.array.append", "numpy.asarray.append", "numpy.array", "numpy.arange", "numpy.asarray", "scipy.misc.toimage", "scipy.misc.toimage.save", "numpy.ones", "numpy.remainder", "numpy.where", "numpy.where", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.asarray.append", "numpy.sum", "numpy.where", "numpy.where", "numpy.where", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.mod", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.mod", "numpy.where", "numpy.where", "numpy.where", "numpy.floor", "numpy.floor"], ["matplotlib.use", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.any", "numpy.tile", "numpy.ones", "numpy.arange", "matplotlib.colors.ListedColormap", "matplotlib.colors.BoundaryNorm", "xarray.open_dataset", "numpy.insert", "numpy.array.append", "numpy.array", "numpy.array", "numpy.array", "numpy.arange", "numpy.asarray", "numpy.arange", "numpy.arange", "numpy.array", "numpy.array", "matplotlib.pyplot.subplots", "matplotlib.pyplot.savefig", "numpy.array_equal", "numpy.array.append", "numpy.array.append", "numpy.asarray.append", "numpy.remainder", "matplotlib.pyplot.clf", "matplotlib.pyplot.cla", "matplotlib.pyplot.close", "numpy.array.append", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.binary_repr", "numpy.arange", "numpy.mod", "numpy.floor"]], "module": ["matplotlib", "xarray", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zhangluoyang@cnn-for-auto-event-extract/DataSets_multi_task_w2v.ipynb": {"API": [["collections.namedtuple", "numpy.arange", "numpy.random.shuffle", "os.path.exists", "os.mkdir", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump"], [], ["numpy.array", "numpy.linalg.norm", "numpy.reshape", "numpy.divide", "numpy.linalg.norm", "numpy.divide", "numpy.dot", "numpy.fromstring", "numpy.argsort", "numpy.dtype"], [], [], ["word2vec.word2vec", "collections.namedtuple", "numpy.arange", "numpy.random.shuffle", "os.path.exists", "os.mkdir", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.array", "numpy.array", "numpy.array", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.array", "numpy.array", "numpy.array"], ["word2vec.word2vec", "collections.namedtuple", "numpy.array", "numpy.arange", "numpy.random.shuffle", "os.path.exists", "os.mkdir", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump", "numpy.reshape", "numpy.random.rand"], [], [], ["collections.namedtuple", "numpy.arange", "numpy.random.shuffle", "os.path.exists", "os.mkdir", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump", "cPickle.dump"], [], []], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fjcamillo@RNN-in-Tensorflow/notebooks/Recurrent Neural Network using Tensorflow.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/usul83@celebA/celebAbb.ipynb": {"API": [["tensorflow.truncated_normal_initializer", "tensorflow.get_variable", "tensorflow.constant_initializer", "tensorflow.get_variable", "tensorflow.nn.conv2d", "tensorflow.nn.max_pool", "tensorflow.contrib.layers.batch_norm", "tensorflow.nn.relu", "tensorflow.contrib.layers.batch_norm", "tensorflow.nn.relu", "tensorflow.contrib.layers.batch_norm", "tensorflow.nn.relu", "tensorflow.reshape", "tensorflow.contrib.layers.batch_norm", "tensorflow.nn.relu", "tensorflow.train.Saver", "tensorflow.nn.sigmoid", "tensorflow.stack", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.abs", "tensorflow.constant", "tensorflow.cast", "tensorflow.stack", "tensorflow.image.draw_bounding_boxes", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.round", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.concat", "tensorflow.concat", "tensorflow.losses.mean_squared_error", "tensorflow.losses.mean_squared_error", "tensorflow.concat", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.train.MomentumOptimizer", "tensorflow.constant", "tensorflow.constant", "tensorflow.cast", "tensorflow.cast", "tensorflow.constant", "tensorflow.one_hot", "tensorflow.log"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/michael-iuzzolino@AI_perceptions_survey_analysis/Step 4 - R ANOVA.ipynb": {"API": [[], []], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nathendel@ift_draft/agent-based-ift.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AllenDowney@CompStats/resampling.ipynb": {"API": [["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth"], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.stats.hypergeom.pmf", "numpy.linspace", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "io.open", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.special.gamma", "math.exp", "math.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "scipy.special.betainc", "scipy.special.betaincinv", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.normal", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "re.search", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "math.exp", "math.erf", "numpy.asarray", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "thinkplot.Plot", "math.exp", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.vlines", "matplotlib.pyplot.hlines", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.gca", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.gcf", "warnings.warn", "numpy.array", "numpy.array", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.get_xticklabels", "matplotlib.pyplot.setp", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.get_yticklabels", "matplotlib.pyplot.setp", "warnings.warn", "warnings.warn", "math.log", "math.log", "numpy.diff", "numpy.diff"], ["numpy.linspace", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.annotate", "thinkplot.Plot", "thinkplot.Show", "thinkstats2.EvalNormalPdf"], ["thinkplot.Save", "nsfg2.MakeFrames", "thinkstats2.RandomSeed", "first.MakeFrames", "thinkstats2.Hist", "numpy.hstack", "numpy.random.shuffle", "numpy.random.permutation", "numpy.random.choice", "thinkstats2.Hist", "thinkstats2.Hist.Freqs", "thinkstats2.Hist", "numpy.array", "numpy.hstack", "thinkstats2.Pmf", "numpy.array", "numpy.random.shuffle", "thinkstats2.Resample", "thinkstats2.Resample", "random.choice", "thinkstats2.Corr", "thinkstats2.Hist.Freqs", "thinkstats2.Pmf.Probs", "numpy.ones", "numpy.ones"], ["thinkstats2.ReadStataDct", "thinkstats2.ReadStataDct.ReadFixedWidth", "collections.defaultdict"], ["nsfg.ReadFemPreg", "thinkstats2.CohenEffectSize", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist.Smallest", "thinkstats2.Hist.Largest", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkplot.Hist", "thinkplot.Save", "thinkstats2.Hist", "thinkstats2.Hist", "thinkplot.PrePlot", "thinkplot.Hist", "thinkplot.Hist", "thinkplot.Save", "numpy.floor"]], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dydokamil@imdb_movies/imdb500.ipynb": {"API": [], "module": ["numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fbrusch@python_per_creatori_di_mondi/Monaco Pazzo.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mgarlinghouse@git_code/feat_scripts/Feat_Level2.ipynb": {"API": [[], [], [], ["glob.glob", "os.path.join", "multiprocessing.Pool", "multiprocessing.Pool.map", "multiprocessing.Pool.close", "multiprocessing.Pool.join", "os.system"], ["os.chdir", "os.path.join", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "glob.glob", "os.path.join", "glob.glob", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], ["os.chdir", "os.path.exists", "os.path.join", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "glob.glob", "os.path.join", "glob.glob", "glob.glob", "glob.glob", "pdb.set_trace", "os.path.join", "os.remove", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], ["os.chdir", "os.chdir", "glob.glob", "os.chdir", "os.path.join", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.path.join", "subprocess.check_output", "subprocess.check_output", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], ["glob.glob", "os.path.join", "os.path.exists", "glob.glob", "shutil.copy2", "os.path.join", "os.path.join", "shutil.copy2", "os.path.join", "shutil.rmtree", "os.path.join", "os.remove", "os.path.join", "os.path.join"], ["os.chdir", "glob.glob", "datetime.datetime.now.strftime", "os.path.join", "os.path.join", "os.chdir", "os.walk", "os.system", "shutil.copy", "shutil.rmtree", "datetime.datetime.now", "glob.glob", "os.path.join", "os.sep.join"], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "no_reg.main"], ["glob.glob", "os.chdir", "datetime.datetime.now.strftime", "os.path.join", "os.path.join", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "multiprocessing.Pool", "multiprocessing.Pool.map", "os.chdir", "glob.glob", "glob.glob", "glob.glob", "os.path.join", "os.chdir", "glob.glob", "glob.glob", "datetime.datetime.now", "os.path.exists", "os.path.join", "os.path.exists", "os.path.join", "os.system", "os.chdir", "glob.glob", "os.path.join", "os.chdir", "glob.glob", "os.path.join", "os.system", "os.system", "os.path.join", "os.chdir", "glob.glob", "os.path.exists", "os.makedirs", "os.path.join", "os.path.join", "os.system", "os.path.join", "os.path.join", "os.system", "os.system", "os.system", "os.path.join", "os.system", "subprocess.check_output", "os.path.exists", "os.path.isfile", "os.system", "os.path.exists", "subprocess.check_output.split", "os.path.join", "fnmatch.fnmatch", "shutil.move", "fnmatch.fnmatch", "os.path.join", "os.path.join", "os.path.join.close", "os.remove", "shutil.move", "os.path.join", "os.path.join.readlines", "os.path.join", "os.path.join.write", "os.path.join", "os.path.join", "os.path.join", "os.path.join.close", "os.path.join", "os.path.join.readlines", "os.path.join", "os.path.join.write"], ["glob.glob", "os.chdir", "datetime.datetime.now.strftime", "os.path.join", "os.path.join", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "multiprocessing.Pool", "multiprocessing.Pool.map", "glob.glob", "glob.glob", "glob.glob", "datetime.datetime.now", "os.path.exists", "os.path.join", "os.path.exists", "os.path.join", "os.chdir", "glob.glob", "os.path.join", "os.system", "os.system", "os.path.exists", "os.makedirs", "os.path.join", "os.path.join", "os.path.join", "os.path.exists", "os.system", "os.system", "os.system", "os.path.join", "os.system", "subprocess.check_output", "os.path.exists", "shutil.move", "os.path.join", "os.path.isfile", "os.system", "os.path.exists", "os.path.join", "os.path.join", "os.path.join.close", "subprocess.check_output.split", "os.path.join", "os.remove", "os.path.join", "os.path.join.readlines", "os.path.join", "os.path.join.write", "os.path.join"]], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hcuny@SQL_NoSQL_Essentials/Sqlite3_PY.ipynb": {"API": [[]], "module": ["pymongo"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/KongsakTi@study_tensorflow/10_MNIST_NN/lab-10-6-mnist_nn_batchnorm.ipynb": {"API": [["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.summary.merge_all", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter.add_graph", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.square", "tensorflow.global_variables_initializer", "tensorflow.summary.FileWriter.add_summary"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.equal", "tensorflow.reduce_mean", "random.randint", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.train.AdamOptimizer", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.argmax"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.equal", "tensorflow.reduce_mean", "random.randint", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.train.AdamOptimizer", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.argmax"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.equal", "tensorflow.reduce_mean", "random.randint", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.train.AdamOptimizer", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.argmax"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.equal", "tensorflow.reduce_mean", "random.randint", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.train.AdamOptimizer", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.argmax"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.equal", "tensorflow.reduce_mean", "random.randint", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.argmax"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.equal", "tensorflow.reduce_sum", "tensorflow.InteractiveSession", "tensorflow.InteractiveSession.run", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.truncated_normal", "tensorflow.div", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.InteractiveSession.run", "tensorflow.constant", "tensorflow.add", "tensorflow.InteractiveSession.run", "tensorflow.train.GradientDescentOptimizer", "tensorflow.constant", "tensorflow.exp", "tensorflow.reduce_mean", "tensorflow.reduce_mean"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.equal", "tensorflow.reduce_mean", "random.randint", "tensorflow.contrib.framework.arg_scope", "tensorflow.contrib.layers.fully_connected", "tensorflow.contrib.layers.dropout", "tensorflow.contrib.layers.fully_connected", "tensorflow.contrib.layers.dropout", "tensorflow.contrib.layers.fully_connected", "tensorflow.contrib.layers.dropout", "tensorflow.contrib.layers.fully_connected", "tensorflow.contrib.layers.dropout", "tensorflow.contrib.layers.fully_connected", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.train.AdamOptimizer", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.argmax"], ["tensorflow.set_random_seed", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.Session", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.global_variables_initializer", "tensorflow.arg_max", "tensorflow.arg_max", "tensorflow.arg_max", "tensorflow.arg_max", "tensorflow.log"], ["tensorflow.set_random_seed", "numpy.loadtxt", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.one_hot", "tensorflow.reshape", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.argmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.GradientDescentOptimizer", "tensorflow.global_variables_initializer"], ["tensorflow.set_random_seed", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.one_hot", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.nn.dynamic_rnn", "tensorflow.reshape", "tensorflow.contrib.layers.fully_connected", "tensorflow.reshape", "tensorflow.ones", "tensorflow.contrib.seq2seq.sequence_loss", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "numpy.argmax", "tensorflow.train.AdamOptimizer", "numpy.argmax"], ["tensorflow.set_random_seed", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.one_hot", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell.zero_state", "tensorflow.nn.dynamic_rnn", "tensorflow.reshape", "tensorflow.contrib.layers.fully_connected", "tensorflow.reshape", "tensorflow.ones", "tensorflow.contrib.seq2seq.sequence_loss", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.argmax", "tensorflow.Session", "tensorflow.train.AdamOptimizer", "tensorflow.global_variables_initializer", "numpy.squeeze"], ["tensorflow.set_random_seed", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell.zero_state", "tensorflow.nn.dynamic_rnn", "tensorflow.reshape", "tensorflow.contrib.layers.fully_connected", "tensorflow.reshape", "tensorflow.ones", "tensorflow.contrib.seq2seq.sequence_loss", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.argmax", "tensorflow.Session", "tensorflow.train.AdamOptimizer", "tensorflow.global_variables_initializer", "numpy.squeeze"], ["tensorflow.set_random_seed", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.one_hot", "tensorflow.reshape", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.reshape", "tensorflow.ones", "tensorflow.contrib.seq2seq.sequence_loss", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.argmax", "tensorflow.matmul", "tensorflow.Session", "tensorflow.train.AdamOptimizer", "tensorflow.global_variables_initializer", "numpy.squeeze"], ["tensorflow.set_random_seed", "numpy.loadtxt", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.dynamic_rnn", "tensorflow.contrib.layers.fully_connected", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.sqrt", "matplotlib.use", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "tensorflow.square", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.global_variables_initializer", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "numpy.min", "numpy.max", "numpy.min", "tensorflow.square"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.constant", "tensorflow.constant", "tensorflow.Session.run", "tensorflow.Session.run"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.Session"], ["tensorflow.set_random_seed", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.InteractiveSession", "tensorflow.global_variables_initializer", "tensorflow.InteractiveSession.run", "tensorflow.truncated_normal", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.assign", "tensorflow.assign", "tensorflow.square", "tensorflow.InteractiveSession.run", "tensorflow.InteractiveSession.run", "tensorflow.reduce_mean"], ["tensorflow.set_random_seed", "numpy.array", "numpy.array", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.reduce_mean", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "tensorflow.equal", "tensorflow.global_variables_initializer", "tensorflow.log", "tensorflow.log"], ["tensorflow.set_random_seed", "numpy.array", "numpy.array", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.reduce_mean", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "tensorflow.equal", "tensorflow.global_variables_initializer", "tensorflow.log", "tensorflow.log"], ["tensorflow.set_random_seed", "numpy.array", "numpy.array", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.name_scope", "tensorflow.summary.scalar", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.cast", "tensorflow.Session", "tensorflow.summary.merge_all", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter.add_graph", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.global_variables_initializer", "tensorflow.summary.FileWriter.add_summary", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log", "tensorflow.log"], ["tensorflow.set_random_seed", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.InteractiveSession", "tensorflow.global_variables_initializer", "tensorflow.InteractiveSession.run", "tensorflow.truncated_normal", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.assign", "tensorflow.assign", "tensorflow.square", "tensorflow.InteractiveSession.run", "tensorflow.InteractiveSession.run", "tensorflow.reduce_mean"], ["tensorflow.set_random_seed", "numpy.loadtxt", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.one_hot", "tensorflow.reshape", "tensorflow.cast", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.equal", "tensorflow.reduce_mean", "numpy.unique", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.assign", "tensorflow.assign", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.log", "tensorflow.log", "tensorflow.global_variables_initializer", "tensorflow.exp", "tensorflow.reduce_sum"], ["tensorflow.set_random_seed", "numpy.array", "numpy.array", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.reduce_mean", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "tensorflow.equal", "tensorflow.global_variables_initializer", "tensorflow.log", "tensorflow.log"], ["tensorflow.set_random_seed", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.square", "tensorflow.global_variables_initializer", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "tensorflow.train.string_input_producer", "tensorflow.TextLineReader", "tensorflow.TextLineReader.read", "tensorflow.decode_csv", "tensorflow.train.batch", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tensorflow.train.Coordinator.request_stop", "tensorflow.train.Coordinator.join", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.square", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "numpy.loadtxt", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.square", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.square", "tensorflow.global_variables_initializer", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.summary.image", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter.add_graph", "tensorflow.equal", "tensorflow.reduce_mean", "random.randint", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.Session.run", "tensorflow.summary.FileWriter.add_summary", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.equal", "tensorflow.reduce_mean", "random.randint", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.summary.image", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.Variable", "tensorflow.summary.merge_all", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter.add_graph", "tensorflow.train.Saver", "tensorflow.train.get_checkpoint_state", "tensorflow.Session.run", "tensorflow.equal", "tensorflow.reduce_mean", "random.randint", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.train.Saver.save", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.train.Saver.restore", "tensorflow.Session.run", "tensorflow.summary.FileWriter.add_summary", "tensorflow.Variable.assign", "os.path.exists", "os.makedirs", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "numpy.array", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.square", "tensorflow.global_variables_initializer", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "numpy.array", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.square", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "numpy.min", "numpy.max", "numpy.min"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.arg_max", "tensorflow.arg_max", "tensorflow.cast", "tensorflow.Session", "random.randint", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.global_variables_initializer", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.log"], ["tensorflow.set_random_seed", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.arg_max", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.arg_max", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.global_variables_initializer", "tensorflow.log"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.nn.dropout", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.nn.dropout", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.nn.dropout", "tensorflow.reshape", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.equal", "tensorflow.reduce_mean", "random.randint", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.train.AdamOptimizer", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.equal", "tensorflow.reduce_mean", "random.randint", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.train.AdamOptimizer", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.argmax"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.global_variables_initializer", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.nn.dropout", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.nn.dropout", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.nn.dropout", "tensorflow.reshape", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "numpy.zeros", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "numpy.zeros", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.placeholder", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.dropout", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.dropout", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.dropout", "tensorflow.reshape", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.train.AdamOptimizer"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.global_variables_initializer", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.placeholder", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.dropout", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.dropout", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.dropout", "tensorflow.reshape", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.train.AdamOptimizer"], ["tensorflow.set_random_seed", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.nn.dropout", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.nn.dropout", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.nn.dropout", "tensorflow.reshape", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.equal", "tensorflow.reduce_mean", "random.randint", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.matmul", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.train.AdamOptimizer", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.argmax"], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.square", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.square", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.square", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.random_normal.assign", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.random_normal", "tensorflow.square", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.square", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.train.GradientDescentOptimizer.compute_gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.square", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "tensorflow.square", "tensorflow.global_variables_initializer", "tensorflow.Session.run"], ["tensorflow.set_random_seed", "numpy.loadtxt", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.reduce_mean", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "tensorflow.equal", "tensorflow.global_variables_initializer", "tensorflow.log", "tensorflow.log"], ["tensorflow.set_random_seed", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.reduce_mean", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "tensorflow.equal", "tensorflow.global_variables_initializer", "tensorflow.log", "tensorflow.log"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/azurelmy@FI_QuantTrading/HW1_MengyangLiu/HW1_MengyangLiu.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/stoneyv@FARS-traffic/python/notebooks/fars_10to15_vehicle_table.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ClaudiaOca@first-python-notebook/Untitled.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/H3nrycrosby@riaa_scraping_project/riaa_EDA.ipynb": {"API": [[], ["selenium.webdriver.Chrome", "selenium.webdriver.Chrome.get", "time.sleep", "csv.writer", "csv.writer.writerow", "time.sleep", "selenium.webdriver.Chrome.find_elements_by_xpath", "time.sleep", "selenium.webdriver.Chrome.execute_script", "time.sleep", "selenium.webdriver.Chrome.find_elements_by_xpath", "selenium.webdriver.Chrome.find_element_by_xpath", "selenium.webdriver.Chrome.execute_script", "selenium.webdriver.Chrome.find_element_by_xpath", "selenium.webdriver.Chrome.close", "csv.writer.writerow"]], "module": ["matplotlib", "selenium", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sunandakp@VishwaniketanDSWorkshop2016/test.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JungWinter@dnf-auction/playground.ipynb": {"API": [], "module": ["pandas", "numpy", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/annanna1128@EstimatingSurfaceArea_ParticleFilterMethod/EstimateSurfaceArea_PF-constDF.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "seaborn", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/WongYiWei@first-python-notebook/prop-60-analysis.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/moaddeli@PPE2017/benchmark.ipynb": {"API": [], "module": ["numba", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/caicloud@tensorflow-tutorial/Deep_Learning_with_TensorFlow/0.12.0/Chapter05/3. \u53d8\u91cf\u7ba1\u7406.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pinealan@csjpm-bigdata-workshop/Spark.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/staceyvo@IS362_Project1/IS362_Project1.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/veleialei@Knn_MachineLearning/hw4_new.ipynb": {"API": [[], [], ["pathlib.Path", "pathlib.Path.is_file"], [], ["numpy.power", "numpy.sum", "numpy.sqrt", "operator.itemgetter", "operator.itemgetter"], ["pathlib.Path", "pathlib.Path.is_file", "file_logger.file_logger", "stdout_logger.stdout_logger"], ["pandas.read_csv", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "knn.knn", "os.path.splitext", "knn.knn.fit", "knn.knn.getAccuracy"]], "module": ["pandas", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dsschult@ipython_notebooks/Global.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pymongo", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/abjoker@loading-from-excel/loading_excel.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Kevinqian0501@deeplearning_on_aws/TensorFlow_example/examples/batch_normalizaiton.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"]], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/masinoa@probability/Misc_Examples.ipynb": {"API": [], "module": ["scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/atulit123@Machine-learning/abalone/practice_abalone.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Olamyy@soc-datascience-mentorship/day2/day2.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/josh-wilde@pyplot-tutorial/Matplotlib_tutorial.ipynb": {"API": ["matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.axis", "matplotlib.pyplot.show", "numpy.arange", "matplotlib.pyplot.plot", "numpy.arange", "matplotlib.pyplot.plot", "numpy.arange", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.setp", "matplotlib.pyplot.setp", "numpy.arange", "numpy.arange", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.hist", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.text", "matplotlib.pyplot.axis", "matplotlib.pyplot.grid", "matplotlib.pyplot.subplot", "numpy.arange", "numpy.cos", "matplotlib.pyplot.plot", "matplotlib.pyplot.annotate", "matplotlib.pyplot.ylim", "numpy.cos", "numpy.exp", "numpy.cos", "numpy.random.randn"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CHARLESYAN1@Python101/Week8/sample_code.ipynb": {"API": [[], [], [], [], ["matplotlib.dates.datestr2num"], ["matplotlib.dates.num2date", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.title", "matplotlib.pyplot.savefig", "matplotlib.dates.datestr2num", "matplotlib.dates.datestr2num.append"], [], ["math.sqrt", "math.floor", "math.ceil", "math.log", "math.log2", "math.log10", "math.pow"], [], [], "requests.get", "os.path.exists", "os.mkdir", "scrapy.Selector", "os.path.exists", "os.mkdir", "os.system", "time.sleep", "scrapy.Selector"], "module": ["matplotlib", "pandas_datareader", "pandas", "scrapy", "numpy", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/luciamelby@ames_housing/Ames_House_SalePrice_Prediction_Model.ipynb": {"API": [], "module": ["matplotlib", "pandas", "scipy", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jpham1991@PyberHW/Pyber_Fares_Types.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/social-physics@netflix/data/netflix.ipynb": {"API": [[], [], [], ["os.environ.setdefault", "django.core.management.execute_from_command_line"], ["django.conf.urls.url", "django.conf.urls.url", "django.conf.urls.url", "django.conf.urls.include", "django.conf.urls.include", "django.conf.urls.include"], ["os.environ.setdefault", "django.core.wsgi.get_wsgi_application"], [], ["os.path.dirname", "os.path.dirname", "os.path.join", "os.path.dirname", "os.path.abspath", "os.path.abspath", "os.path.join", "os.path.join"], ["models.Movie.objects.order_by", "django.shortcuts.render"], ["django.conf.urls.url", "django.conf.urls.url"], ["django.contrib.admin.site.register", "django.contrib.admin.site.register"], [], [], ["django.db.models.AutoField", "django.db.models.CharField", "django.db.models.FloatField", "django.db.models.IntegerField", "django.db.models.IntegerField", "django.db.models.IntegerField"], ["django.db.migrations.CreateModel", "django.db.models.AutoField", "django.db.models.IntegerField", "django.db.models.IntegerField"], ["django.db.migrations.AddField", "django.db.models.FloatField"], ["django.db.migrations.AlterField", "django.db.models.CharField"], ["django.db.migrations.RemoveField"], [], ["django.db.migrations.RenameField", "django.db.migrations.AddField", "django.db.migrations.AlterField", "django.db.models.CharField", "django.db.models.CharField"], ["django.db.migrations.RenameField", "django.db.migrations.RenameField"], ["django.db.migrations.RemoveField", "django.db.migrations.AlterField", "django.db.models.AutoField"], ["django.db.migrations.AlterField", "django.db.models.FloatField"], ["django.db.migrations.RenameField", "django.db.migrations.RenameField"], ["django.db.migrations.AlterField", "django.db.models.ForeignKey"], ["django.db.migrations.AlterField", "django.db.models.IntegerField"], ["django.db.migrations.CreateModel", "django.db.models.AutoField", "django.db.models.IntegerField", "django.db.models.IntegerField", "django.db.models.ForeignKey"], ["django.db.migrations.AlterField", "django.db.models.IntegerField"]], "module": ["django"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Salil999@IL-population-property-comparison/Predict.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ashlesh688@BTC-markets/BTC markets.ipynb": {"API": [], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dspp-gwu@assignment-01-kelseywilson/lesson_02.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "geopandas", "shapely"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/epreble@random_triangular_distribution_issue/Random Triangular Distribution Issue.ipynb": {"API": ["matplotlib.pyplot.hist", "matplotlib.pyplot.show", "matplotlib.pyplot.hist", "matplotlib.pyplot.show", "matplotlib.pyplot.hist", "matplotlib.pyplot.show", "matplotlib.pyplot.hist", "matplotlib.pyplot.show", "matplotlib.pyplot.hist", "matplotlib.pyplot.show", "matplotlib.pyplot.hist", "matplotlib.pyplot.show", "random.triangular", "random.triangular", "random.triangular", "random.triangular", "random.triangular", "random.triangular"], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hainguyenau@college_salaries/Analysis.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kojoidrissa@pyohio_2017/pyohio-2017.ipynb": {"API": [], "module": ["openpyxl"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hadi-gharibi@GOT-EDA/notebook/EDA.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rudrabasu@Test/TicTacToe.ipynb": {"API": [], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/maestrojeong@cs294/digression/digression.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/olaoluthomas@WSDM_kkbox_DQM/data_discovery.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mrahtz@distributed_tensorflow_gentle_introduction/Distributed TensorFlow - A Gentle Introduction.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Novobura@2016-Election-Analysis/2017 French Presidential Elections.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/joetorreny@Week12Assignment/WebAPIAssigment.ipynb": {"API": [], "module": ["matplotlib", "requests", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chihhuiho@Rnn_practice/04_rnn-long-char.ipynb": {"API": [["numpy.zeros", "numpy.zeros", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn", "numpy.copy", "numpy.zeros_like", "numpy.zeros", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros", "numpy.tanh", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.copy", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.clip", "numpy.tanh", "numpy.random.choice", "numpy.zeros", "numpy.log", "numpy.zeros", "numpy.dot", "numpy.exp", "numpy.sum", "numpy.log", "numpy.dot", "numpy.dot", "numpy.exp", "numpy.sum", "numpy.sqrt", "numpy.exp", "numpy.exp", "numpy.exp.ravel", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot"], ["numpy.zeros", "numpy.zeros", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn", "numpy.copy", "numpy.copy", "numpy.zeros", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros", "numpy.tanh", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.copy", "numpy.dot", "numpy.hstack", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.clip", "numpy.tanh", "numpy.random.choice", "numpy.zeros", "numpy.log", "numpy.zeros", "numpy.zeros", "numpy.exp", "numpy.tanh", "numpy.dot", "numpy.exp", "numpy.sum", "numpy.log", "numpy.dot", "numpy.tanh", "numpy.tanh", "numpy.dot", "numpy.exp", "numpy.sum", "numpy.sqrt", "numpy.dot", "numpy.dot", "numpy.exp", "numpy.tanh.ravel", "numpy.dot", "numpy.dot", "numpy.exp", "numpy.exp.ravel", "numpy.tanh", "numpy.tanh", "numpy.tanh", "numpy.tanh"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.argmax", "tensorflow.ConfigProto", "tensorflow.Variable", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.split", "tensorflow.contrib.rnn.BasicRNNCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.global_variables_initializer.run", "tensorflow.random_normal", "tensorflow.train.RMSPropOptimizer", "numpy.arange", "numpy.random.shuffle", "tensorflow.matmul", "tensorflow.global_variables_initializer", "numpy.mean", "numpy.argmax"], ["numpy.random.randn", "numpy.random.randn", "numpy.random.randn", "numpy.zeros", "numpy.zeros", "numpy.copy", "numpy.zeros_like", "numpy.zeros", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros", "numpy.dot", "numpy.dot", "numpy.tanh", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.copy", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.hstack", "numpy.hstack", "numpy.dot", "numpy.dot", "numpy.clip", "numpy.dot", "numpy.dot", "numpy.tanh", "numpy.random.choice", "numpy.zeros", "numpy.log", "numpy.zeros", "numpy.exp", "numpy.dot", "numpy.exp", "numpy.sum", "numpy.log", "numpy.dot", "numpy.diag", "numpy.diag", "numpy.dot", "numpy.exp", "numpy.sum", "numpy.sqrt", "numpy.exp", "numpy.diag", "numpy.diag", "numpy.dot.ravel", "numpy.dot.ravel", "numpy.tanh.ravel", "numpy.dot.ravel", "numpy.dot.ravel", "numpy.exp", "numpy.exp.ravel", "numpy.tanh", "numpy.tanh", "numpy.tanh", "numpy.tanh"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tainarasm@F-sica_do_Movimento/APS - P\u00eandulo Simples.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vijeth8@Marketing-Analysis-using-Markov-Chain-Models/markov_models (1).ipynb": {"API": [], "module": ["seaborn", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vramdhanie@datasciencesamples/Data_Cleaning.ipynb": {"API": ["pandas.read_csv", "pandas.merge.head", "pandas.merge.rename", "pandas.merge.tail", "pandas.DataFrame", "pandas.DataFrame", "pandas.merge", "pandas.merge", "pandas.merge.tail", "pandas.merge.unique", "re.findall", "pandas.merge.apply", "pandas.merge.apply"], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/xumm94@python_note/Tensorflow\u5b9e\u6218/ch6/convolutional&pooling_layer.ipynb": {"API": [[], ["tensorflow.get_variable", "tensorflow.add_to_collection", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.nn.relu", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.truncated_normal_initializer", "tensorflow.matmul", "tensorflow.constant_initializer", "tensorflow.matmul", "tensorflow.constant_initializer"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mhassell@zillow/zillow_start.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lucaslealvale@Ciencia_dos_dados_lucas_leal/Projeto1 Layout.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fairfield-university-is505-fall2017@health-stats-part-2-danielle-ezzo/HealthStatsPart1.ipynb": {"API": ["IPython.display.display", "IPython.display.HTML"], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lionfish0@bee/TestAlignment.ipynb": {"API": [[], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AnandVishnu@PythonForFinance/Newton method.ipynb": {"API": [["time.time", "matplotlib.pyplot.plot", "matplotlib.pyplot.grid", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.hist", "matplotlib.pyplot.grid", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.hist", "matplotlib.pyplot.grid", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.ylim", "time.time", "math.exp", "math.sqrt"], ["pandas.DataFrame", "pandas.DataFrame.dropna"], ["numpy.random.seed", "time.time", "numpy.zeros", "numpy.random.standard_normal", "time.time", "numpy.exp", "math.exp", "numpy.sum", "numpy.maximum", "math.sqrt"], ["numpy.random.randn", "numpy.where"], ["random.seed", "time.time", "time.time", "math.exp", "random.gauss", "math.exp", "math.sqrt"], ["math.sqrt", "math.log", "math.sqrt", "math.log", "math.sqrt", "scipy.stats.norm.cdf", "scipy.stats.norm.cdf", "math.log", "math.sqrt", "scipy.stats.norm.cdf", "math.exp"], ["datetime.datetime.pct_change", "seaborn.heatmap", "pandas.io.data.get_data_yahoo", "pandas.io.data.get_data_yahoo", "datetime.datetime", "datetime.datetime", "datetime.datetime", "datetime.datetime"]], "module": ["matplotlib", "scipy", "pandas", "statsmodels", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/YijiaLing@intro-data-capstone-biodiversity/folder/biodiversity.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/davidbp@learn_julia/julia_basics.ipynb": {"API": [["numpy.random.rand", "time.time", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.random.randn", "numpy.exp", "time.time", "numpy.random.rand", "numpy.random.rand", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot"], ["numpy.random.rand", "time.time", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.random.randn", "numpy.exp", "time.time", "numpy.random.rand", "numpy.random.rand", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot"], ["networkx.barabasi_albert_graph", "networkx.barabasi_albert_graph.adjacency_list", "json.dump"], ["time.time", "json.load", "time.time"], ["time.time", "random.random", "random.random", "time.time"], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "networkx.barabasi_albert_graph", "networkx.barabasi_albert_graph.adjacency", "json.dump"], ["networkx.barabasi_albert_graph", "pandas.DataFrame", "pandas.DataFrame.to_csv", "time.time", "time.time", "networkx.barabasi_albert_graph.adjacency", "numpy.int8"]], "module": ["networkx", "numpy", "matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kadensungbincho@Conference/Talks/image_processing_with_deep_learning/deep_learning_para_el_procesado_de_imagenes.ipynb": {"API": [["matplotlib.pyplot.figure", "matplotlib.gridspec.GridSpec", "matplotlib.pyplot.show", "keras.datasets.mnist.load_data", "keras.utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.layers.Dense", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.imshow", "matplotlib.pyplot.subplot.set_xticks", "matplotlib.pyplot.subplot.set_yticks", "keras.optimizers.RMSprop"]], "module": ["keras", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CMDJahangir@notes-master/Intro to Data Project Section.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wagonhelm@NaNmnist/NaNmnist.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gchevrot@R/Analysis_R.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MITESHPUTHRANNEU@NYC-Vehicle-Collision-Analysis/Analysis Files/Analysis 1.ipynb": {"API": [], "module": ["pandas", "seaborn", "matplotlib", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Bobojambo@K-means/kmeans.py.ipynb": {"API": [["numpy.loadtxt", "numpy.linalg.norm", "matplotlib.pyplot.subplots", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.random.randint", "numpy.zeros", "numpy.argmin", "numpy.mean", "matplotlib.pyplot.pause"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Aschwins@200problems/regex/remove_parenthesis.ipynb": {"API": [], "module": ["matplotlib", "pandas_datareader", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/johntwk@Applied-Social-Network-Analysis-in-Python/Assignment 1/Assignment+1.ipynb": {"API": [], "module": ["networkx", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/smalgireddy@tensor-flow-examples/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AbdullahAlrhmoun@Route-planner/project_notebook.ipynb": {"API": [["plotly.offline.init_notebook_mode", "networkx.get_node_attributes", "pickle.load.edges", "pickle.load.nodes", "plotly.offline.iplot", "networkx.get_node_attributes", "pickle.load", "pickle.load.adjacency_list", "pickle.dump", "pickle.load.nodes"], ["queue.PriorityQueue", "queue.PriorityQueue.put", "math.sqrt", "queue.PriorityQueue.empty", "queue.PriorityQueue.get", "queue.PriorityQueue.put"], ["helpers.load_map"]], "module": ["networkx", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SophiaGoldberg@Neural-Network-MNIST/NN_MNIST.ipynb": {"API": [], "module": ["keras"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gabrielkerr@machine-learning/boston_housing.ipynb": {"API": [[], [], [], ["environment.Environment", "environment.Environment.create_agent", "environment.Environment.set_primary_agent", "simulator.Simulator", "simulator.Simulator.run", "planner.RoutePlanner", "numpy.argmax"], ["random.choice"], []], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/j500@RA/firstTry.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/denguo@MNIST-autoencoder/mnist_autoencoder.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/scollins83@kaggle_zillow_zestimate/ZC_EDA.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/arlose@pyUSStockReader/USStock.ipynb": {"API": ["datetime.datetime", "datetime.date.today", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas.DataFrame", "pandas.DataFrame.apply", "pandas_datareader.data.DataReader", "pandas.DataFrame", "pandas.DataFrame.apply", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas.DataFrame", "pandas.DataFrame.apply", "pandas_datareader.data.DataReader", "pandas.DataFrame", "pandas.DataFrame.apply", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas.DataFrame", "pandas.DataFrame.apply", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas_datareader.data.DataReader", "pandas.DataFrame", "pandas.DataFrame.apply", "pandas_datareader.data.DataReader", "pandas.DataFrame", "pandas.DataFrame.apply", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.date_range"], "module": ["matplotlib", "pandas_datareader", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/catherinekuhn@CloudtoStreet/GIEMS.ipynb": {"API": [], "module": ["matplotlib", "xarray", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/senderle@lsystem-notebook/LSystems.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/BernhardSchlegel@CarND-Notes/Lecture8-Notes.ipynb": {"API": ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "tensorflow.random_normal.get_shape"], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Kellyliuyang@stock-market-analysis/Stock Market Data Analysis Project.ipynb": {"API": [], "module": ["matplotlib", "pandas_datareader", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/andreacremese@DSMIch/Assignment 2.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CommodityTradingEUR@Code/forecast_model_1.ipynb": {"API": [], "module": ["matplotlib", "pandas_datareader", "pandas", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rafaelmarzolla@Ciencia-dos-Dados/Miniprojeto3.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/adarsh66@tennis_players_gender_classification/tennis_player_gender_classification.ipynb": {"API": [], "module": ["matplotlib", "pandas", "keras", "scipy", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CFDBrasil@VolumesFinitos/BuckleyGudnovMethod.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dataninja-python@central-limit/Central_Limit.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/TigranEngibaryan@tumo/ ;).ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/GSA@training-pathway-data-practitioner/codealong-sessions-Oct2017/codealong-data-viz/DataVisualization-Notebook-Python.ipynb": {"API": [["seaborn.load_dataset", "seaborn.load_dataset.describe", "pandas.read_csv", "pandas.melt", "pandas.read_csv", "pandas.melt", "seaborn.pairplot", "matplotlib.pyplot.figure", "seaborn.swarmplot", "pandas.read_csv", "pandas.read_csv.pivot", "seaborn.load_dataset.groupby", "seaborn.load_dataset.groupby", "seaborn.load_dataset.groupby", "seaborn.load_dataset.groupby", "seaborn.load_dataset.groupby"], ["matplotlib.style.use", "seaborn.load_dataset", "seaborn.load_dataset.head", "seaborn.load_dataset", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.plot", "seaborn.pairplot", "seaborn.pairplot", "seaborn.pairplot", "seaborn.pairplot", "seaborn.pairplot", "seaborn.pairplot", "seaborn.boxplot", "seaborn.boxplot", "seaborn.boxplot", "seaborn.boxplot", "seaborn.boxplot", "seaborn.swarmplot", "seaborn.boxplot", "seaborn.factorplot", "seaborn.pairplot", "seaborn.jointplot", "seaborn.jointplot", "seaborn.regplot", "seaborn.regplot", "matplotlib.pyplot.scatter", "seaborn.regplot", "seaborn.regplot", "seaborn.color_palette", "seaborn.palplot", "seaborn.pairplot", "seaborn.pairplot", "seaborn.pairplot", "seaborn.pairplot", "seaborn.pairplot", "seaborn.pairplot", "seaborn.stripplot", "seaborn.stripplot", "seaborn.stripplot", "seaborn.swarmplot", "seaborn.violinplot", "seaborn.violinplot", "seaborn.violinplot", "seaborn.violinplot", "seaborn.stripplot", "seaborn.jointplot", "seaborn.jointplot", "seaborn.jointplot", "seaborn.jointplot", "matplotlib.pyplot.colorbar", "seaborn.boxplot", "seaborn.boxplot", "seaborn.boxplot", "seaborn.boxplot", "seaborn.boxplot", "seaborn.lmplot", "seaborn.residplot", "seaborn.lmplot", "seaborn.regplot", "seaborn.regplot", "seaborn.regplot", "seaborn.regplot", "matplotlib.pyplot.plot", "seaborn.regplot", "seaborn.regplot", "seaborn.regplot", "seaborn.lmplot", "seaborn.lmplot", "matplotlib.pyplot.subplot", "seaborn.stripplot", "matplotlib.pyplot.subplot", "seaborn.stripplot", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "seaborn.stripplot", "matplotlib.pyplot.subplot", "seaborn.stripplot", "matplotlib.pyplot.subplot", "seaborn.violinplot", "matplotlib.pyplot.subplot", "seaborn.violinplot", "seaborn.violinplot", "seaborn.stripplot", "numpy.array", "matplotlib.pyplot.pcolor", "numpy.array", "matplotlib.pyplot.pcolor", "matplotlib.pyplot.colorbar", "numpy.array", "matplotlib.pyplot.pcolor", "numpy.array", "matplotlib.pyplot.pcolor", "numpy.linspace", "numpy.linspace", "numpy.meshgrid", "matplotlib.pyplot.pcolor", "matplotlib.pyplot.colorbar", "matplotlib.pyplot.contour", "matplotlib.pyplot.colorbar", "matplotlib.pyplot.contour", "matplotlib.pyplot.colorbar", "matplotlib.pyplot.contourf", "matplotlib.pyplot.colorbar", "numpy.linspace", "numpy.linspace", "numpy.meshgrid", "numpy.sin", "matplotlib.pyplot.set_cmap", "matplotlib.pyplot.pcolor", "matplotlib.pyplot.set_cmap", "matplotlib.pyplot.contour", "matplotlib.pyplot.hist2d", "matplotlib.pyplot.colorbar", "matplotlib.pyplot.hexbin", "matplotlib.pyplot.colorbar", "seaborn.load_dataset.cov", "matplotlib.pyplot.figure", "seaborn.heatmap", "seaborn.load_dataset.cov", "matplotlib.pyplot.figure", "seaborn.heatmap", "seaborn.load_dataset.corr", "matplotlib.pyplot.figure", "seaborn.heatmap", "seaborn.load_dataset.corr", "matplotlib.pyplot.figure", "seaborn.heatmap", "numpy.sqrt"], ["pandas.read_csv", "numpy.genfromtxt", "matplotlib.pyplot.hist", "matplotlib.pyplot.hist", "matplotlib.pyplot.hist", "seaborn.set", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "seaborn.swarmplot", "matplotlib.pyplot.plot", "pandas.read_csv.as_matrix", "numpy.sort", "numpy.arange"], ["matplotlib.pyplot.rcdefaults", "pandas.ExcelFile", "pandas.DataFrame", "pandas.Series", "pandas.crosstab", "pandas.crosstab", "pandas.crosstab", "seaborn.countplot", "seaborn.countplot", "seaborn.distplot", "seaborn.boxplot", "pandas.ExcelFile.parse", "calendar.timegm", "datetime.datetime.datetime.strptime", "datetime.datetime.datetime.strptime"]], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dkw9113@CCE_decoherence/testing_armadillo_cce-2.ipynb": {"API": [], "module": ["matplotlib", "ipywidgets", "pandas", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Kamparia@hotel_reviews/Hotels Reviews Data.ipynb": {"API": [], "module": ["matplotlib", "numpy", "plotly", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MsKay2017@sixth-cohort-awesome-nightfive/NightFive_KP.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ssamot@RL_notebook/RL.ipynb": {"API": [["numpy.arange", "numpy.arange", "numpy.array", "matplotlib.pyplot.gca.set_xticklabels", "matplotlib.pyplot.gca.set_yticklabels"], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zacharyclement@thedatahaunt/data/firearms.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cpgeier@DayDream/Model.ipynb": {"API": [], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/binarygu@dada_sql/\u5546\u6237\u753b\u50cf/supplier_distribution.ipynb": {"API": [[], [], [], []], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SCloves@redes_neurais/Descomplicando_Redes_Neurais.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Anaitreb@ExercisingFilesPy/Untitled.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chemecalj@IS362_Assignment4/IS362_Week5_Assignment.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alexottenwess@freethrow_analysis/freethrow_analysis.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JeffreyJosanne@digit_recognizer/Untitled.ipynb": {"API": [["pandas.DataFrame", "pandas.DataFrame.groupby"], ["subprocess.call", "subprocess.call", "subprocess.call", "subprocess.call", "subprocess.call"], [], ["pandas.read_csv", "subprocess.call", "shlex.split"], []], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lifetoolsoft@investment/\ubbf8\uad6d \uc8fc\uac00\ub370\uc774\ud130 \uac00\uc838\uc624\uae30.ipynb": {"API": [], "module": ["pandas", "numpy", "matplotlib", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hiiroo@rosalind-python/Enumerating Gene Orders.ipynb": {"API": [["Bio.SeqIO.parse", "itertools.permutations"]], "module": ["numpy", "Bio"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AnnyNaz@temp/DataRoot University DS100 Test #2_second_try_v2.ipynb": {"API": [], "module": ["matplotlib", "sympy", "scipy", "pandas", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ProfFan@DSP-Homeworks-2015/Homework 2.ipynb": {"API": [], "module": ["matplotlib", "sympy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/adrn@talks/Comoving stars/Talk figures.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "astropy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AIDreamer@DIPSelfDrivingCar/Resize_Image_Test.ipynb": {"API": [["os.path.join", "tensorflow.Graph", "utils.load_dataset", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d_transpose", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.nn.self_gradient", "tensorflow.nn.softmax", "os.path.join", "tensorflow.Session", "utils.load_image", "tensorflow.Session", "tensorflow.Session", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.train.Saver", "tensorflow.train.Saver.save", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.data.Dataset.from_tensor_slices", "utils.stack_batch_into_tensor", "tensorflow.global_variables_initializer", "tensorflow.local_variables_initializer", "tensorflow.data.Dataset.from_tensor_slices", "utils.stack_batch_into_tensor", "utils.prep_labels", "tensorflow.nn.softmax_cross_entropy_with_logits_v2", "tensorflow.global_variables_initializer", "tensorflow.local_variables_initializer", "tensorflow.train.GradientDescentOptimizer", "tensorflow.data.Dataset.from_tensor_slices", "utils.stack_batch_into_tensor", "utils.prep_labels", "tensorflow.train.Saver.save"], ["tensorflow.add", "tensorflow.add", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.nn.conv2d", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.nn.conv2d", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.nn.conv2d", "tensorflow.variable_scope", "tensorflow.nn.conv2d_transpose", "tensorflow.variable_scope", "tensorflow.nn.conv2d_transpose", "tensorflow.variable_scope", "tensorflow.nn.conv2d_transpose", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable"], ["tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.read_file", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.Session", "numpy.sort", "tensorflow.data.Dataset.from_tensor_slices", "tensorflow.data.Dataset.from_tensor_slices", "tensorflow.Session", "tensorflow.convert_to_tensor", "tensorflow.expand_dims", "tensorflow.cast", "tensorflow.one_hot", "tensorflow.train.match_filenames_once", "tensorflow.Session", "numpy.sort", "tensorflow.Session", "tensorflow.stack", "tensorflow.stack", "tensorflow.Session", "tensorflow.stack", "tensorflow.cast", "tensorflow.train.match_filenames_once"], [], "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.Session"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/GMillerA@Python-Bootcamp-Udemy-Course/Collatz Conjecture.ipynb": {"API": [["random.randint", "IPython.display.clear_output"]], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/iamnotaprogrammer@python_labs/lab_2_3.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/itsmepiyush2@Twitter-Sentiment-Analysis/Twitter sentiment analysis.ipynb": {"API": ["tweepy.OAuthHandler", "tweepy.OAuthHandler.set_access_token", "tweepy.API", "tweepy.API.search", "textblob.TextBlob"], "module": ["textblob", "tweepy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/darksider92@home_work4.3/h_w4.3.ipynb": {"API": [], "module": ["matplotlib", "requests", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/madhujahagirdar@your-first-neural-network/Your_first_neural_network_Solution.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lukeam2929@Monkey-Learner/score_vis.ipynb": {"API": [[], []], "module": ["matplotlib", "pandas", "scipy", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bobhaffner@chi_pydata_2016_08_26/geopandas.ipynb": {"API": [], "module": ["matplotlib", "shapely", "geopandas", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/miptgirl@clickhouse_usages/retentions.ipynb": {"API": [], "module": ["pandas", "seaborn", "plotly", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aidanematzadeh@naive-bayes/Naive Bayes.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nkkchem@Ostreoccus_cent_simulation/Ostreococcus_centeral_Met.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DimitriWeb@Python/routes.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/xuhaibahmad@ML-Playground/book/housing/Housing.ipynb": {"API": [[], [], [], [], ["pandas.read_csv"], [], "pandas.read_csv"], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/marevab@ANN/ann_test.ipynb": {"API": [["numpy.vectorize", "numpy.vectorize", "math.exp", "math.exp", "math.exp", "math.exp", "math.exp", "math.exp", "math.exp", "math.exp"], [], [], [], ["numpy.zeros", "numpy.max", "numpy.max"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mat-esp-2016@python-4-python-4-lpgler007/python4.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jpdeleon@MRrelation/notebook/compare_mass_estimates.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ykLIU1982@dental/dental_plan_comp.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/FractalFlows@DAOResearch/notebooks/DAO.ipynb": {"API": [], "module": ["matplotlib", "pandas", "scipy", "numpy", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/luqmanhakim@first-neural-network/Your_first_neural_network.ipynb": {"API": [["numpy.random.normal", "numpy.random.normal", "numpy.zeros", "numpy.zeros", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.exp"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/enactdev@plotly-intro-jupyter/03_Waterfowl_by_year_in_Delaware.ipynb": {"API": [], "module": ["plotly", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wardstolk@assignments/Final_Assignment_Python_1_students.ipynb": {"API": [], "module": ["matplotlib", "numpy", "plotly", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Sharp-Data@Analyzing-Movie-Reviews/Analysis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jk-jang@TIL/Languages/Python/tip.ipynb": {"API": [], "module": ["numpy", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JZorrilla@SHP-Modern-Cosmology/7_Structures/How do structures form?-StudentVersion.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "astropy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pickoffwhite@first-python-notebook/Code/first-python-notebook/First Python Notebook.ipynb": {"API": [], "module": ["matplotlib", "ipywidgets", "pandas", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hojen01@INFO1903-Project-Stage-2/INFO1903 Explore your own data.ipynb": {"API": [["pandas.read_csv", "matplotlib.pyplot.subplots", "matplotlib.pyplot.legend", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.title", "matplotlib.pyplot.show"], ["pandas.read_csv", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.gca", "matplotlib.pyplot.title", "numpy.arange", "matplotlib.pyplot.bar", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.gca", "numpy.arange", "matplotlib.pyplot.legend", "matplotlib.pyplot.gca.set_ylim", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.ticker.FixedLocator", "matplotlib.ticker.FixedFormatter", "matplotlib.pyplot.plot", "matplotlib.ticker.FixedLocator", "matplotlib.ticker.FixedFormatter", "numpy.array"], ["pandas.read_csv", "pandas.read_csv.groupby"], ["pandas.read_csv", "numpy.array", "numpy.append", "numpy.where", "matplotlib.pyplot.subplots", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "numpy.sort"], "pandas.read_csv", "matplotlib.pyplot.subplots", "matplotlib.pyplot.gca.pie", "matplotlib.pyplot.legend", "matplotlib.pyplot.gca.axis", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "pandas.read_csv", "numpy.array", "numpy.append", "numpy.where", "matplotlib.pyplot.subplots", "matplotlib.pyplot.gca.pie", "matplotlib.pyplot.gca.axis", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "pandas.read_csv", "pandas.read_csv", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.gca", "matplotlib.pyplot.title", "numpy.arange", "matplotlib.pyplot.bar", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.gca", "numpy.arange", "matplotlib.pyplot.legend", "matplotlib.pyplot.gca.set_ylim", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "numpy.sort", "matplotlib.ticker.FixedLocator", "matplotlib.ticker.FixedFormatter", "matplotlib.pyplot.plot", "matplotlib.ticker.FixedLocator", "matplotlib.ticker.FixedFormatter", "numpy.array"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ayush1999@Image-Recognition/mnist.ipynb": {"API": [], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ChuyuHsu@tensorflow-rnn-practice/rnn_atis.ipynb": {"API": [["tensorflow.Graph.as_default", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.python.ops.rnn_cell.GRUCell", "tensorflow.zeros", "tensorflow.constant", "tensorflow.train.AdamOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.trainable_variables", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.zeros.eval", "tensorflow.reduce_sum", "tensorflow.initialize_all_variables", "tensorflow.Graph", "tensorflow.get_variable_scope.reuse_variables", "tensorflow.get_variable_scope"], ["data.load.atisfull", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.models.rnn.rnn_cell.BasicLSTMCell", "tensorflow.split", "tensorflow.models.rnn.rnn.rnn", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.split", "tensorflow.concat", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.device", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.nn.embedding_lookup", "tensorflow.reshape", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.reshape", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.initialize_all_variables.run", "functools.reduce", "numpy.append", "tensorflow.random_uniform", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "functools.reduce", "numpy.array", "numpy.array", "numpy.array", "scipy.sparse.csr_matrix", "tensorflow.initialize_all_variables", "scipy.sparse.csr_matrix.toarray", "numpy.array", "numpy.array", "numpy.argmax", "numpy.argmax"], ["data.load.atisfull", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.device", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.nn.embedding_lookup", "tensorflow.variable_scope", "tensorflow.nn.rnn_cell.BasicLSTMCell", "tensorflow.variable_scope", "tensorflow.nn.dynamic_rnn", "tensorflow.variable_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reshape", "tensorflow.expand_dims", "tensorflow.tile", "tensorflow.range", "tensorflow.expand_dims", "tensorflow.tile", "tensorflow.less", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.boolean_mask", "tensorflow.boolean_mask", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.initialize_all_variables.run", "functools.reduce", "numpy.append", "tensorflow.random_uniform", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.reshape.get_shape", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.train.GradientDescentOptimizer", "functools.reduce", "numpy.array", "numpy.array", "numpy.array", "scipy.sparse.csr_matrix", "tensorflow.nn.embedding_lookup.get_shape", "tensorflow.initialize_all_variables", "scipy.sparse.csr_matrix.toarray", "numpy.array", "numpy.array", "tensorflow.reshape.get_shape", "numpy.argmax", "numpy.argmax"], ["numpy.random.seed", "tensorflow.random_uniform_initializer", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.models.rnn.rnn_cell.LSTMCell", "tensorflow.models.rnn.rnn_cell.LSTMCell.zero_state", "tensorflow.models.rnn.rnn.rnn", "tensorflow.initialize_all_variables", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.reshape", "tensorflow.split", "numpy.random.rand"], ["data.load.atisfold", "tensorflow.placeholder", "tensorflow.device", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.nn.embedding_lookup", "functools.reduce", "functools.reduce", "tensorflow.random_uniform"], [], ["os.getenv", "urllib.request.urlretrieve", "os.system", "gzip.open", "pickle.load", "pickle.load", "os.path.exists", "os.path.exists", "pdb.set_trace"]], "module": ["numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/khoaipx@Kaggle/titanic/code/titanic-article.ipynb": {"API": [[], ["numpy.round", "pandas.read_csv", "pandas.read_csv", "pandas.DataFrame", "pandas.DataFrame", "numpy.minimum", "numpy.minimum", "numpy.sin", "numpy.cos", "numpy.exp", "numpy.minimum", "numpy.minimum", "numpy.sin", "numpy.minimum", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.tanh", "numpy.sin", "numpy.minimum", "numpy.sin", "numpy.cos", "numpy.cos", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.cos", "numpy.minimum", "numpy.cos", "numpy.sin", "numpy.minimum", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.sin", "numpy.cos", "numpy.minimum", "numpy.tanh", "numpy.sin", "numpy.maximum", "numpy.minimum", "numpy.tanh", "numpy.tanh", "numpy.cos", "numpy.minimum", "numpy.tanh", "numpy.cos", "numpy.maximum", "numpy.tanh", "numpy.cos", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.cos", "numpy.minimum", "numpy.sin", "numpy.minimum", "numpy.tanh", "numpy.tanh", "numpy.minimum", "numpy.cos", "numpy.tanh", "numpy.sin", "numpy.sin", "numpy.maximum", "numpy.maximum", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.cos", "numpy.minimum", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.maximum", "numpy.sin", "numpy.sin", "numpy.minimum", "numpy.minimum", "numpy.cos", "numpy.minimum", "numpy.sin", "numpy.cos", "numpy.cos", "numpy.maximum", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.maximum", "numpy.minimum", "numpy.cos", "numpy.minimum", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.minimum", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.sin", "numpy.minimum", "numpy.sin", "numpy.sin", "numpy.minimum", "numpy.sin", "numpy.minimum", "numpy.sin", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.sin", "numpy.minimum", "numpy.minimum", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.maximum", "numpy.sin", "numpy.cos", "numpy.cos", "numpy.minimum", "numpy.minimum", "numpy.minimum", "numpy.cos", "numpy.sin"], [], [], ["csv.reader", "numpy.array", "numpy.zeros", "csv.reader", "csv.reader.next", "csv.writer", "csv.writer.writerow", "numpy.array.append", "numpy.unique", "numpy.mean", "numpy.mean", "csv.writer.writerow", "csv.writer.writerow", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype"], [], []], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/VrushM@Soccer_dataset/Soccer Dataset.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jonathanwangg@Numpy-Exercises/numpy100.ipynb": {"API": ["numpy.show_config", "numpy.zeros", "numpy.zeros", "numpy.info", "numpy.zeros", "numpy.zeros", "numpy.arange", "numpy.arange", "numpy.flip", "numpy.arange", "numpy.nonzero", "numpy.identity", "numpy.eye", "numpy.random.random", "numpy.random.random_sample", "numpy.random.random", "numpy.amax", "numpy.amin", "numpy.random.random.max", "numpy.random.random.min", "numpy.random.random", "numpy.random.random.mean", "numpy.ones", "numpy.random.random", "numpy.pad", "numpy.zeros", "numpy.arange", "numpy.diag", "numpy.matrix"], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/FJGalliano@Team_Project_1/TProject1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kd-nguyen@Michigan-Data-Science-Specialization/1-Python_data_analysis/Assignment+2.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/conradbm@team_data_science_app/Flask_Bible/bible_query.ipynb": {"API": [], "module": ["flask", "werkzeug"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/davidwjones@Matplotlib_homework/Homework.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ALavault@DL/MP1/MP1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "keras"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NGHS-CSP@space-invader-Dallaslemke/Space Invader Challenge.ipynb": {"API": ["matplotlib.pyplot.imread", "matplotlib.pyplot.subplots"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pipepipexiaji@python-novice-inflammation/mynotes/1-numpy.ipynb": {"API": [["random.randint"], ["numpy.loadtxt", "numpy.loadtxt.mean"], [], ["numpy.loadtxt", "numpy.loadtxt.mean"], [], ["numpy.loadtxt", "numpy.loadtxt.mean"], ["numpy.loadtxt", "numpy.loadtxt.min", "numpy.loadtxt.mean", "numpy.loadtxt.max"], [], ["numpy.loadtxt", "numpy.loadtxt.min", "numpy.loadtxt.mean", "numpy.loadtxt.max"], ["numpy.loadtxt", "numpy.loadtxt.min", "numpy.loadtxt.mean", "numpy.loadtxt.max"], [], [], ["numpy.loadtxt", "numpy.loadtxt.min", "numpy.loadtxt.mean", "numpy.loadtxt.max"], ["numpy.loadtxt", "numpy.loadtxt.min", "numpy.loadtxt.mean", "numpy.loadtxt.max"], [], [], [], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dhruvparamhans@project3a/MC Run.ipynb": {"API": [[], [], [], ["pandas.read_excel", "pandas.read_excel", "numpy.zeros", "numpy.zeros", "collections.OrderedDict", "numpy.asarray", "numpy.asarray", "numpy.zeros", "numpy.size", "numpy.size"], ["numpy.zeros", "pandas.read_excel", "pandas.read_excel", "numpy.asarray"]], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DSE220-Final-Project@DataCleaning/IRI Explore_HW1.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sandberg-lab@Spreading-Correction/Correcting_Spreading_of_Signal_Notebook.ipynb": {"API": [["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "pandas.read_csv", "numpy.bool_", "numpy.bool_", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "matplotlib.pyplot.subplots", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.savefig", "numpy.zeros", "numpy.zeros", "numpy.fill_diagonal", "numpy.fill_diagonal", "pandas.concat", "pandas.concat.to_csv", "numpy.sum", "os.path.splitext", "scipy.stats.hypergeom.sf", "statsmodels.sandbox.stats.multicomp.multipletests", "numpy.sum", "numpy.sum", "numpy.median", "numpy.median", "patsy.dmatrices", "numpy.sum", "numpy.rint", "pandas.DataFrame", "os.path.basename", "numpy.amax", "numpy.append", "numpy.round", "numpy.log10", "pandas.DataFrame", "numpy.round", "numpy.round", "numpy.log10", "numpy.log10", "numpy.sum", "scipy.linalg.solve_sylvester", "numpy.argwhere", "numpy.append", "numpy.append", "numpy.sum", "numpy.sum", "statsmodels.api.OLS", "numpy.apply_along_axis", "numpy.round", "numpy.round", "numpy.array", "numpy.round", "numpy.apply_along_axis", "numpy.sum", "numpy.round", "numpy.round", "numpy.round", "numpy.sum"]], "module": ["patsy", "matplotlib", "scipy", "pandas", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/KennthShang@weight_initialization/weight_initialization.ipynb": {"API": [["matplotlib.pyplot.title", "matplotlib.pyplot.hist", "matplotlib.pyplot.show", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.Session", "numpy.linspace", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "matplotlib.pyplot.plot", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.global_variables_initializer"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/david-sykes@london_property_prices/notebooks/initial_exploration.ipynb": {"API": [], "module": ["numpy", "fuzzywuzzy", "plotly", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/manaswiv@Deep_Symptoms/Scripts/Fortus_Data_Validation.ipynb": {"API": [[], ["glob.glob", "scipy.misc.imread", "numpy.zeros_like", "numpy.savez", "scipy.misc.imread"], [], [], []], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/javiertron@Proyecto-An-lisis/Proyecto/Entrega_2/Problema_LP.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/F0xedb@Tenserflow-Examples/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.group", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.python.ops.resources.initialize_resources", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.python.ops.resources.shared_resources", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DavidDataDeveloperdotcom@ClusteringDataMiningExample/NearestNeighborModel.ipynb": {"API": [], "module": ["numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/murchie85@Project-1-BikeProject-Udacity/Your_first_neural_network.ipynb": {"API": [["pandas.read_csv", "pandas.concat.drop", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "unittest.TestLoader.loadTestsFromModule", "unittest.TextTestRunner.run", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.ylim", "matplotlib.pyplot.subplots", "pandas.to_datetime", "pandas.concat.head", "pandas.concat.plot", "pandas.get_dummies", "pandas.concat", "numpy.mean", "numpy.random.choice", "sys.stdout.write", "sys.stdout.flush", "numpy.random.normal", "numpy.random.normal", "numpy.zeros", "numpy.zeros", "numpy.dot", "numpy.dot", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "unittest.TestLoader", "unittest.TextTestRunner", "numpy.arange", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.matrix", "numpy.matrix", "numpy.matrix", "numpy.matrix", "numpy.all", "numpy.allclose", "numpy.allclose", "numpy.allclose", "numpy.array", "numpy.array", "numpy.exp", "numpy.exp"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/numanyilmaz@EVs/EV.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Vasuji@signal-processing/5filtering.ipynb": {"API": [], "module": ["matplotlib", "ipywidgets", "scipy", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/RicardoFrank@Accolade/HAC Calls Chord Diagram.ipynb": {"API": [], "module": ["IPython", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dietrannies@udacity_dand_p1/dand_dieter_annys_p1_test_a_perceptual_phenomenon.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/guesschess@Introduction_to_Pandas/assignment.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AhirtonL@Support-Vector-Machines-Demo/[Jos\u00e9 Ahirton Lopes] SVM Demo.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Loricanal@DeepLearning/mnist_fully_connected/TP1-notebook.ipynb": {"API": [["numpy.tanh", "numpy.exp"], ["numpy.ones", "numpy.ones", "numpy.ones", "numpy.random.normal", "numpy.append", "numpy.append", "time.time", "numpy.argmax", "numpy.random.uniform", "numpy.sqrt", "numpy.outer", "numpy.outer", "numpy.sum", "numpy.random.shuffle", "numpy.argmax", "numpy.argmax", "time.time"], ["numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.random.normal", "numpy.append", "numpy.append", "numpy.append", "time.time", "numpy.random.uniform", "numpy.sqrt", "numpy.random.uniform", "numpy.sqrt", "numpy.outer", "numpy.outer", "numpy.outer", "numpy.sum", "numpy.random.shuffle", "numpy.argmax", "numpy.argmax", "time.time"], ["numpy.random.seed", "matplotlib.pyplot.plot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "gzip.open", "pickle.load", "numpy.arange", "numpy.arange", "numpy.arange"]], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lrojas12@lstm-sentence-generator/src/notebooks/predict.ipynb": {"API": [["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "helper.load_file", "numpy.zeros", "numpy.zeros", "keras.optimizers.RMSprop", "helper.create_model", "helper.create_model.compile", "helper.create_model.evaluate", "helper.create_model.fit", "random.randint", "helper.create_model.save_weights", "numpy.zeros", "helper.add_temperature", "re.match", "sys.stdout.flush", "os.path.exists", "os.makedirs", "helper.create_model.predict", "sys.stdout.write", "sys.stdout.write"], ["re.compile", "re.findall", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "numpy.exp", "numpy.random.multinomial", "numpy.argmax", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.layers.Dense", "keras.layers.Activation", "numpy.log", "numpy.sum", "keras.layers.LSTM", "keras.layers.Dropout", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "numpy.asarray", "keras.layers.LSTM", "keras.layers.Dropout", "keras.layers.LSTM", "keras.layers.Dropout", "keras.layers.LSTM", "keras.layers.Dropout", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.layers.LSTM", "keras.layers.Dropout"], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "helper.load_file", "keras.optimizers.RMSprop", "helper.create_model", "helper.create_model.compile", "helper.create_model.load_weights", "helper.create_model.compile", "random.sample", "random.shuffle", "re.compile", "re.findall", "numpy.random.randint", "numpy.zeros", "helper.add_temperature", "re.match", "sys.stdout.flush", "helper.create_model.predict", "sys.stdout.write", "sys.stdout.write"]], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Dennitz@RockPaperScissorsLizardSpock.js/model-training/rock-paper-scissors-lizard-spock.ipynb": {"API": [["os.path.expanduser", "tensorflow.train.NewCheckpointReader", "tensorflow.train.NewCheckpointReader.get_variable_to_shape_map", "os.path.expanduser", "tensorflow.gfile.MakeDirs", "re.compile", "os.path.join", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "tensorflow.train.NewCheckpointReader.get_tensor", "json.dumps", "re.match", "os.path.join"], ["os.listdir", "os.listdir", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.rename", "os.listdir", "os.listdir", "re.findall", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "re.sub", "os.rename", "os.path.join", "os.path.join"]], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alex-ht@SOFM_nb/ART1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "keras", "tqdm"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MohammadrezaAzimi@Temperature-Forcasting-LSTM/temperature-forecasting using LSTM .ipynb": {"API": [], "module": ["matplotlib", "numpy", "keras"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/austinsherron@cs178-project/Untitled.ipynb": {"API": [["numpy.zeros", "numpy.zeros", "numpy.unique", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.reshape", "numpy.linalg.svd", "numpy.divide", "numpy.mean", "numpy.mean", "numpy.cov", "numpy.linalg.svd", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.divide", "numpy.atleast_2d", "numpy.mean", "numpy.cov", "numpy.reshape", "numpy.sqrt", "numpy.atleast_2d", "numpy.asarray", "numpy.power", "numpy.zeros", "numpy.atleast_2d", "numpy.zeros", "numpy.zeros", "numpy.atleast_2d", "numpy.random.randn", "numpy.atleast_2d", "numpy.random.permutation", "numpy.atleast_2d", "numpy.linalg.svd", "numpy.diag", "numpy.zeros", "numpy.sqrt", "numpy.diag", "numpy.zeros", "numpy.sqrt", "numpy.floor", "numpy.random.randn.astype", "numpy.random.randn.astype", "numpy.where", "numpy.sqrt", "numpy.atleast_2d", "numpy.tile", "numpy.tile", "numpy.unravel_index", "numpy.unravel_index", "numpy.prod", "numpy.power", "numpy.sqrt", "numpy.zeros", "numpy.var", "numpy.floor", "numpy.var", "numpy.random.randn", "numpy.random.randn", "numpy.sin", "numpy.sqrt", "numpy.atleast_2d", "numpy.isnan", "numpy.sqrt", "numpy.random.rand", "numpy.atleast_2d", "numpy.exp", "numpy.mean", "numpy.median", "numpy.mean", "numpy.sum", "numpy.mean", "numpy.argwhere", "numpy.argwhere", "numpy.diag", "numpy.random.rand", "numpy.isnan", "numpy.isnan", "numpy.sum", "numpy.isnan", "numpy.isnan", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.isnan", "numpy.isnan", "numpy.isnan", "numpy.linalg.inv", "numpy.ix_", "numpy.ix_"], ["numpy.asarray", "numpy.asarray", "numpy.eye", "numpy.eye", "numpy.dot", "numpy.dot", "numpy.ones", "numpy.row_stack", "numpy.concatenate", "numpy.zeros", "numpy.cumsum", "numpy.random.rand", "scipy.linalg.sqrtm", "numpy.random.rand", "numpy.ones", "numpy.random.randn.astype", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "numpy.zeros", "numpy.zeros", "matplotlib.pyplot.show", "numpy.any", "numpy.any", "numpy.random.randn", "scipy.linalg.sqrtm", "numpy.ones", "numpy.ones", "numpy.random.randn", "scipy.linalg.sqrtm", "numpy.ones", "numpy.sum", "numpy.asmatrix", "numpy.asmatrix", "numpy.random.rand", "numpy.asarray", "numpy.zeros.resize", "numpy.zeros.resize", "numpy.atleast_2d", "numpy.eye", "numpy.random.randn", "scipy.linalg.sqrtm", "numpy.asarray", "numpy.sqrt", "numpy.random.randn", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.asarray", "numpy.asarray", "numpy.asmatrix", "numpy.asmatrix", "numpy.random.rand", "numpy.random.rand", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.eye", "numpy.random.randn", "numpy.log", "numpy.sum", "numpy.log"], ["numpy.hstack", "numpy.asarray", "utils.to1ofK", "numpy.asarray.append", "numpy.asarray", "numpy.asarray", "numpy.asarray.append", "numpy.ones", "numpy.tanh", "numpy.hstack", "numpy.unique", "numpy.asmatrix", "utils.to1ofK", "numpy.asarray", "numpy.asarray.append", "numpy.tanh", "numpy.asarray", "numpy.asarray", "numpy.asarray.append", "numpy.exp", "numpy.unique", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.asarray", "numpy.tanh", "numpy.exp", "numpy.atleast_2d", "numpy.asarray", "utils.from1ofK", "numpy.multiply", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.zeros", "numpy.tanh", "numpy.atleast_2d", "numpy.asarray", "numpy.multiply", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.exp", "numpy.asarray", "numpy.abs", "numpy.power", "numpy.tanh", "numpy.asarray", "numpy.abs", "numpy.tanh", "numpy.zeros", "numpy.exp", "numpy.power", "numpy.random.randn", "numpy.exp", "numpy.power", "numpy.random.randn", "numpy.tanh", "numpy.tanh"], ["numpy.linspace", "numpy.linspace", "numpy.meshgrid", "numpy.column_stack", "matplotlib.pyplot.cm.get_cmap", "numpy.unique", "numpy.unique", "numpy.histogram", "numpy.zeros", "matplotlib.pyplot.cm.get_cmap", "matplotlib.pyplot.subplots", "numpy.linspace", "numpy.array", "matplotlib.pyplot.plot", "numpy.histogram", "numpy.ones", "numpy.atleast_2d", "numpy.meshgrid.flatten", "numpy.meshgrid.flatten", "numpy.argsort", "numpy.sin", "numpy.cos", "scipy.linalg.sqrtm", "numpy.atleast_2d", "numpy.log10"], ["numpy.divide", "numpy.zeros", "numpy.sum", "numpy.zeros", "numpy.linalg.inv", "numpy.sum", "numpy.unique", "numpy.zeros", "numpy.zeros", "numpy.sum", "numpy.tile", "numpy.exp", "numpy.where", "numpy.diag", "numpy.linalg.det", "numpy.diag", "numpy.sum", "numpy.sum", "numpy.dot", "numpy.asmatrix", "numpy.asmatrix", "numpy.asmatrix", "numpy.asmatrix", "numpy.asmatrix", "numpy.asmatrix", "numpy.asmatrix", "numpy.asmatrix"], ["numpy.concatenate", "numpy.asarray", "numpy.asmatrix", "numpy.asmatrix", "numpy.ones", "numpy.asmatrix", "numpy.linalg.inv", "numpy.linalg.lstsq", "numpy.eye"], ["numpy.array", "numpy.unique", "numpy.hstack", "utils.toIndex", "numpy.atleast_2d", "numpy.asarray", "numpy.asarray", "numpy.random.randn", "numpy.ones"], [], ["numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.permutation", "numpy.zeros", "numpy.mean", "numpy.cumsum", "numpy.arange", "numpy.arange", "numpy.cumsum", "numpy.nanargmin", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "utils.toIndex", "numpy.asarray", "numpy.random.permutation", "numpy.zeros", "numpy.asmatrix", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.asmatrix", "numpy.argsort", "numpy.append", "numpy.logical_not", "numpy.power", "numpy.asarray", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.asmatrix", "numpy.all", "numpy.sum", "numpy.argmax", "numpy.arange", "numpy.argsort", "numpy.append", "numpy.dot", "numpy.max", "numpy.argmax", "numpy.sum", "numpy.max", "numpy.argmax", "numpy.logical_not", "numpy.var", "numpy.asarray", "numpy.any", "numpy.unique", "utils.to1ofK", "numpy.asarray", "numpy.any", "numpy.sum", "numpy.sum", "utils.to1ofK", "numpy.asarray", "numpy.logical_not", "numpy.power", "numpy.power", "numpy.ravel", "numpy.asarray", "numpy.cumsum", "numpy.log", "numpy.logical_not", "numpy.sort", "numpy.logical_not", "numpy.sort", "utils.to1ofK", "numpy.log", "numpy.log", "numpy.spacing", "numpy.spacing", "numpy.logical_not", "numpy.spacing", "numpy.spacing", "numpy.spacing"], ["numpy.zeros", "numpy.zeros", "numpy.asarray", "numpy.ones", "numpy.asarray", "numpy.unique", "numpy.zeros", "numpy.zeros", "utils.from1ofK", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.minimum", "numpy.atleast_2d", "numpy.zeros", "numpy.zeros", "numpy.ones", "numpy.atleast_2d", "numpy.eye", "numpy.ones", "numpy.exp.max", "numpy.tile", "numpy.exp", "numpy.exp.sum", "numpy.sum", "numpy.tile", "numpy.exp.sum", "numpy.random.permutation", "numpy.sum", "numpy.min", "numpy.argmin", "numpy.any", "numpy.sum", "numpy.argmax", "numpy.cumsum", "numpy.sum", "numpy.min", "numpy.argmin", "numpy.unravel_index", "numpy.asarray", "numpy.random.permutation", "numpy.log", "numpy.mean", "numpy.floor", "numpy.power", "numpy.array", "numpy.sum", "numpy.power", "numpy.where", "numpy.min", "numpy.argmin", "numpy.tile", "numpy.atleast_2d", "numpy.log", "numpy.atleast_2d", "numpy.tile", "numpy.abs", "numpy.where", "numpy.power", "numpy.log", "numpy.eye", "numpy.atleast_2d", "numpy.random.rand", "numpy.tile", "numpy.ones", "numpy.random.rand", "numpy.sum", "numpy.log", "numpy.floor", "numpy.ones", "numpy.linalg.det", "numpy.random.rand", "numpy.tile.dot", "numpy.atleast_2d", "numpy.linalg.inv"], ["numpy.argmax", "numpy.asarray", "numpy.asmatrix", "numpy.asmatrix", "numpy.mean", "numpy.asmatrix", "numpy.sum", "utils.toIndex", "numpy.argsort", "numpy.hstack", "numpy.reshape", "numpy.transpose", "numpy.sum", "numpy.sum", "numpy.sort", "numpy.argsort", "numpy.divide", "numpy.divide", "numpy.append", "numpy.append", "numpy.append", "numpy.append", "numpy.mean", "numpy.mean", "numpy.sqrt", "numpy.mean", "numpy.atleast_2d", "utils.toIndex", "numpy.histogram", "numpy.atleast_2d", "numpy.cumsum", "numpy.cumsum", "numpy.divide", "numpy.asarray", "numpy.absolute", "numpy.log", "numpy.diff", "numpy.argwhere", "numpy.asarray", "numpy.cumsum", "numpy.ravel", "numpy.cumsum", "numpy.sum", "utils.toIndex", "numpy.logical_not", "numpy.logical_not", "numpy.logical_not"], ["numpy.array", "numpy.array", "numpy.random.permutation", "numpy.vstack", "numpy.matrix", "numpy.matrix", "numpy.random.rand.append", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.unique", "numpy.unique.index", "numpy.atleast_2d", "numpy.unique", "numpy.unique.index", "numpy.asarray", "numpy.asarray", "numpy.hstack", "numpy.vstack", "numpy.floor", "numpy.asarray", "numpy.random.rand"], ["numpy.asarray", "numpy.asarray", "numpy.zeros", "numpy.asarray", "numpy.asarray", "numpy.tile", "numpy.unique", "numpy.asarray", "numpy.asarray", "numpy.sum", "numpy.exp", "numpy.asarray", "numpy.divide", "numpy.asarray", "numpy.asarray", "numpy.sum", "numpy.exp", "numpy.power", "numpy.sort", "numpy.argsort", "numpy.asarray.append", "numpy.sum", "numpy.power", "numpy.sort", "numpy.argsort", "numpy.sum", "numpy.sum", "numpy.asarray", "numpy.asarray", "numpy.asarray"], [], [], [], []], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aparmar4@Taxi/taxi.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NimJ@IITH_Assignments/cs17emds11014_nimesh_assignment2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Techyee@Team09_Bigdata/Team09_analysis_graph.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dhirajborade@Python_DataStructures_Algorithms/Codes (Jupyter Notebook)/Trees/Binary Heap Implementation.ipynb": {"API": [["ctypes.py_object.input_capacity"]], "module": ["matplotlib", "IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Frankcf123@testing/data_a.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fqaiser94@Adversarial_images/adversarial_images.ipynb": {"API": [["tensorflow.nn.conv2d", "tensorflow.nn.max_pool", "tensorflow.truncated_normal", "tensorflow.Variable", "tensorflow.constant", "tensorflow.Variable", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tempfile.mkdtemp", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter.add_graph", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "tensorflow.app.run", "tensorflow.name_scope", "tensorflow.reshape", "tensorflow.name_scope", "tensorflow.nn.relu", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.nn.relu", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.nn.dropout", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.name_scope", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.cast", "tensorflow.get_default_graph", "tensorflow.Session", "tensorflow.train.Saver", "tensorflow.train.Saver.save", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.global_variables_initializer", "tensorflow.train.AdamOptimizer.run", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.reduce_mean.eval", "tensorflow.reduce_mean.eval"], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "tensorflow.Session", "tensorflow.train.import_meta_graph", "tensorflow.train.import_meta_graph.restore", "tensorflow.gradients", "tensorflow.train.latest_checkpoint"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/KrusecN13@Knjige/Projekt_knjige.ipynb": {"API": [["os.path.dirname", "re.findall", "csv.DictWriter", "csv.DictWriter.writeheader", "csv.DictWriter", "csv.DictWriter.writeheader", "os.makedirs", "sys.stdout.flush", "requests.get", "os.path.join", "csv.DictWriter", "csv.DictWriter.writeheader", "re.search", "re.search", "csv.DictWriter.writerow", "csv.DictWriter.writerow", "os.path.isfile", "os.listdir", "csv.DictWriter.writerow", "re.findall", "re.findall", "re.findall", "re.findall", "re.findall", "re.search.group", "re.findall", "re.findall", "re.findall", "re.findall", "re.search.group", "re.findall.split", "html.unescape", "html.unescape", "html.unescape", "html.unescape", "html.unescape", "html.unescape"]], "module": ["pandas", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hv8@data-wrangling-json/sliderule_dsi_json_exercise.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yashk2810@CIFAR-10/CIFAR-10.ipynb": {"API": [], "module": ["matplotlib", "numpy", "keras", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/darothen@climate_data_science/basic_pandas.ipynb": {"API": [["pandas.read_fwf", "pandas.concat", "pandas.read_fwf"]], "module": ["xarray", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/KeithWM@dstl_kaggle/notebooks/10-adapt-net-for-different-classes.ipynb": {"API": [[], []], "module": ["keras", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JohnnyBerman@Data-Ventures/DataVentures Code 1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/anishprajapati@assignment1/03Filtering.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/darshan-1997@darshmllab1/darsh.ipynb": {"API": ["tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.add", "tensorflow.subtract", "tensorflow.constant", "tensorflow.constant", "tensorflow.add", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.subtract", "tensorflow.multiply", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter.close", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter.close"], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/suwangcompling@NER/rnn_gensim_embedding.ipynb": {"API": [], "module": ["numpy", "spacy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/metaspir@mnist_gan/Vanilla_GAN.ipynb": {"API": [["matplotlib.pyplot.figure", "matplotlib.gridspec.GridSpec", "matplotlib.gridspec.GridSpec.update", "matplotlib.pyplot.subplot", "matplotlib.pyplot.axis", "matplotlib.pyplot.subplot.set_xticklabels", "matplotlib.pyplot.subplot.set_yticklabels", "matplotlib.pyplot.subplot.set_aspect", "matplotlib.pyplot.imshow"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kumard78@star-wars-survey/star-wars.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nfmcclure@DataScience350/PythonStuff/WebScraping/Webscrape_Obama_Speeches.ipynb": {"API": [], "module": ["lxml", "matplotlib", "pandas", "numpy", "requests", "networkx"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/janarth10@Data_Cleaning_and_Summarizing/Task1.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Csogeza@KVML/KVML/DKM/dkm_feld.ipynb": {"API": [], "module": ["pandas", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/savourylie@Training-a-Smartcab-to-Drive/Train a Smartcab to Drive Report.ipynb": {"API": [["vigenere_cipher.VigenereCipher", "vigenere_cipher.VigenereCipher.encode", "vigenere_cipher.VigenereCipher", "vigenere_cipher.VigenereCipher.encode", "vigenere_cipher.VigenereCipher", "vigenere_cipher.VigenereCipher.encode", "vigenere_cipher.VigenereCipher", "vigenere_cipher.VigenereCipher.encode", "vigenere_cipher.VigenereCipher", "vigenere_cipher.VigenereCipher.extend_keyword", "vigenere_cipher.VigenereCipher", "vigenere_cipher.VigenereCipher.decode", "vigenere_cipher.combine_character", "vigenere_cipher.combine_character", "vigenere_cipher.separate_character", "vigenere_cipher.separate_character"], [], [], [], ["environment.Environment"], [], [], []], "module": ["IPython", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ngundotra@ai-spotlight/Naive Bayes.ipynb": {"API": [["numpy.array", "random.randint"], ["numpy.reshape", "matplotlib.pyplot.matshow", "numpy.array", "numpy.random.choice"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/thompsjj@AlgorithmsDS/Class2/week1/network_packet_processing_simulation/Workbook.ipynb": {"API": [[], ["sys.stdin.read"], [], ["sys.setrecursionlimit", "threading.stack_size", "threading.Thread", "sys.stdin.readline", "sys.stdin.readline.split", "sys.stdin.readline"], ["sys.stdin.read"], ["sys.stdin.read", "sys.stdin.read.split"], ["sys.stdin.read.split", "sys.stdin.read"], ["sys.stdin.read"], ["collections.namedtuple", "sys.stdin.read", "sys.stdin.read.split"], ["sys.stdin.read", "sys.stdin.read.split"], ["sys.stdin.read", "sys.stdin.read.split"], ["sys.stdin.read"], ["sys.stdin.read", "sys.stdin.read.split"], [], [], ["sys.stdin.read", "sys.stdin.read.split"], ["sys.stdin.read", "sys.stdin.read.split"], ["sys.stdin.read", "sys.stdin.read.split"], ["sys.stdin.read", "sys.stdin.read.split"], ["random.randint", "sys.stdin.read", "sys.stdin.read.split"], ["sys.stdin.read", "sys.stdin.read.split"], [], [], ["sys.stdin.read", "sys.stdin.read.split"], ["random.randrange", "random.sample"], ["sys.stdin.read", "sys.stdin.read.split"], [], ["sys.stdin.read"], ["sys.stdin.read", "sys.stdin.read.split"], ["sys.stdin.read", "sys.stdin.read.split"], ["sys.stdin.read", "sys.stdin.read.split"], ["sys.stdin.read"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JamesMckenzie4@poisson/Poisson_test.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/StanfordAIR@optimization-sandbox/ipython_sandbox/force_field_simple.ipynb": {"API": [], "module": ["scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/TianxiaoHu@Polar/community_stat.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "seaborn", "numpy", "networkx", "gensim"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kuni10saito@kuni10saito/CIFAR-10_input.ipynb": {"API": [], "module": ["matplotlib", "keras", "numpy", "tensorflow", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/FUlyankin@r_probability/end_seminars/Untitled.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn", "imageio"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mrquant@tensorflow-notebooks/CIFAR-10 ConvNet.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kiwamizamurai@Lygometry/codes/code_ipynb/gaussian_relationship.ipynb": {"API": [["util.unkoman", "matplotlib.pyplot.hist", "os.path.join", "matplotlib.pyplot.savefig", "os.system", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], ["numpy.random.randn", "matplotlib.pyplot.savefig", "matplotlib.pyplot.scatter"], ["numpy.exp", "numpy.sum"], ["numpy.exp", "numpy.exp", "numpy.array", "time.time", "time.time", "numpy.c_", "numpy.array", "numpy.random.normal", "numpy.linalg.norm", "numpy.exp", "numpy.exp", "numpy.mod", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm"], [], ["numpy.array", "numpy.random.randn", "os.path.splitext", "os.path.isdir", "numpy.exp", "numpy.exp", "numpy.zeros", "matplotlib.pyplot.scatter", "shutil.rmtree", "os.mkdir", "os.mkdir", "matplotlib.pyplot.savefig", "numpy.linalg.norm", "numpy.exp", "numpy.exp", "numpy.linalg.norm", "numpy.log", "numpy.linalg.norm"], [], ["numpy.random.randn", "matplotlib.pyplot.hist", "matplotlib.pyplot.savefig", "def_set.P_ij"], []], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mohamedtwice@afl-cio_exercises/Exercise 2/Exercise 2.ipynb": {"API": [], "module": ["numpy", "xlsxwriter", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/skovv3@world-development-index/visualizing the given data.ipynb": {"API": [[], []], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fairfield-university-is510-fall2017@movies-tonight-part-5-EnguChen1993/MoviesTonightPart5.ipynb": {"API": [["pandas.DataFrame", "pandas.io.json.json_normalize", "requests.get", "requests.get"]], "module": ["requests", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zrluety@WSIA2018-ProgrammingInActuarialScience/WSIA_Cybersecurity_Pricing_Demo.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Kingshuk1991@udemy_data_science/Titanic Intro Projects.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "seaborn", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/louloret@ANOVA-explanation/Explaining ANOVA.ipynb": {"API": [], "module": ["IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Szarad@rozwiazania_ml2017/L4b.ipynb": {"API": [], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kncrawford@EDGES_RRLs/Sper00 Plot.ipynb": {"API": [], "module": ["matplotlib", "numpy", "astropy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mariuskin@rap_lyrics_gen/rap generator.ipynb": {"API": [], "module": ["selenium"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Slavin22@PandasHomework/SeanSlavin_HeroesOfPymoli.ipynb": {"API": ["pandas.read_json", "pandas.DataFrame", "pandas.read_json.mean", "pandas.read_json.sum", "pandas.DataFrame", "pandas.read_json.groupby", "pandas.read_json.apply", "pandas.read_json.groupby", "pandas.merge", "pandas.merge", "pandas.merge", "pandas.merge", "pandas.merge", "pandas.merge", "pandas.read_json.value_counts", "pandas.read_json.value_counts", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby"], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DarkCoffy@top40/Top500.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/laramaktub@RNN/Building+a+Recurrent+Neural+Network+-+Step+by+Step+-+v3.ipynb": {"API": [["numpy.exp", "numpy.exp", "numpy.random.seed", "numpy.zeros", "numpy.zeros", "numpy.tanh", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.copy", "numpy.zeros_like", "numpy.max.sum", "numpy.max.sum", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn", "numpy.dot", "numpy.zeros", "numpy.log", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.copy", "numpy.max", "numpy.log", "numpy.max", "numpy.dot", "numpy.dot", "numpy.dot"], ["numpy.exp", "numpy.max.sum", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.max", "numpy.exp", "numpy.sqrt", "numpy.sqrt"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gunjan-sood@CustomerOrders/CustomerOrders.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JacopoPan@ar-flocking-and-leader-forces/flocking-and-leader-forces.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nehgu@Cloud-ProviderForum-Mining/crawler_scraper.ipynb": {"API": [], "module": ["boto3"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/krislars@extinction/Extinction.ipynb": {"API": [["numpy.array", "scipy.interpolate.interp1d", "numpy.array"], ["scipy.interpolate.interp1d", "numpy.logical_and", "scipy.integrate.trapz", "scipy.integrate.trapz", "numpy.loadtxt", "numpy.log10", "numpy.loadtxt", "numpy.min", "numpy.max", "numpy.abs", "numpy.abs"], ["astropy.io.fits.open", "scipy.interpolate.interp1d", "numpy.logical_and", "numpy.logical_and", "scipy.integrate.trapz", "scipy.integrate.trapz", "numpy.loadtxt", "numpy.log10", "numpy.loadtxt", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.abs"]], "module": ["matplotlib", "numpy", "astropy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nidhinbv@ParkinsonsScripts/Accuracy.ipynb": {"API": ["os.path.abspath", "os.path.basename", "pandas.read_csv", "pandas.read_csv.to_csv"], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hashiprobr@redes-sociais/encontro25.ipynb": {"API": [["plotly.offline.init_notebook_mode", "math.sqrt", "plotly.offline.iplot", "math.cos", "math.sin", "math.sin", "math.cos"], ["plotly.offline.init_notebook_mode", "networkx.spring_layout.items", "math.sqrt", "networkx.spring_layout", "networkx.read_gml", "plotly.offline.iplot", "networkx.spring_layout.update", "plotly.offline.iplot", "networkx.to_numpy_matrix", "networkx.closeness_centrality", "networkx.betweenness_centrality", "networkx.all_shortest_paths", "networkx.empty_graph", "networkx.complete_graph", "networkx.spring_layout", "networkx.algorithms.shortest_paths.generic.average_shortest_path_length", "networkx.algorithms.cluster.average_clustering", "networkx.complete_graph.number_of_nodes", "functools.reduce", "networkx.complete_graph.has_edge", "random.random", "random.random", "networkx.algorithms.components.connected_component_subgraphs", "math.cos", "math.sin", "math.sin", "math.cos", "networkx.complete_graph.has_edge", "itertools.combinations", "networkx.complete_graph.has_edge"], ["os.path.join", "unidecode.unidecode"]], "module": ["networkx", "unidecode", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Aurora-27@BookRecommendation/IpythonNotebooks/Untitled.ipynb": {"API": [["pandas.read_csv.iterrows", "pandas.read_csv.iterrows", "pandas.read_csv.iterrows", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "operator.itemgetter"], [], []], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/macgemini@dswbiznesie/notebooks/Cloud DS.ipynb": {"API": [[], ["tensorflow.logging.set_verbosity", "pandas.read_csv", "tensorflow.contrib.learn.preprocessing.VocabularyProcessor", "tensorflow.contrib.learn.preprocessing.VocabularyProcessor.fit", "tensorflow.contrib.lookup.index_table_from_file", "tensorflow.squeeze", "tensorflow.string_split", "tensorflow.sparse_tensor_to_dense", "tensorflow.contrib.lookup.index_table_from_file.lookup", "tensorflow.constant", "tensorflow.pad", "tensorflow.slice", "tensorflow.contrib.layers.embed_sequence", "tensorflow.contrib.layers.conv2d", "tensorflow.nn.relu", "tensorflow.layers.max_pooling1d", "tensorflow.squeeze", "tensorflow.constant", "tensorflow.contrib.lookup.index_table_from_tensor", "tensorflow.squeeze", "tensorflow.string_split", "tensorflow.sparse_tensor_to_dense", "tensorflow.contrib.lookup.index_table_from_tensor.lookup", "tensorflow.constant", "tensorflow.pad", "tensorflow.slice", "tensorflow.contrib.layers.embed_sequence", "tensorflow.contrib.layers.fully_connected", "tensorflow.squeeze", "tensorflow.constant", "tensorflow.contrib.lookup.index_table_from_tensor", "tensorflow.squeeze", "tensorflow.contrib.lookup.index_table_from_tensor.lookup", "tensorflow.one_hot", "tensorflow.contrib.layers.fully_connected", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.concat", "tensorflow.contrib.layers.fully_connected", "tensorflow.concat", "tensorflow.contrib.layers.fully_connected", "tensorflow.contrib.learn.ModelFnOps", "tensorflow.contrib.learn.utils.input_fn_utils.InputFnOps", "tensorflow.contrib.metrics.streaming_precision", "tensorflow.contrib.metrics.streaming_recall", "tensorflow.contrib.learn.Experiment", "subprocess.check_call", "tensorflow.python.platform.gfile.Open", "tensorflow.train.match_filenames_once", "tensorflow.train.string_input_producer", "tensorflow.TextLineReader", "tensorflow.TextLineReader.read_up_to", "tensorflow.expand_dims", "tensorflow.decode_csv", "tensorflow.contrib.lookup.index_table_from_tensor", "tensorflow.contrib.lookup.index_table_from_file.lookup", "tensorflow.contrib.layers.embed_sequence.get_shape", "tensorflow.contrib.layers.fully_connected.get_shape", "tensorflow.gather", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.losses.sparse_softmax_cross_entropy", "tensorflow.contrib.layers.optimize_loss", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.expand_dims", "tensorflow.group", "tensorflow.contrib.learn.Estimator", "tensorflow.argmax", "tensorflow.contrib.framework.get_global_step", "tensorflow.placeholder.items", "tensorflow.constant", "tensorflow.contrib.learn.MetricSpec", "tensorflow.contrib.learn.MetricSpec", "tensorflow.contrib.learn.MetricSpec", "tensorflow.contrib.learn.MetricSpec", "tensorflow.contrib.learn.python.learn.utils.saved_model_export_utils.make_export_strategy"], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "model.init", "os.path.join", "tensorflow.contrib.learn.python.learn.learn_runner.run", "os.environ.get.json.loads.get.get", "os.environ.get.json.loads.get", "json.loads", "os.environ.get"]], "module": ["tensorflow", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aPToul@MyLearningJourney/tensorflow/Wiki2Map (SOM, W2V, AutoEncoder)/Wiki2Map-NewParams.ipynb": {"API": [], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/izaromanowska@Emerging_community/Supplementary_information.ipynb": {"API": [], "module": ["matplotlib", "IPython", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/abylikhsanov@Analyzing-thanksgiving-dinner/Basics.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/IagoMendes@CD17-Iago/Projeto1 Layout.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/staciachoe@w266_project_baseline_repo/ScienceIE Notebook_BASELINE.ipynb": {"API": [["tensorflow.contrib.framework.get_variables", "tensorflow.variables_initializer", "tensorflow.Session", "tensorflow.train.Saver", "tensorflow.summary.merge_all", "tensorflow.summary.FileWriter", "tensorflow.variable_scope", "tensorflow.global_variables_initializer", "os.path.exists", "os.makedirs", "tensorflow.train.AdamOptimizer", "tensorflow.clip_by_global_norm", "tensorflow.train.RMSPropOptimizer.apply_gradients", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.train.AdagradOptimizer", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.RMSPropOptimizer.compute_gradients", "tensorflow.train.RMSPropOptimizer"], [], ["numpy.zeros", "numpy.savez_compressed", "numpy.load", "numpy.asarray"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.dropout", "tensorflow.summary.scalar", "general_utils.Progbar", "data_utils.minibatches", "numpy.mean", "data_utils.pad_sequences", "data_utils.pad_sequences", "data_utils.pad_sequences", "data_utils.pad_sequences", "tensorflow.variable_scope", "tensorflow.nn.embedding_lookup", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.contrib.rnn.LSTMCell", "tensorflow.contrib.rnn.LSTMCell", "tensorflow.nn.bidirectional_dynamic_rnn", "tensorflow.concat", "tensorflow.nn.dropout", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.cast", "tensorflow.contrib.crf.crf_log_likelihood", "tensorflow.reduce_mean", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.sequence_mask", "tensorflow.boolean_mask", "tensorflow.reduce_mean", "data_utils.minibatches", "general_utils.Progbar.update", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.get_variable", "tensorflow.nn.embedding_lookup", "tensorflow.shape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.contrib.rnn.LSTMCell", "tensorflow.contrib.rnn.LSTMCell", "tensorflow.nn.bidirectional_dynamic_rnn", "tensorflow.concat", "tensorflow.reshape", "tensorflow.concat", "tensorflow.shape", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.contrib.crf.viterbi_decode", "tensorflow.zeros_initializer", "data_utils.get_chunks", "data_utils.get_chunks"], ["logging.getLogger", "logging.getLogger.setLevel", "logging.basicConfig", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "logging.Formatter", "time.time", "time.time", "logging.getLogger", "sys.stdout.write", "sys.stdout.write", "sys.stdout.write", "sys.stdout.write", "sys.stdout.flush", "sys.stdout.write", "sys.stdout.write", "numpy.floor", "numpy.log10"], ["general_utils.get_logger", "data_utils.load_vocab", "data_utils.load_vocab", "data_utils.load_vocab", "data_utils.get_processing_word", "data_utils.get_processing_word", "os.path.exists", "os.makedirs", "data_utils.get_trimmed_glove_vectors"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/drublackberry@hashcode-2017-prep/exploration.ipynb": {"API": [[], ["numpy.asarray", "pandas.DataFrame", "numpy.asarray", "numpy.asarray", "os.listdir", "os.path.join", "pandas.DataFrame", "pandas.DataFrame"], ["pandas.read_excel", "pandas.read_excel", "pandas.read_excel", "pandas.read_excel", "pandas.DataFrame", "pandas.DataFrame", "iolib.get_pizza_df", "pandas.DataFrame", "pandas.DataFrame", "numpy.random.randint", "numpy.random.randint", "matplotlib.pyplot.matshow", "pandas.DataFrame", "numpy.random.randint"], ["numpy.asarray", "numpy.ones"], ["os.path.join", "numpy.genfromtxt", "numpy.genfromtxt", "numpy.zeros", "pandas.DataFrame", "numpy.asarray", "numpy.asarray", "numpy.any", "numpy.any", "numpy.any", "numpy.genfromtxt", "numpy.genfromtxt", "pandas.DataFrame", "numpy.where", "numpy.count_nonzero"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/LordSnowr@SFSalaries/SF Lo\u0308hne U\u0308bung - Aufgabe.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/botcs@gan-album/INPUT_TEST.ipynb": {"API": [["numpy.random.seed", "tensorflow.set_random_seed", "tensorflow.WholeFileReader", "tensorflow.WholeFileReader.read", "tensorflow.image.decode_png", "tensorflow.image.convert_image_dtype", "tensorflow.train.string_input_producer", "numpy.array", "tensorflow.train.string_input_producer", "tensorflow.train.shuffle_batch", "glob.glob", "tensorflow.Session", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tensorflow.train.Coordinator.request_stop", "tensorflow.train.Coordinator.join", "numpy.random.randn", "glob.glob", "glob.glob", "sys.stdout.flush"], ["tensorflow.truncated_normal", "tensorflow.get_variable", "tensorflow.constant", "tensorflow.get_variable", "tensorflow.maximum", "tensorflow.variable_scope", "tensorflow.add", "tensorflow.variable_scope", "tensorflow.nn.conv2d", "tensorflow.add", "tensorflow.variable_scope", "tensorflow.nn.conv2d_transpose", "tensorflow.reshape", "numpy.prod", "tensorflow.shape", "tensorflow.matmul"], [], ["time.time", "numpy.random.seed", "tensorflow.set_random_seed", "time.time", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "numpy.prod", "tensorflow.reshape", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.Session", "sampler.LatentSampler", "sampler.DataSampler.tensorflow_next_batch", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.MomentumOptimizer.minimize", "tensorflow.train.MomentumOptimizer.minimize", "tensorflow.global_variables_initializer.run", "tensorflow.train.Saver", "time.time", "tensorflow.train.Coordinator.request_stop", "tensorflow.train.Coordinator.join", "time.time", "tensorflow.get_variable_scope.reuse_variables", "tensorflow.get_variable_scope.reuse_variables", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "time.time", "sampler.DataSampler", "tensorflow.ones_like", "tensorflow.zeros_like", "tensorflow.ones_like", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.train.MomentumOptimizer", "tensorflow.train.MomentumOptimizer", "tensorflow.global_variables_initializer", "time.time", "time.time", "time.time", "tensorflow.train.Saver.save", "tensorflow.get_variable_scope", "tensorflow.get_variable_scope", "sampler.LatentSampler.next_batch", "sampler.DataSampler.eval", "sampler.LatentSampler.next_batch", "time.time", "time.time"], ["time.time", "numpy.random.seed", "tensorflow.set_random_seed", "time.time", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "numpy.prod", "tensorflow.reshape", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.Session", "sampler.LatentSampler", "sampler.DataSampler", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.MomentumOptimizer.minimize", "tensorflow.train.MomentumOptimizer.minimize", "tensorflow.global_variables_initializer.run", "tensorflow.train.Saver", "time.time", "time.time", "tensorflow.get_variable_scope.reuse_variables", "tensorflow.get_variable_scope.reuse_variables", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "time.time", "tensorflow.ones_like", "tensorflow.zeros_like", "tensorflow.ones_like", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.train.MomentumOptimizer", "tensorflow.train.MomentumOptimizer", "tensorflow.global_variables_initializer", "time.time", "time.time", "time.time", "tensorflow.train.Saver.save", "tensorflow.get_variable_scope", "tensorflow.get_variable_scope", "sampler.LatentSampler.next_batch", "sampler.DataSampler.vanilla_next_batch", "sampler.LatentSampler.next_batch", "time.time", "time.time"]], "module": ["matplotlib", "scipy", "numpy", "seaborn", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pshchelo@ipynb/notebooks/IPyNBtricks.ipynb": {"API": ["IPython.display.HTML"], "module": ["matplotlib", "IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/EchoIR@tensorflow_mnist/CNN_Mnist.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tom-montgomery@Austin-Crash-Analytics/Analysis/analyze.ipynb": {"API": [[]], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/datasalad@math/dz/vectors, matrix/matrix_operations.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/favorita-ee379k@favorita-ee379k.github.io/Linear AR report.ipynb": {"API": [["numpy.zeros", "numpy.zeros.append", "numpy.zeros.append", "math.ceil", "numpy.zeros", "numpy.convolve", "numpy.convolve", "numpy.convolve", "math.ceil"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jcmartinez67@Ejemplo/Clase1_IntroSim.ipynb": {"API": ["IPython.display.YouTubeVideo"], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/skkong@tensorflow_work/ML Lec 12-rnn.ipynb": {"API": [["numpy.arange", "numpy.vstack", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.ones_like", "numpy.ones_like"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/arthurtakaki@Concave-Nonparametric-Least-Square/Testing CNLS 2 variables N-samples.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/keijikk@rl-sample/src/1.1_bandit_problem.ipynb": {"API": ["numpy.array", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.array", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.array", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.average", "numpy.average", "numpy.average", "numpy.array.append", "numpy.array.append", "numpy.array.append", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.array", "numpy.array", "numpy.array", "numpy.hstack", "numpy.hstack", "numpy.hstack", "numpy.random.rand", "numpy.max", "numpy.random.randint", "numpy.argmax", "numpy.random.randint", "numpy.argmax", "numpy.max", "numpy.random.randint", "numpy.sqrt", "numpy.argmax", "numpy.random.rand", "numpy.max", "numpy.array", "numpy.array", "numpy.array", "numpy.where", "numpy.where", "numpy.where", "numpy.log", "numpy.array", "numpy.array", "numpy.array"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/KVladimr@Graphs_project/Graphs.ipynb": {"API": [["codecs.open.read", "lxml.objectify.makeparser", "lxml.objectify.fromstring", "networkx.Graph", "networkx.to_dict_of_lists", "networkx.to_dict_of_lists.items", "networkx.to_dict_of_lists", "networkx.to_dict_of_lists.items", "networkx.draw", "matplotlib.pyplot.axis", "matplotlib.pyplot.savefig", "random.sample", "time.time", "time.time", "time.time", "time.time", "time.time", "random.sample", "codecs.open.encode", "networkx.get_node_attributes", "networkx.set_edge_attributes", "networkx.set_node_attributes", "networkx.set_node_attributes", "networkx.to_dict_of_lists", "networkx.draw", "matplotlib.pyplot.axis", "matplotlib.pyplot.savefig", "random.randint", "random.randint", "networkx.complete_graph", "math.acos", "codecs.open", "networkx.Graph.remove_node", "math.fabs", "math.fabs", "math.fabs", "math.fabs", "time.time", "time.time", "time.time", "time.time", "time.time", "networkx.get_node_attributes", "random.random", "networkx.dijkstra_path_length", "networkx.dijkstra_path", "networkx.Graph.add_edge", "networkx.Graph.add_edge", "networkx.dijkstra_path", "networkx.dijkstra_path_length", "math.exp", "networkx.get_edge_attributes", "math.sin", "math.sin", "math.cos", "networkx.astar_path", "networkx.get_node_attributes", "networkx.get_node_attributes", "math.cos", "math.cos", "networkx.dijkstra_path"]], "module": ["networkx", "lxml", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Snapper1995@FabLab_Phyton/Untitled4.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sondrevf@01_PhysicsForFun/test1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/antoinelpp@JSEDOM/images/plasma_beam_images.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/laughreyl@chargebacks/chargemgr/ChargebackMgrCSV.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lesley2958@twilio-geospatial-embedding/Embedding Maps with Python & Plotly.ipynb": {"API": [], "module": ["plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shankswhite@Quant/About ETF, MF, HF.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/WillMatteson@NBABioData/Scraper.ipynb": {"API": [], "module": ["pandas", "xlsxwriter", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sadanand-singh@kaggle-titanic/titanic.ipynb": {"API": [["csv.reader", "numpy.array", "numpy.zeros", "csv.reader", "csv.reader.next", "csv.writer", "csv.writer.writerow", "numpy.array.append", "numpy.unique", "numpy.mean", "numpy.mean", "csv.writer.writerow", "csv.writer.writerow", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype", "numpy.array.astype"], [], []], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yyfhust@2018MCM__C/MCM/Untitled3.ipynb": {"API": [["pandas.read_csv", "pandas.read_csv.head", "matplotlib.pyplot.figure", "matplotlib.pyplot.title", "seaborn.heatmap"], ["pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplots", "matplotlib.pyplot.legend", "matplotlib.pyplot.show"], "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplots", "matplotlib.pyplot.legend", "matplotlib.pyplot.show"], "module": ["matplotlib", "scipy", "pandas", "statsmodels", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/barua422@kaggle-dota2/Dota2.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Hadrien-lcrx@titanic-survival-analysis/Titanic Survival Rates.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "seaborn", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DanaZL@Introduction_to_Data_Analysis/Research_Vacancies/Research_Vacancies.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rnpandya@rstuff/regmut/regmut2.ipynb": {"API": [["pandas.read_table", "pandas.DataFrame", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.melt", "pandas.read_table", "pandas.read_table", "os.path.join.append", "pandas.read_table", "pandas.cut", "pandas.read_csv", "pandas.concat", "os.path.join", "os.path.join", "pandas.read_csv", "os.path.join", "os.path.join", "Bio.Seq.Seq", "pandas.cut", "os.path.join", "itertools.chain", "os.path.join", "Bio.SeqIO.parse", "pandas.concat", "numpy.argmax", "Bio.motifs.parse", "os.path.join", "pandas.Series", "pandas.Series", "pandas.concat", "numpy.array", "numpy.absolute", "os.path.join", "os.listdir", "os.path.join"]], "module": ["Bio", "matplotlib", "pandas", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/X1angMe1@Udacity_MLBasic_P4/project/Baseball_Analyzation.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kzill2@Recommender_Homework/recommender_homework.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alexnakagawa@team_TFBS/notebooks/week2.ipynb": {"API": [[], [], []], "module": ["Bio", "matplotlib", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jyprksh001@ml_tut/resampling methods.ipynb": {"API": ["IPython.display.Image"], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/devleo@graph-database/graphDatabases.ipynb": {"API": [], "module": ["networkx"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/moscowjh@CLC/CityLadder Online Sales - Exploratory Notebooks.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chronos-pramantha@space-mining/Solar System - Minerals.ipynb": {"API": [["numpy.genfromtxt", "numpy.genfromtxt", "numpy.genfromtxt"], ["numpy.genfromtxt", "numpy.genfromtxt", "pprint.pprint", "numpy.genfromtxt"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rajasekarspd@US_Bike_Share_Systems/Bike_Share_Analysis_V2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ntuaha@TW_Immigration/notebook/main.ipynb": {"API": [["pandas.read_html", "pandas.read_csv.to_csv", "pandas.read_csv", "pandas.DataFrame", "pandas.DataFrame.to_csv", "pandas.read_csv.drop", "datetime.datetime.now.strftime", "pandas.Series.keys", "pandas.Series", "datetime.datetime.now", "pandas.Series"], []], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Milenna@PhD/swingleft_milenna.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gmyrianthous@linear-regression/LinearRegression.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jesseerdmann@del_tools/notebooks/EPBL_Draft.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/liviniuk@SpaceEnvironmentData/Assignment1/Assignment1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "sympy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jacobeskin@Traveling-Salesman/Traveling salesman w. MC.ipynb": {"API": ["pandas.DataFrame", "importlib.reload", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.linalg.norm", "pandas.DataFrame", "numpy.array.keys", "numpy.array.keys", "numpy.maximum", "numpy.minimum", "numpy.linalg.norm", "numpy.random.randint", "numpy.random.randint", "numpy.random.random", "numpy.mod", "numpy.exp"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/triwandaseptian@JUPYTER_NOTEBOOK_analisis-data-linux-redhatpassguessing/frame-length-redhat-passguessing.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Shinseeker@IS362_PROJECT3/IS362_PROJECT3_Final.ipynb": {"API": [], "module": ["IPython", "numpy", "sqlalchemy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hybridfuse@MNIST_cnn_save_restore/MNIST_expert_CNN_saver.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fabianschilling@neuron-model/neuron-model.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Physics177-2017@Lec06-Gaussian-Quadrature-Package/Lecture 06.ipynb": {"API": [["numpy.cos", "numpy.linspace", "numpy.ones", "numpy.copy", "numpy.tan"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/osakharnykh@SQL_alchemy/data_engineering.ipynb": {"API": [["sqlalchemy.create_engine", "sqlalchemy.ext.automap.automap_base", "sqlalchemy.ext.automap.automap_base.prepare", "sqlalchemy.orm.Session", "flask.Flask", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.Flask.run", "datetime.datetime.now", "datetime.timedelta", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.func.min", "sqlalchemy.func.avg", "sqlalchemy.func.max", "sqlalchemy.func.min.first", "sqlalchemy.func.avg.first", "sqlalchemy.func.max.first", "sqlalchemy.func.min.first", "sqlalchemy.func.avg.first", "sqlalchemy.func.max.first", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.func.min", "sqlalchemy.func.avg", "sqlalchemy.func.max", "sqlalchemy.orm.Session.query"]], "module": ["sqlalchemy", "flask", "matplotlib", "pandas", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/maxwang88@Machine-Translation/machine_translation.ipynb": {"API": [["numpy.array", "numpy.all", "numpy.all", "numpy.concatenate", "numpy.full"], ["os.path.join"]], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/qichaozhao@optimising-dataframe-proc/results_plot.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/caugusta@linkprediction/vae.ipynb": {"API": [[], [], [], [], [], [], [], ["numpy.zeros"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hackbray@Simulaci-n_Repository/METODOINVERSO.ipynb": {"API": [[], [], ["os.system", "os.system", "time.sleep", "random.randint", "itertools.permutations"], [], [], []], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/laufers@mesonet/file_listing.ipynb": {"API": [["datetime.datetime.now", "datetime.datetime.now.strftime", "numpy.genfromtxt", "numpy.lib.recfunctions.append_fields", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.set_size_inches", "matplotlib.pyplot.savefig", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.axis", "datetime.datetime.now", "numpy.log10"], ["datetime.datetime.now", "datetime.datetime.now.strftime", "datetime.datetime.now"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/thmp@qmc/Variational Monte Carlo.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rtreharne@SnO2_Ta/extended_seto.ipynb": {"API": [], "module": ["ipywidgets"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/GavinAbercrombie@TopicCentricSA/simpleLDA.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/appnori@mystudy/kmeans.ipynb": {"API": [["tensorflow.Session", "matplotlib.pyplot.ion", "matplotlib.pyplot.subplots", "matplotlib.patches.Rectangle", "matplotlib.pyplot.draw", "numpy.zeros", "matplotlib.pyplot.pause", "random.randrange", "time.sleep"], ["tensorflow.app.flags.DEFINE_boolean", "tensorflow.Session", "game.Game", "model.DQN", "tensorflow.placeholder", "tensorflow.summary.scalar", "tensorflow.train.Saver", "tensorflow.Session.run", "tensorflow.summary.FileWriter", "tensorflow.summary.merge_all", "model.DQN.update_target_network", "tensorflow.Session", "game.Game", "model.DQN", "tensorflow.train.Saver", "tensorflow.train.get_checkpoint_state", "tensorflow.train.Saver.restore", "tensorflow.app.run", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "game.Game.reset", "model.DQN.init_state", "game.Game.reset", "model.DQN.init_state", "game.Game.step", "model.DQN.remember", "time.sleep", "tensorflow.Session.run", "tensorflow.summary.FileWriter.add_summary", "tensorflow.train.Saver.save", "model.DQN.get_action", "game.Game.step", "model.DQN.remember", "time.sleep", "numpy.random.rand", "random.randrange", "model.DQN.get_action", "model.DQN.train", "model.DQN.update_target_network"], ["collections.deque", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.one_hot", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.get_collection", "tensorflow.get_collection", "numpy.argmax", "numpy.stack", "numpy.reshape", "numpy.append", "random.sample", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.multiply", "tensorflow.square", "tensorflow.train.AdamOptimizer", "numpy.max"]], "module": ["matplotlib", "pandas", "numpy", "seaborn", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pratikmjoshi@random-recurrent-architecture/Bidirectional RNN.ipynb": {"API": [], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/houda96@Proefstuderen/Proefstuderen.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mr2mccor@csci-2000-personal/Final-Exam/image_work.ipynb": {"API": [[], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fisiceoir@FourierSignalAnalysisCode/Code/FFT Demonstration-Old.ipynb": {"API": [["os.path.join", "numpy.linspace", "numpy.sin", "numpy.sin", "numpy.sin", "os.path.dirname", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin"], ["numpy.delete", "numpy.delete", "numpy.mean", "numpy.linspace", "numpy.reshape", "numpy.delete", "numpy.mean", "numpy.delete.append", "numpy.fft.fft", "numpy.reshape", "numpy.append", "numpy.abs", "numpy.std"], ["numpy.asarray", "numpy.arange", "matplotlib.pyplot.plot", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.show", "numpy.arange", "sys.exit", "numpy.isscalar", "sys.exit", "sys.exit", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], [], ["numpy.array", "numpy.array", "numpy.zeros", "numpy.shape", "numpy.shape"], ["numpy.linspace", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin"], ["numpy.linspace", "scipy.fftpack.fft", "numpy.fft.fft", "numpy.linspace", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "numpy.random.random", "numpy.sin", "numpy.abs", "numpy.abs", "numpy.sin"], ["os.path.dirname"], ["re.compile", "re.compile.findall"], ["numpy.asarray", "numpy.arange", "matplotlib.pyplot.plot", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.show", "numpy.arange", "sys.exit", "numpy.isscalar", "sys.exit", "sys.exit", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], ["numpy.arange", "numpy.sin", "scipy.signal.find_peaks_cwt", "matplotlib.pyplot.plot", "matplotlib.pyplot.scatter", "matplotlib.pyplot.show", "numpy.arange", "numpy.sin", "peakdetect.peakdet", "matplotlib.pyplot.plot", "matplotlib.pyplot.scatter", "matplotlib.pyplot.show", "numpy.arange"]], "module": ["matplotlib", "numpy", "ipywidgets", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/matteofrigo@verona18/fourier/01_eeg_processing.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/udothemath1984@100317_seaborn_visualization/seaborn_visualization.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/akront1104@World_Bank_Data/sliderule_dsi_json_exercise.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ramak919@pythonrd/RD Pandas vs SQL.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/amarcokuo@SQUAREM/Contraction Mapping Exercises.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/X-I-O-N@2145/Process.ipynb": {"API": [[], [], [], [], [], [], [], [], ["glob.glob", "pandas.read_csv", "pandas.DataFrame"]], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ahussan@jupyter-notebook-basic-practice/Numpy Arrays basic.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ayushgup@text-generator/TextGenerator_Training.ipynb": {"API": [], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kunbao7@dlnd-your-first-network/dlnd-your-first-neural-network.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sonal0403@Twitter-Sentiment-Analysis/Twitter Sentiment Analysis.ipynb": {"API": [[], ["matplotlib.style.use", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.animation.FuncAnimation", "matplotlib.pyplot.show"]], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jagadeeshshetty@ai/scripts/Python Class.ipynb": {"API": [["requests.get", "json.loads"], [], [], [], ["re.compile", "re.compile.serach"], [], [], ["random.randint"]], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jaimeiturriaga@machine-learning-hackathon/analysis_paralysis.ipynb": {"API": [["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.contrib.data.Dataset.from_tensor_slices", "argparse.ArgumentParser.parse_args", "store_data.load_data", "tensorflow.feature_column.categorical_column_with_hash_bucket", "tensorflow.feature_column.categorical_column_with_hash_bucket", "tensorflow.feature_column.categorical_column_with_identity", "tensorflow.feature_column.categorical_column_with_identity", "tensorflow.feature_column.categorical_column_with_identity", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.categorical_column_with_identity", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.embedding_column", "tensorflow.feature_column.numeric_column", "tensorflow.estimator.DNNRegressor", "tensorflow.estimator.DNNRegressor.train", "tensorflow.estimator.DNNRegressor.evaluate", "tensorflow.estimator.DNNRegressor.predict", "tensorflow.logging.set_verbosity", "tensorflow.app.run", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.estimator.DNNRegressor.evaluate"], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.contrib.data.Dataset.from_tensor_slices", "argparse.ArgumentParser.parse_args", "store_data.load_data", "tensorflow.feature_column.categorical_column_with_vocabulary_list", "tensorflow.feature_column.categorical_column_with_vocabulary_list", "tensorflow.feature_column.categorical_column_with_identity", "tensorflow.feature_column.categorical_column_with_identity", "tensorflow.feature_column.categorical_column_with_identity", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.categorical_column_with_identity", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.estimator.DNNRegressor", "tensorflow.estimator.DNNRegressor.train", "tensorflow.estimator.DNNRegressor.evaluate", "tensorflow.estimator.DNNRegressor.predict", "tensorflow.logging.set_verbosity", "tensorflow.app.run", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.indicator_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.feature_column.numeric_column", "tensorflow.estimator.DNNRegressor.evaluate"], ["pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.concat", "math.cos", "math.sin", "math.cos", "math.sin", "pandas.Series", "pandas.read_csv", "pandas.read_csv.to_csv", "math.ceil"]], "module": ["numpy", "tensorflow", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aniljoshiaset@HornetsDataChallenge/Hornets Data Challenge.ipynb": {"API": [], "module": ["matplotlib", "pandas", "statsmodels", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fotisAnagnostopoulos@cooperation_w_gsavvidis/Untitled.ipynb": {"API": [], "module": ["matplotlib", "numpy", "sympy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/physics91si@johanping-lab11/function_fu.ipynb": {"API": [[], [], ["matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.annotate", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.show"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NilsHulzebosch@ML2_lab1/lab1.ipynb": {"API": [], "module": ["IPython", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nshaganti@Other-Projects/H1BLotteryProb.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/melakbet@Logistic-Regression-Tutorial/MNIST-Log-Reg-Incomplete.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cla473@PythonTest/Jupyter_Gurus.ipynb": {"API": [["Genfuncs.split_string"], [], [], [], [], ["Genfuncs.reverse_string"], [], ["os.path.dirname"], [], [], ["Genfuncs.transcribe_DNA"], [], ["re.sub"], [], [], [], [], ["scipy.special.comb", "scipy.special.comb", "scipy.special.comb"]], "module": ["scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Riksi@Drafts/Expectation Maximisation.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/krohak@TAGCN/TAGCN-backup.ipynb": {"API": [["networkx.Graph", "numpy.zeros", "numpy.zeros.dump", "networkx.all_simple_paths", "networkx.all_simple_paths"], ["numpy.load", "tensorflow.python.framework.ops.reset_default_graph", "tensorflow.placeholder", "tensorflow.placeholder", "numpy.zeros", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.variable_scope", "tensorflow.zeros", "tensorflow.Variable", "tensorflow.zeros", "tensorflow.Variable", "tensorflow.get_variable", "tensorflow.zeros", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.add", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer"], ["tensorflow.set_random_seed", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder_with_default", "tensorflow.placeholder", "time.time", "tensorflow.Session.run", "tensorflow.global_variables_initializer", "time.time", "tensorflow.Session.run", "time.time", "time.time"], [], [], ["tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.cast", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.argmax", "tensorflow.argmax"], ["numpy.zeros", "numpy.array", "numpy.sort", "networkx.adjacency_matrix", "numpy.vstack", "numpy.sort.tolist", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.array", "scipy.sparse.diags", "scipy.sparse.diags.dot", "scipy.sparse.coo_matrix", "numpy.array", "scipy.sparse.diags", "scipy.sparse.linalg.eigen.arpack.eigsh", "scipy.sparse.lil_matrix", "numpy.zeros", "networkx.from_dict_of_lists", "scipy.sparse.coo_matrix.sum", "scipy.sparse.eye", "scipy.sparse.eye", "scipy.sparse.eye", "scipy.sparse.csr_matrix", "scipy.sparse.vstack", "scipy.sparse.isspmatrix_coo", "numpy.power", "numpy.isinf", "numpy.power", "numpy.isinf", "scipy.sparse.eye", "numpy.vstack", "scipy.sparse.csr_matrix.dot", "pickle.load", "pickle.load", "scipy.sparse.coo_matrix.dot"], ["numpy.load", "tensorflow.python.framework.ops.reset_default_graph", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.variable_scope", "tensorflow.zeros", "tensorflow.Variable", "tensorflow.zeros", "tensorflow.Variable", "tensorflow.nn.dropout", "numpy.zeros", "tensorflow.add", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu"], ["tensorflow.random_uniform", "tensorflow.Variable", "numpy.sqrt", "tensorflow.random_uniform", "tensorflow.Variable", "tensorflow.zeros", "tensorflow.Variable", "tensorflow.ones", "tensorflow.Variable"], [], ["tensorflow.random_uniform", "tensorflow.cast", "tensorflow.sparse_retain", "tensorflow.floor", "tensorflow.sparse_tensor_dense_matmul", "tensorflow.matmul", "tensorflow.add_n", "tensorflow.add_n", "tensorflow.name_scope", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.nn.dropout", "tensorflow.variable_scope", "tensorflow.nn.dropout", "tensorflow.variable_scope", "tensorflow.nn.dropout", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.get_variable", "tensorflow.contrib.layers.xavier_initializer"]], "module": ["networkx", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bendickson@pandas/datetimeindex_resampling.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/youyuge34@Poems_generator_Keras/poem_model.ipynb": {"API": [[], []], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nishizawashigeki24@Effective-Heat-Capacity/Specifc_Heat_Capacity.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ostwind@network_resource_dom/analysis/ground_truth.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Nafanya@kse/hw1.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "sympy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sambapython@batch29/condtional statements.ipynb": {"API": [[], [], [], [], [], ["flask.Flask", "flask.Flask.route", "flask.Flask.route", "flask.Flask.run", "matplotlib.pyplot.bar", "matplotlib.pyplot.savefig"], ["flask.Flask", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.request.form.get", "flask.render_template", "flask.Flask.run", "flask.render_template", "matplotlib.pyplot.bar", "matplotlib.pyplot.savefig", "flask.render_template"], ["logging.basicConfig", "app1.fun1", "logging.info", "logging.info", "logging.debug", "logging.warn", "logging.exception", "logging.error", "logging.debug", "time.sleep", "time.time", "time.time"], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []], "module": ["matplotlib", "flask"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jerichojherrera@bbd_hw15/bbd_app_notebook.ipynb": {"API": [["sqlalchemy.create_engine", "sqlalchemy.ext.automap.automap_base", "sqlalchemy.ext.automap.automap_base.prepare", "sqlalchemy.orm.Session", "flask.Flask", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.render_template", "pandas.read_sql_query", "pandas.read_sql_query.set_index", "flask.jsonify", "pandas.read_sql_query", "pandas.read_sql_query.set_index", "flask.jsonify", "flask.Flask.run", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query"]], "module": ["sqlalchemy", "numpy", "flask", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ClaseML-2017@learningslowdown-jasbu/learning_slowdn.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/FrancescoSaverioZuppichini@hashCode/main.ipynb": {"API": [["numpy.vectorize", "numpy.array", "numpy.abs", "numpy.abs", "numpy.array", "numpy.all"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/materialscloud-org@mc-home/git_setup.ipynb": {"API": [[], [], ["os.getenv", "os.getenv", "os.getenv"], ["ipywidgets.HTML"]], "module": ["ipywidgets"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yimej@05_Matplotlib/pyber.ipynb": {"API": ["pandas.read_csv", "pandas.merge", "pandas.read_csv", "pandas.merge", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.ylim", "matplotlib.pyplot.xlim", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.figtext", "matplotlib.pyplot.legend", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "matplotlib.pyplot.pie", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.pie", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.pie", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.Line2D"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/monlie@toy_cas/cas.ipynb": {"API": [], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/guidoman@principal-components-analysis-tutorial/PCA Tutorial.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sinaes@USFatalShooting/Fatal Police Shootings.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ANRChapitres@global_array/names_chap.ipynb": {"API": [["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.path.join", "os.path.join", "fnmatch.filter", "sys.exit", "os.listdir", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "collections.OrderedDict", "os.path.isfile", "lxml.etree.parse", "lxml.etree.parse.findall", "lxml.etree.parse.find", "lxml.etree.parse.findall", "lxml.etree.parse.xpath", "lxml.etree.parse.findall", "lxml.etree.Element", "lxml.etree.Element", "lxml.etree.Element", "lxml.etree.Element", "lxml.etree.Element", "lxml.etree.Element", "lxml.etree.Element", "lxml.etree.Element", "lxml.etree.Element", "lxml.etree.Element", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "csv.DictWriter", "csv.writer", "csv.writer.writerow", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.find", "re.sub", "lxml.etree.Element.append", "lxml.etree.Element.append", "lxml.etree.Element.append", "lxml.etree.Element.append", "lxml.etree.Element.append", "lxml.etree.Element.append", "lxml.etree.Element.append", "lxml.etree.Element.append", "lxml.etree.Element.append", "lxml.etree.Element.append", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.xpath", "lxml.etree.parse.xpath", "lxml.etree.parse.xpath", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.findall", "lxml.etree.Element.xpath", "re.match", "re.match", "re.match", "collections.OrderedDict.keys", "csv.DictWriter.writeheader", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "re.sub", "lxml.etree.parse.find", "lxml.etree.parse.find", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "lxml.etree.parse.xpath", "lxml.etree.parse.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "lxml.etree.Element.xpath", "re.match", "re.match", "re.match", "collections.OrderedDict.values", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.find", "lxml.etree.parse.xpath", "lxml.etree.parse.find", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.find", "lxml.etree.parse.find", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall", "lxml.etree.parse.findall"]], "module": ["IPython", "lxml"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mkhj@Deep-learning/Keras-Tensorflow-MLP.ipynb": {"API": [], "module": ["matplotlib", "numpy", "keras", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/suneman@socialgraphs2017/lectures/How_To_Take_This_Class.ipynb": {"API": ["IPython.display.YouTubeVideo"], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Arunosaur@ds-from-scratch/Notebooks/plot_1.ipynb": {"API": ["matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show"], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sjain507@Neural-Network-using-tensorflow/MNIST Neural Net.ipynb": {"API": [], "module": ["matplotlib", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alirezam7@Financial_Data_Analysis/Use_Quanld.ipynb": {"API": [], "module": ["quandl", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DreamFac@mlbstatsnn/MLBNN.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dswong3@homework/week-4-hw-eeb174.ipynb": {"API": [], "module": ["scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/serg-e@notebook/test.ipynb": {"API": ["matplotlib.pyplot.plot"], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Rupal-IIITD@Outreachy-contributions/Tell your Open Data story/Analyze open data sets with pandas DataFrames/Story.ipynb": {"API": [[], []], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/iamsteveng@AIND-RNN/RNN_project.ipynb": {"API": [["numpy.asarray", "numpy.asarray", "re.sub", "numpy.asarray", "numpy.asarray", "numpy.asarray.append", "numpy.asarray.append", "numpy.shape", "numpy.asarray.append", "numpy.asarray.append", "numpy.shape"]], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Mujtaba1995@Arbitrage-Calculation-for-crypto-currency-with-pandas-and-numpy/Crypto_Arbitarge.ipynb": {"API": ["pandas.DataFrame", "requests.get.astype", "matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "matplotlib.pyplot.rcParams.update", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.scatter", "matplotlib.pyplot.annotate", "numpy.max", "numpy.min", "numpy.min", "numpy.max", "requests.get"], "module": ["pandas", "numpy", "matplotlib", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AloshkaD@Car_vision/Initial_Submission.ipynb": {"API": [["tensorflow.assert_rank", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "os.path.join", "copy.deepcopy", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.zeros", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session", "glob.glob", "glob.glob", "glob.glob", "tensorflow.Graph.as_default", "unittest.mock.MagicMock", "unittest.mock.call", "tensorflow.global_variables_initializer", "os.path.join", "os.path.join", "os.path.join", "numpy.arange", "tensorflow.Graph", "numpy.prod", "numpy.arange", "numpy.arange", "numpy.prod", "numpy.prod"], ["glob.glob", "zipfile.ZipFile", "glob.glob", "numpy.array", "random.shuffle", "numpy.dot", "shutil.rmtree", "shutil.rmtree", "urllib.request.urlretrieve", "re.sub", "numpy.array", "time.time", "glob.glob", "numpy.all", "numpy.concatenate", "tensorflow.nn.softmax", "numpy.array", "numpy.array", "numpy.array", "numpy.invert"], ["project_tests.test_load_vgg", "project_tests.test_layers", "project_tests.test_optimize", "project_tests.test_train_nn", "distutils.version.LooseVersion", "distutils.version.LooseVersion", "tensorflow.test.gpu_device_name", "warnings.warn", "tensorflow.saved_model.loader.load", "tensorflow.get_default_graph", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d", "tensorflow.add", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d", "tensorflow.add", "tensorflow.layers.conv2d_transpose", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter", "project_tests.test_for_kitti_dataset", "tensorflow.placeholder", "tensorflow.placeholder", "helper.maybe_download_pretrained_vgg", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.Session", "helper.gen_batch_function", "tensorflow.metrics.mean_iou", "tensorflow.train.Saver", "tensorflow.train.Saver.save", "tensorflow.train.Saver.export_meta_graph", "tensorflow.train.write_graph", "helper.save_inference_samples", "tensorflow.test.gpu_device_name", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.reshape"], "project_tests.test_load_vgg", "project_tests.test_layers", "project_tests.test_optimize", "project_tests.test_train_nn", "distutils.version.LooseVersion", "distutils.version.LooseVersion", "tensorflow.test.gpu_device_name", "warnings.warn", "tensorflow.saved_model.loader.load", "tensorflow.get_default_graph", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d", "tensorflow.add", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d", "tensorflow.add", "tensorflow.layers.conv2d_transpose", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter", "project_tests.test_for_kitti_dataset", "tensorflow.placeholder", "tensorflow.placeholder", "helper.maybe_download_pretrained_vgg", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.Session", "helper.gen_batch_function", "tensorflow.metrics.mean_iou", "tensorflow.train.Saver", "tensorflow.train.Saver.save", "tensorflow.train.Saver.export_meta_graph", "tensorflow.train.write_graph", "helper.save_inference_samples", "tensorflow.test.gpu_device_name", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.reshape"], "module": ["numpy", "tqdm", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Tryking@linear_algebra/linear_regression_project.ipynb": {"API": [["fractions.Fraction"], ["numpy.random.seed", "numpy.random.seed", "numpy.random.normal", "numpy.random.randint", "numpy.random.random.tolist", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.linalg.matrix_rank"], ["unittest.main", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.random", "numpy.random.random.tolist", "numpy.random.randint", "numpy.random.random", "numpy.random.random.tolist", "numpy.array", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.dot", "numpy.array", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint.tolist", "numpy.arange.tolist", "numpy.array", "numpy.hstack", "numpy.random.randint", "numpy.random.random", "numpy.random.random.tolist", "numpy.random.randint", "numpy.random.randint", "numpy.random.random", "numpy.random.random.tolist", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.random", "numpy.random.random.tolist", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint.tolist", "numpy.random.randint.tolist", "numpy.random.randint.tolist", "numpy.random.randint.tolist", "numpy.random.randint.tolist", "numpy.arange.tolist", "numpy.linalg.matrix_rank", "numpy.dot", "numpy.mean", "numpy.random.random.tolist", "numpy.random.randint.tolist", "numpy.random.randint.tolist", "numpy.random.randint.tolist", "numpy.arange", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "matplotlib.pyplot.xlim", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.scatter", "matplotlib.pyplot.show", "matplotlib.pyplot.xlim", "matplotlib.pyplot.axes.get_xlim", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.scatter", "matplotlib.pyplot.show", "matplotlib.pyplot.axes"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/YanRQ@CSE-291/model_analysis.ipynb": {"API": [["subprocess.call", "itertools.product", "subprocess.check_output", "subprocess.check_output.split"], ["subprocess.call", "itertools.product", "subprocess.check_output", "subprocess.check_output.split"], ["subprocess.call", "itertools.product", "subprocess.check_output", "subprocess.check_output.split"], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/GMBarra@T2CC/Tarea_2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "ipywidgets", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gaioNL@Portfolio.Management.Rice.2018/2.Risk Mgt/wk1/rice.riskmgt.wk1.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Abdel-Razzak@DSF/project.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Chokcw@Intro-to-Data-Science-in-Python/Week+3.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/amyhung99@sp18-ee16b/Car Instructions/SIXT33N_Car_Instructions.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tpmccauley@cmsopendata-jupyter/Zmumu.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mixam85@datascience/assigment6/work/Crimes.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ShiFangjun@PRSA/PRSA.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bnajafi@Data-Analysis-with-Python-Pipeline/Notebooks/Step1_introduction_importing_Dataset.ipynb": {"API": [["pandas.read_csv", "pandas.read_csv.head", "pandas.read_csv.corr", "pandas.read_csv.corr", "matplotlib.pyplot.scatter", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "seaborn.regplot", "seaborn.regplot", "pandas.read_csv.corr", "seaborn.regplot", "pandas.read_csv.corr", "scipy.stats.pearsonr", "scipy.stats.pearsonr", "scipy.stats.pearsonr", "scipy.stats.pearsonr", "scipy.stats.pearsonr", "scipy.stats.pearsonr", "scipy.stats.pearsonr", "scipy.stats.pearsonr", "scipy.stats.pearsonr", "matplotlib.pyplot.figure", "seaborn.boxplot", "matplotlib.pyplot.figure", "seaborn.boxplot", "matplotlib.pyplot.figure", "seaborn.boxplot", "matplotlib.pyplot.figure", "seaborn.boxplot", "pandas.read_csv.describe", "pandas.read_csv.describe", "pandas.read_csv.value_counts", "pandas.read_csv.unique", "matplotlib.pyplot.figure", "matplotlib.pyplot.pcolor", "matplotlib.pyplot.colorbar", "matplotlib.pyplot.show", "matplotlib.pyplot.subplots", "matplotlib.pyplot.xticks", "matplotlib.pyplot.show", "scipy.stats.f_oneway", "scipy.stats.f_oneway", "scipy.stats.f_oneway", "scipy.stats.f_oneway", "pandas.read_csv.value_counts", "pandas.read_csv.value_counts", "numpy.arange", "numpy.arange"], ["pandas.read_csv", "pandas.read_csv.head", "pandas.read_csv.tail", "pandas.read_csv.head", "pandas.read_csv.to_csv", "pandas.read_csv.describe", "pandas.read_csv.describe", "pandas.read_csv.info"], ["pandas.read_csv", "pandas.concat.head", "pandas.concat.replace", "pandas.concat.head", "pandas.concat.isnull", "pandas.Series", "pandas.concat.replace", "pandas.concat.replace", "pandas.concat.replace", "pandas.concat.replace", "pandas.concat.replace", "pandas.concat.replace", "pandas.concat.value_counts", "pandas.concat.replace", "pandas.concat.dropna", "pandas.concat.reset_index", "pandas.concat.head", "pandas.concat.isnull", "pandas.Series", "pandas.concat.astype", "pandas.concat.astype", "pandas.concat.head", "pandas.concat.astype", "numpy.arange", "pandas.cut", "pandas.concat.head", "matplotlib.pyplot.hist", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "pandas.get_dummies", "pandas.get_dummies.head", "pandas.get_dummies.rename", "pandas.concat", "pandas.concat.head", "os.chdir", "pandas.concat.to_csv", "pandas.concat.max", "pandas.concat.max", "pandas.concat.max", "pandas.concat.astype", "pandas.concat.astype", "pandas.concat.astype", "pandas.concat.astype", "pandas.concat.astype", "pandas.concat.astype", "pandas.concat.value_counts"]], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/LukasMosser@Jupetro/index.ipynb": {"API": [["numpy.loadtxt", "numpy.loadtxt", "matplotlib.pyplot.subplots"], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ChenBlue@Machine_Learning-HW3-Transfer_Learning/Team48_HW3.ipynb": {"API": [], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/angshu-min-js@python_technical_interview/problems/Basic_Algorithm_Analysis.ipynb": {"API": [[], [], [], ["random.randint", "random.randint"], [], [], [], [], [], [], [], [], [], [], [], [], ["pprint.PrettyPrinter", "pprint.PrettyPrinter.pprint", "pprint.PrettyPrinter.pprint", "pprint.PrettyPrinter.pprint", "pprint.PrettyPrinter.pprint", "pprint.PrettyPrinter.pprint"], []], "module": ["matplotlib", "IPython", "numpy", "nose"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shenchenchester@scrape-yanglao/src/scraper-demo.ipynb": {"API": [["lxml.etree.HTML", "requests.get.xpath", "requests.get.xpath", "csv.DictWriter", "csv.DictWriter.writerows", "lxml.etree.HTML", "codecs.open", "codecs.open.close", "csv.DictWriter.writerow", "requests.get.xpath", "lxml.etree.HTML", "requests.get.xpath", "re.search", "requests.get", "requests.get", "requests.get", "requests.get.xpath", "requests.get.xpath", "requests.get.xpath"]], "module": ["lxml", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chenchuk77@data-science-intro/panda_dataframe.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dhnightingale@spotify-fp/Gathering and Cleaning Data.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mhcamillow@pandas-tutorial/Lesson 2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lsprowl@dataquest-projects/04-Visualizing_College_Major_Earnings/Basics.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/WenlinLan@FM547/hw1.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/evseniordesign@facility-generation/Location Generation.ipynb": {"API": [["pandas.read_csv", "numpy.cov", "numpy.sum", "numpy.sum", "numpy.random.multivariate_normal"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/PyDataOkinawa@meetup016/PyData.Okinawa Meetup 016 - 01 Introduction to PyData.Okinawa.ipynb": {"API": [["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "keras.backend.variable", "keras.backend.variable", "keras.backend.placeholder", "keras.backend.concatenate", "keras.layers.ZeroPadding2D", "keras.layers.ZeroPadding2D.set_input", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "os.path.exists", "h5py.File", "h5py.File.close", "keras.backend.variable", "keras.backend.gradients", "keras.backend.function", "numpy.random.uniform", "scipy.misc.imresize", "numpy.expand_dims", "numpy.random.uniform.transpose", "keras.layers.Convolution2D", "keras.layers.ZeroPadding2D", "keras.layers.Convolution2D", "keras.layers.MaxPooling2D", "keras.layers.ZeroPadding2D", "keras.layers.Convolution2D", "keras.layers.ZeroPadding2D", "keras.layers.Convolution2D", "keras.layers.MaxPooling2D", "keras.layers.ZeroPadding2D", "keras.layers.Convolution2D", "keras.layers.ZeroPadding2D", "keras.layers.Convolution2D", "keras.layers.ZeroPadding2D", "keras.layers.Convolution2D", "keras.layers.MaxPooling2D", "keras.layers.ZeroPadding2D", "keras.layers.Convolution2D", "keras.layers.ZeroPadding2D", "keras.layers.Convolution2D", "keras.layers.ZeroPadding2D", "keras.layers.Convolution2D", "keras.layers.MaxPooling2D", "keras.layers.ZeroPadding2D", "keras.layers.Convolution2D", "keras.layers.ZeroPadding2D", "keras.layers.Convolution2D", "keras.layers.ZeroPadding2D", "keras.layers.Convolution2D", "keras.layers.MaxPooling2D", "keras.backend.batch_flatten", "keras.backend.dot", "keras.backend.sum", "keras.backend.square", "keras.backend.square", "keras.backend.sum", "numpy.random.uniform.reshape", "time.time", "scipy.optimize.fmin_l_bfgs_b", "scipy.misc.imsave", "time.time", "scipy.misc.imread", "keras.backend.ndim", "keras.backend.transpose", "keras.backend.ndim", "keras.backend.ndim", "keras.backend.sum", "keras.backend.square", "keras.backend.ndim", "keras.backend.pow", "numpy.copy", "numpy.random.uniform.flatten", "numpy.clip", "keras.backend.square", "numpy.random.uniform.copy", "numpy.array"]], "module": ["IPython", "matplotlib", "ipywidgets", "scipy", "keras", "numpy", "h5py"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/asure4@Week-3/Titanic EDA.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/volf52@lin-alg/Linear Systems.ipynb": {"API": [["numpy.array_equal", "numpy.around", "numpy.around", "numpy.arccos", "numpy.linalg.norm", "numpy.dot", "numpy.around", "numpy.dot", "numpy.array", "numpy.cross", "numpy.around", "numpy.dot", "numpy.linalg.norm", "numpy.linalg.norm"], ["vector.Vector", "vector.Vector"], [], ["vector.Vector", "vector.Vector"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MxMstrmn@Programmier-Projekte/Jupyter/Perzeptron.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hailykil@Lab-Work/exercise-4/exercise-4-work.ipynb": {"API": [[], [], [], [], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Seph1201@DeepLearning/1_notmnist.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/frubioda@Marathon_runner_results/test.ipynb": {"API": [[], "pandas.Series", "pandas.DataFrame", "matplotlib.pyplot.legend", "numpy.random.randn", "numpy.random.randn", "pandas.date_range"], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JoaoGranja@Winning-Jeopardy/Basics.ipynb": {"API": [], "module": ["numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jesusneg@P177_Homework08/Homework 8.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Abinash52@Star-Wars-Dataquest/Star Wars.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mahermassoud@cell-gene-service/test.ipynb": {"API": [[], [], []], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sliwhu@TED_Talks_Analysis/Project_Report.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MarkPotanin@MarkHomeworks/\u043a\u0430\u043d\u0442\u043e\u04401.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ashleyna94@pandas-challenge/HeroesOfPymoli/HeroesOfPymoli_2_final.ipynb": {"API": ["os.path.join", "pandas.read_json", "pandas.read_json.nunique", "pandas.DataFrame", "pandas.read_json.nunique", "pandas.read_json.mean", "pandas.read_json.sum", "pandas.DataFrame", "pandas.DataFrame.map", "pandas.DataFrame.map", "pandas.DataFrame.map", "pandas.read_json.groupby", "pandas.DataFrame.map", "pandas.DataFrame.map", "pandas.DataFrame.map", "pandas.cut", "pandas.cut.value_counts", "pandas.DataFrame.map", "pandas.cut", "pandas.read_json.copy", "pandas.DataFrame", "pandas.DataFrame.map", "pandas.DataFrame.map", "pandas.DataFrame.map", "pandas.read_json.groupby", "pandas.DataFrame", "pandas.read_json.groupby", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame"], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/merishnaSuwal@Literacy-rate-DataVisualization/Literacy-rate-viz.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lalgadi@pandas-deep-dive/All.ipynb": {"API": [[], ["re.compile", "os.chdir", "csv.writer", "csv.writer", "re.compile", "os.path.dirname", "os.path.isdir", "os.makedirs", "gzip.open", "csv.writer", "gzip.open", "os.path.abspath", "gzip.open", "datetime.datetime.strptime"]], "module": ["IPython", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/scientificloud@entropia/Entropia.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/joseph5299@INFO1903_project/INFO1903_Project.ipynb": {"API": [], "module": ["IPython", "ipywidgets", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chinandrew@sta141bproject/STA141BProject.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "plotly", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/colinmorris@atypicality/hot100_experiments.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/KPMallaney@911-Calls/911+Call+Project.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Mahmoodsalah@Unscented-Kalman-Filter/DataVisualization/readme.ipynb": {"API": [], "module": ["matplotlib", "plotly", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CordeliaQian@Movie_data_analysis/moviedata_cleanup.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/KalraA@SPNz/Comparisons.ipynb": {"API": [[], [], [], ["numpy.array", "numpy.reshape", "numpy.reshape", "numpy.reshape"], [], [], [], [], []], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ltfschoen@aind2-dl/IMDB_In_Keras.ipynb": {"API": [["numpy.load", "numpy.load.items", "numpy.load.keys", "numpy.savetxt"]], "module": ["keras", "pandas", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/daviddesancho@PRESTGARA/code/Ising_2d/ising_template.ipynb": {"API": [[], ["os.path.isdir", "os.mkdir", "ising.Ising_lattice", "os.system", "shutil.rmtree", "ising.Ising_lattice.cond_spin_flip", "numpy.random.random", "numpy.random.random", "ising.Ising_lattice.plot"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/princebirring@Introduction-to-Data-Science/Final-Project/Philadelphia data EDA.ipynb": {"API": [], "module": ["matplotlib", "pandas", "scipy", "statsmodels", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/debu3645@Python-University-of-Michigan-Assignment/Assignment+2-Copy1.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/manuSrep@Plotting/Python/Line_and_dot_plots_py.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aadimator@numerical-computing/Bisection Method.ipynb": {"API": [], "module": ["numpy", "sympy", "plotly", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Coolbluewhale@test/Region Masking.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/thischoi@Project_Data/Project - Organizing Data 2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/watrool@aind2-rnn/RNN_project.ipynb": {"API": [["numpy.asarray", "numpy.asarray", "numpy.random.seed", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.optimizers.RMSprop", "keras.models.Sequential.compile", "numpy.asarray", "numpy.asarray", "numpy.asarray.append", "numpy.asarray.append", "numpy.shape", "keras.layers.LSTM", "keras.layers.Dense", "numpy.shape"]], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gavinln@tensorflow-ipy/notebooks/02-linear_models.ipynb": {"API": [["tensorflow.constant", "tensorflow.Session", "tensorflow.constant", "tensorflow.constant", "tensorflow.Session.run", "tensorflow.Session.run"], ["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/avirmaux@CoSaMP/cosamp.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sunsided@DAND-CardDraws/cards.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Eyrx@Capstone/DS_Capstone1.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Tiryoh@raspimouse_jupyternotebook/motor_controller.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MyFlyingEye@PN-Inventory_Python-Pandas/WOSS.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zhuzhen216@Leetcode/229. Majority Element II.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ShidduPatil@hw/ hw1.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mattbraendle@deep_learning/01_course/toyexample_feedforward_233network.ipynb": {"API": [["numpy.exp", "numpy.arange", "numpy.mean", "numpy.exp.sum", "numpy.exp"], ["pandas.read_csv", "pandas.read_csv.as_matrix", "numpy.zeros", "numpy.zeros", "numpy.arange"], ["numpy.exp", "numpy.arange", "numpy.mean", "numpy.exp.sum", "numpy.exp"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chenhe82166@TensorFlow-Examples/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/carlosjarguello@scipy_exercises/Airline_Exercise.ipynb": {"API": [], "module": ["matplotlib", "pandas", "scipy", "statsmodels", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alex-n-braun@semantic-segmentation/main.ipynb": {"API": [["tensorflow.assert_rank", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "os.path.join", "copy.deepcopy", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.zeros", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session", "glob.glob", "glob.glob", "glob.glob", "tensorflow.Graph.as_default", "unittest.mock.MagicMock", "unittest.mock.call", "tensorflow.global_variables_initializer", "os.path.join", "os.path.join", "os.path.join", "numpy.arange", "tensorflow.Graph", "numpy.prod", "numpy.arange", "numpy.arange", "numpy.prod", "numpy.prod"], ["glob.glob", "zipfile.ZipFile", "glob.glob", "numpy.array", "random.shuffle", "numpy.dot", "shutil.rmtree", "shutil.rmtree", "urllib.request.urlretrieve", "re.sub", "numpy.array", "time.time", "glob.glob", "numpy.all", "numpy.concatenate", "tensorflow.nn.softmax", "numpy.array", "numpy.array", "numpy.array", "numpy.invert"], ["project_tests.test_load_vgg", "project_tests.test_layers", "project_tests.test_optimize", "project_tests.test_train_nn", "distutils.version.LooseVersion", "distutils.version.LooseVersion", "tensorflow.test.gpu_device_name", "warnings.warn", "tensorflow.saved_model.loader.load", "tensorflow.get_default_graph", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.layers.conv2d_transpose", "tensorflow.add", "tensorflow.layers.conv2d_transpose", "tensorflow.add", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.reduce_mean", "project_tests.test_for_kitti_dataset", "helper.maybe_download_pretrained_vgg", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.shape", "tensorflow.Session", "helper.gen_batch_function", "tensorflow.placeholder", "tensorflow.placeholder", "helper.save_inference_samples", "tensorflow.test.gpu_device_name", "tensorflow.train.AdamOptimizer", "tensorflow.global_variables_initializer"]], "module": ["matplotlib", "scipy", "numpy", "tensorflow", "tqdm"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sandeepyg@Data-Exploration/Assignment.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ahribeng@udacity_route_planner/project_notebook.ipynb": {"API": [["plotly.offline.init_notebook_mode", "networkx.get_node_attributes", "pickle.load.edges", "pickle.load.nodes", "plotly.offline.iplot", "networkx.get_node_attributes", "pickle.load", "pickle.load.adjacency_list", "pickle.dump", "pickle.load.nodes"], ["math.sqrt", "heapq.heappush", "heapq.heappop"], ["helpers.load_map"]], "module": ["networkx", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/LeeDaKyeong@MLP/MLP.ipynb": {"API": [], "module": ["matplotlib", "numpy", "keras", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jstac@yale_class_2016/equilibrium_1.ipynb": {"API": [["scipy.optimize.bisect", "numpy.exp"], ["numpy.exp"], "numpy.exp"], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/patonelli@map2110-modelagem/permutations1.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/turboquant@datakungfu/kung_fu_notes.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Kejia@newtop/newtop.ipynb": {"API": [], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rc1208@rocksVMines/rocks-versus-mines-1.ipynb": {"API": ["urllib.request.urlopen", "numpy.genfromtxt"], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Gerhard-Zhang@tianchi-yancheng-shangpaishu/process_data_2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "keras", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ethanscho@numpy-practices/Statistics_solutions.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/akshayr96@Machine-Learning-Basic-Algorithms/Linear Regression/Linear Regression by Gradient Descent.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ellewibisono@pythondataanalysis/LatLong.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/diego898@deep-learning-without-phd-notes/notebooks/MNIST 2.0.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mattcwilde@DataVizualization/Census2000vs1900/Census2000vs1900.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/clai-shda@shelter_animal_outcomes/EDA.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/noahkim11@neuralNetwork/neural network.ipynb": {"API": ["numpy.random.normal", "numpy.random.normal", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.array", "numpy.arry", "numpy.dot", "numpy.dot", "numpy.array", "numpy.transpose", "numpy.transpose"], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hejujie@Learn_Tensorflow/Tensorflow_Example/2_BasicModel/logistic_regression.ipynb": {"API": ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.arg_max", "tensorflow.arg_max", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lwkuant@Side_Project_Taipei_MRT_OD_Traffic_Analysis/Analysis.ipynb": {"API": [[]], "module": ["matplotlib", "pandas", "numpy", "seaborn", "networkx"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shuopwang@Tweet-classification/model/Bayes.ipynb": {"API": [], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Joe-Stock@Python_Assignment/Stock_penguins.ipynb": {"API": [["pandas.read_csv", "Bio.SeqIO.parse"]], "module": ["pandas", "numpy", "matplotlib", "Bio"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/scottyla19@my_voice/My Voice.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/minsuk-heo@pandas/Pandas_Cheatsheet.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/whanley@Ottoman-Gazetteer/data/wikidata-reconciliation.ipynb": {"API": [], "module": ["requests", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/progressTogether@artificialIntelligenceDocument/CSDN/deepLearning/converlutionNeualNetwork/codeExample/L2_1_1_convolutional_nn_slim.ipynb": {"API": ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.add_n", "tensorflow.Session", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.name_scope", "tensorflow.reshape", "tensorflow.name_scope", "tensorflow.contrib.slim.conv2d", "tensorflow.name_scope", "tensorflow.contrib.slim.max_pool2d", "tensorflow.name_scope", "tensorflow.contrib.slim.conv2d", "tensorflow.name_scope", "tensorflow.contrib.slim.max_pool2d", "tensorflow.name_scope", "tensorflow.contrib.slim.avg_pool2d", "tensorflow.contrib.slim.conv2d", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.nn.dropout", "tensorflow.name_scope", "tensorflow.squeeze", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session.run", "tensorflow.contrib.slim.conv2d", "tensorflow.nn.l2_loss", "tensorflow.train.GradientDescentOptimizer", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.get_collection", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run"], "module": ["keras", "numpy", "tensorflow", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mkjmkumar@Python_NumPy_excercise/NumPy_Excercises.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Sylatac@DataVis/N-sigma Normal Distribution Figure.ipynb": {"API": [[], [], ["matplotlib.pyplot.figure", "matplotlib.pyplot.title", "matplotlib.pyplot.subplot", "scipy.linspace", "matplotlib.pyplot.subplot.annotate", "matplotlib.pyplot.subplot.annotate", "matplotlib.pyplot.subplot.annotate", "matplotlib.pyplot.subplot.annotate", "matplotlib.pyplot.subplot.annotate", "matplotlib.pyplot.subplot.annotate", "matplotlib.transforms.Bbox", "matplotlib.patches.FancyBboxPatch", "matplotlib.pyplot.subplot.add_patch", "matplotlib.pyplot.subplot.annotate", "matplotlib.pyplot.subplot.set_xlim", "matplotlib.pyplot.subplot.set_ylim", "matplotlib.pyplot.subplot.text", "matplotlib.pyplot.subplot.text", "matplotlib.pyplot.tick_params", "matplotlib.pyplot.tick_params", "matplotlib.pyplot.show", "matplotlib.pyplot.subplot.annotate", "scipy.stats.norm", "scipy.stats.norm.pdf", "matplotlib.pyplot.plot", "matplotlib.pyplot.gca.fill_between", "matplotlib.pyplot.plot", "scipy.stats.norm.pdf", "matplotlib.pyplot.plot", "scipy.stats.norm.pdf", "matplotlib.pyplot.plot", "matplotlib.ticker.MultipleLocator", "matplotlib.ticker.FuncFormatter", "matplotlib.ticker.AutoMinorLocator", "matplotlib.ticker.MultipleLocator", "matplotlib.ticker.FuncFormatter", "matplotlib.ticker.AutoMinorLocator", "matplotlib.pyplot.figure.savefig", "scipy.stats.norm", "matplotlib.pyplot.gca", "scipy.stats.norm", "scipy.mod", "scipy.stats.norm", "scipy.stats.norm", "scipy.stats.norm", "scipy.stats.norm", "scipy.stats.norm"], "matplotlib.pyplot.figure", "matplotlib.pyplot.title", "matplotlib.pyplot.subplot", "scipy.linspace", "matplotlib.pyplot.subplot.annotate", "matplotlib.pyplot.subplot.annotate", "matplotlib.pyplot.subplot.annotate", "matplotlib.pyplot.subplot.annotate", "matplotlib.pyplot.subplot.annotate", "matplotlib.pyplot.subplot.annotate", "matplotlib.transforms.Bbox", "matplotlib.patches.FancyBboxPatch", "matplotlib.pyplot.subplot.add_patch", "matplotlib.pyplot.subplot.annotate", "matplotlib.pyplot.subplot.set_xlim", "matplotlib.pyplot.subplot.set_ylim", "matplotlib.pyplot.subplot.text", "matplotlib.pyplot.subplot.text", "matplotlib.pyplot.tick_params", "matplotlib.pyplot.tick_params", "matplotlib.pyplot.show", "matplotlib.pyplot.subplot.annotate", "scipy.stats.norm", "scipy.stats.norm.pdf", "matplotlib.pyplot.plot", "matplotlib.pyplot.gca.fill_between", "matplotlib.pyplot.plot", "scipy.stats.norm.pdf", "matplotlib.pyplot.plot", "scipy.stats.norm.pdf", "matplotlib.pyplot.plot", "matplotlib.ticker.MultipleLocator", "matplotlib.ticker.FuncFormatter", "matplotlib.ticker.AutoMinorLocator", "matplotlib.ticker.MultipleLocator", "matplotlib.ticker.FuncFormatter", "matplotlib.ticker.AutoMinorLocator", "matplotlib.pyplot.figure.savefig", "scipy.stats.norm", "matplotlib.pyplot.gca", "scipy.stats.norm", "scipy.mod", "scipy.stats.norm", "scipy.stats.norm", "scipy.stats.norm", "scipy.stats.norm", "scipy.stats.norm"], "module": ["matplotlib", "pandas", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chrisprabhu@Ride-Sharing-App-Analysis/Pyber+Homework.ipynb": {"API": [["pandas.read_csv", "pandas.read_csv", "pandas.merge", "seaborn.set", "matplotlib.pyplot.figure", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "matplotlib.pyplot.pie", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.pie", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.pie", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.show"]], "module": ["matplotlib", "seaborn", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dward4@Computer-Vision/lec01_intro_to_numpy.ipynb": {"API": ["numpy.array", "numpy.arange.reshape", "numpy.arange.reshape", "numpy.linspace.reshape", "numpy.random.random", "numpy.eye", "numpy.eye", "numpy.arange", "numpy.arange.reshape", "numpy.arange.reshape", "numpy.arange.ravel", "numpy.arange.flatten", "numpy.arange.reshape", "numpy.array", "numpy.arange.reshape", "numpy.arange.reshape", "numpy.arange", "numpy.arange", "numpy.arange.reshape", "numpy.arange.reshape", "numpy.arange.reshape", "numpy.arange.reshape", "numpy.arange.reshape", "numpy.random.random", "numpy.arange.astype", "numpy.arange.argmax", "numpy.arange.reshape", "numpy.arange.reshape", "numpy.concatenate", "numpy.random.random", "numpy.average", "numpy.random.random", "numpy.cumsum", "numpy.unravel_index", "numpy.concatenate", "numpy.concatenate", "numpy.arange", "numpy.linspace", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.cumsum"], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NickYuu@TensorFlow/Mnist/00-\u8cc7\u6599\u9810\u8655\u88e1.ipynb": {"API": [["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "time.time", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.Session.close", "tensorflow.Session.run", "tensorflow.Session.run", "pandas.DataFrame", "pandas.crosstab", "tensorflow.Variable", "tensorflow.Variable", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.show", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "time.time", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.random_normal", "tensorflow.zeros", "tensorflow.matmul", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.imshow", "matplotlib.pyplot.subplot.set_title", "matplotlib.pyplot.subplot.set_xticks", "matplotlib.pyplot.subplot.set_yticks", "tensorflow.train.AdamOptimizer", "tensorflow.Session.run", "numpy.reshape"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "time.time", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "time.time", "tensorflow.random_normal", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "tensorflow.Session.run", "time.time"], ["numpy.random.rand.astype", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "time.time", "tensorflow.Session.close", "tensorflow.random_normal", "tensorflow.zeros", "tensorflow.square", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.Session.run", "time.time", "numpy.random.rand", "tensorflow.train.GradientDescentOptimizer", "tensorflow.square", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run"], ["numpy.random.seed", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show"]], "module": ["matplotlib", "numpy", "tensorflow", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ttw2514@data_analyst/P0 bike_sharing/Bay_Area_Bike_Share_Analysis.ipynb": {"API": [["matplotlib.pyplot.figure", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.xticks", "matplotlib.pyplot.hist", "matplotlib.pyplot.bar", "numpy.floor", "numpy.ceil"], ["babs_visualizations.usage_stats", "numpy.array", "numpy.allclose", "numpy.allclose", "numpy.array", "numpy.allclose", "numpy.array", "numpy.array_equal"]], "module": ["matplotlib", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/artemzi@st-01/Workspace-statistics-01.ipynb": {"API": [], "module": ["matplotlib", "pandas", "scipy", "statsmodels", "numpy", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/RohYoungMyung@DeepLearningTutorial/mnist-rnn.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/seyedvahidmirnezami@test/newIpython.ipynb": {"API": [[]], "module": ["keras", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/LVdatahub@Data-wrangling-JSON-and-XML-/sliderule_dsi_xml_exercise.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vsumanbabu@DeepLearning-LanguageTranslation/dlnd_language_translation.ipynb": {"API": [["os.path.join", "pickle.dump", "pickle.load", "copy.copy", "pickle.dump", "pickle.load", "copy.copy.items", "numpy.array", "numpy.array"], ["helper.create_lookup_tables", "helper.create_lookup_tables", "numpy.array_equal", "tensorflow.Graph.as_default", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.LSTMStateTuple", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session", "tensorflow.variable_scope", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.LSTMStateTuple", "tensorflow.variable_scope", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.LSTMStateTuple", "itertools.chain.from_iterable", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.contrib.layers.fully_connected", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph", "tensorflow.contrib.layers.fully_connected", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/edsu@papvc-topicmodel/notebook.ipynb": {"API": [[]], "module": ["gensim"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mlestep@biochem/thermshift/thermshift.ipynb": {"API": [], "module": ["numpy", "sympy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/YoucefZemmouri@Graphical_Model_HMK3/Main_TROUSSARD_ZEMMOURI.ipynb": {"API": [["numpy.zeros", "numpy.zeros", "numpy.exp", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.argmax", "numpy.sqrt", "numpy.exp", "numpy.log", "numpy.max", "numpy.log", "numpy.max", "numpy.abs", "numpy.log", "numpy.log", "numpy.max", "numpy.zeros", "numpy.max", "numpy.sum", "numpy.tile", "numpy.sum", "numpy.tile", "numpy.zeros", "numpy.log", "numpy.log", "numpy.argmax", "numpy.linalg.det", "numpy.linalg.inv", "numpy.log", "numpy.log", "numpy.log", "numpy.exp", "numpy.max", "numpy.exp", "numpy.exp", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.max", "numpy.log", "numpy.log", "numpy.sum", "numpy.log", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.multiply", "numpy.dot", "numpy.log", "numpy.exp", "numpy.log", "numpy.exp", "numpy.max", "numpy.log", "numpy.log", "numpy.log", "numpy.tile"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/qubvel@residual_attention_network/train_cifar10.ipynb": {"API": [[], ["keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Add", "keras.layers.MaxPool2D", "keras.layers.UpSampling2D", "keras.layers.Activation", "keras.layers.Add.Lambda", "keras.layers.Multiply", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv2D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv2D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv2D", "keras.layers.Add", "keras.layers.MaxPool2D", "keras.layers.MaxPool2D", "keras.layers.UpSampling2D", "keras.layers.Add", "keras.layers.UpSampling2D", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.Lambda", "keras.layers.Multiply", "keras.layers.Conv2D", "keras.layers.MaxPool2D", "keras.layers.UpSampling2D", "keras.layers.Add"], ["keras.regularizers.l2", "keras.layers.Input", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.MaxPool2D", "blocks.residual_block", "blocks.attention_block", "blocks.residual_block", "blocks.attention_block", "blocks.attention_block", "blocks.residual_block", "blocks.attention_block", "blocks.attention_block", "blocks.attention_block", "blocks.residual_block", "blocks.residual_block", "blocks.residual_block", "keras.layers.Flatten", "keras.models.Model", "keras.regularizers.l2", "keras.layers.Input", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.MaxPool2D", "blocks.residual_block", "blocks.attention_block", "blocks.residual_block", "blocks.attention_block", "blocks.residual_block", "blocks.attention_block", "blocks.residual_block", "blocks.residual_block", "blocks.residual_block", "keras.layers.Flatten", "keras.models.Model", "keras.layers.Input", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.MaxPool2D", "blocks.residual_block", "blocks.attention_block", "blocks.residual_block", "blocks.attention_block", "blocks.residual_block", "blocks.attention_block", "blocks.residual_block", "blocks.residual_block", "blocks.residual_block", "keras.layers.AveragePooling2D", "keras.layers.Flatten", "keras.models.Model", "keras.layers.Conv2D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.MaxPool2D", "keras.layers.AveragePooling2D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Conv2D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.MaxPool2D", "keras.layers.AveragePooling2D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Conv2D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.MaxPool2D", "keras.layers.AveragePooling2D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Dropout", "keras.layers.Dropout", "keras.layers.Flatten.get_shape", "keras.layers.Flatten.get_shape", "keras.layers.Flatten.get_shape", "keras.layers.Flatten.get_shape"]], "module": ["keras", "IPython", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/eileenforwhat@traffic-sign-classifier/Traffic_Sign_Classifier.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kafonek@pez/Pez Pandas #1.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Hava842@MLSALT4/VAE-Copy1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nsoontie@IntroPython/Introduction to Python.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/oscarsiamo@Astronom-a-Experimental/Codigo_crearlistade_targets(v4).ipynb": {"API": [], "module": ["matplotlib", "numpy", "astropy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vaibhavbhardwaj@Guided-Project_-Star-Wars-Survey/Basics.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mat-esp-2015@capstone-rafael-thais/capstone.ipynb": {"API": ["matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "math.floor", "math.floor", "math.floor"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yorktronic@crypto_rando/verge_privacy_test.ipynb": {"API": ["requests.get", "requests.get", "re.findall", "re.findall"], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shibinmak@tic-tac-toe-game-python-project/tic tac toe.ipynb": {"API": [], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/clauma0828@Taller-Evaluable/Taller 2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Logan213@IS360_Final_Project/IS_360_Final_Project.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/resonance@image2xml/XML (RNN Generic)/XML.ipynb": {"API": [["os.listdir", "os.listdir.remove", "os.listdir", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.rename", "os.path.isfile", "os.path.join", "sys.exit"], ["os.listdir", "os.listdir.remove", "os.path.isfile", "os.path.join", "random.randint", "re.sub", "random.randint", "re.sub", "re.findall"], [], ["os.path.basename", "os.path.basename"], ["os.path.basename", "os.path.basename"], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.listdir"], ["json.load"], [], ["random.choice", "random.randint", "random.choice", "random.choice"], [], ["os.path.basename", "os.path.basename"], ["os.path.basename", "os.path.basename"], ["os.path.basename", "os.path.basename"], ["json.load"], [], ["random.choice", "random.randint", "random.choice", "random.choice"], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/armyohse@bitcoin/cnn-stock.ipynb": {"API": [[], ["pandas.read_csv", "numpy.array", "numpy.array", "numpy.array", "numpy.reshape", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.set_size_inches", "matplotlib.pyplot.Axes", "matplotlib.pyplot.Axes.set_axis_off", "matplotlib.pyplot.figure.add_axes", "matplotlib.pyplot.plot", "matplotlib.pyplot.ylim", "matplotlib.pyplot.figure.savefig", "matplotlib.pyplot.close", "matplotlib.image.imread", "numpy.array.append", "random.shuffle", "numpy.array", "numpy.array", "numpy.array.append", "numpy.array.append", "numpy.array", "numpy.array", "numpy.reshape", "numpy.array.append", "numpy.array.append"], ["models.cnn_graph", "tensorflow.Session", "tensorflow.train.Saver", "tensorflow.train.Saver.restore", "numpy.reshape", "matplotlib.pyplot.imshow"], ["tensorflow.Graph", "tensorflow.reset_default_graph", "tensorflow.Graph", "tensorflow.reset_default_graph", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.to_float", "tensorflow.reduce_mean", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.rnn_cell.BasicRNNCell", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.dynamic_rnn", "tensorflow.transpose", "tensorflow.nn.sigmoid", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.to_float", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.train.Saver", "tensorflow.square", "tensorflow.to_float", "tensorflow.square", "tensorflow.to_float", "tensorflow.global_variables_initializer", "tensorflow.train.Saver.save", "tensorflow.train.Saver.restore", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.equal", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.matmul", "tensorflow.equal", "time.time", "time.time"], "pandas.read_csv", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.array", "numpy.array", "numpy.array", "numpy.reshape", "numpy.array", "numpy.array", "numpy.reshape", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.set_size_inches", "matplotlib.pyplot.Axes", "matplotlib.pyplot.Axes.set_axis_off", "matplotlib.pyplot.figure.add_axes", "matplotlib.pyplot.plot", "matplotlib.pyplot.ylim", "matplotlib.pyplot.figure.savefig", "matplotlib.pyplot.close", "matplotlib.image.imread", "numpy.array.append", "random.shuffle", "numpy.array", "numpy.array", "numpy.array.append", "numpy.array.append", "numpy.array.append", "numpy.array.append"], "module": ["matplotlib", "pandas", "keras", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ManuelLevi@eai_fire_challenge/metadata.ipynb": {"API": [["boto3.client", "botocore.client.Config.list_objects", "os.path.exists", "os.mkdir", "botocore.client.Config.get_paginator", "botocore.client.Config", "botocore.client.Config.list_objects", "os.path.split", "os.path.join", "botocore.client.Config.download_file", "os.path.exists", "os.makedirs", "os.path.join"], ["os.walk", "pandas.DataFrame", "os.path.join", "pandas.DataFrame.append", "json.load"]], "module": ["botocore", "matplotlib", "pandas", "numpy", "boto3"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/erikmackie@testing/Assert.ipynb": {"API": [[], ["numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin"], [], [], []], "module": ["nose", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ivasio@MultiprocessComputations/pthreadMergeSort/Statistics.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shagunsodhani@PyDataConf2017/notebook/SiameseNetworkDropout.ipynb": {"API": [[], ["keras.backend.sqrt", "keras.backend.mean", "keras.backend.mean", "numpy.mean", "keras.backend.sum", "keras.backend.sigmoid", "numpy.equal", "numpy.asarray", "keras.backend.square", "keras.backend.square", "keras.backend.square", "keras.backend.sum", "keras.backend.sum", "keras.backend.maximum"]], "module": ["matplotlib", "pandas", "keras", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yaz263@quant-python/python-secret-notebook-empty.ipynb": {"API": [[]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/elisiojsj@Bike-Sharing-Neural-Network/dlnd-your-first-neural-network.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ps2@LoopExplain/Loop Explain.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ramonrcn@Roubos-e-Furtos-2016-17/Roubos 2016-2017.ipynb": {"API": [], "module": ["matplotlib", "folium", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rebeccabilbro@Tutorials/nba/NBA Player Statistics Workshop.ipynb": {"API": [[], [], [], [], []], "module": ["matplotlib", "IPython", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Pranav21091996@Coursera_Machine_Learning/Predicting_House_Price_King_City_One_feature.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lizpund@iss-data-python/ISS+Data+via+API.ipynb": {"API": ["requests.get", "requests.get.json", "requests.get", "requests.get", "requests.get.json", "requests.get", "requests.get.json", "json.loads", "datetime.datetime.fromtimestamp", "urllib.request.urlopen"], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shaz13@MECDATA17/NJO.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/antoszy@RoboND-Segmentation-Lab/code/segmentation_lab.ipynb": {"API": [["os.path.join", "os.path.join", "tensorflow.contrib.keras.python.keras.models.model_from_json.to_json", "tensorflow.contrib.keras.python.keras.models.model_from_json.save_weights", "os.path.join", "os.path.join", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.exists", "os.makedirs", "json.dump", "tensorflow.contrib.keras.python.keras.models.model_from_json", "tensorflow.contrib.keras.python.keras.models.model_from_json.load_weights", "glob.glob", "scipy.misc.imread", "scipy.misc.imsave", "json.load", "os.path.join", "scipy.misc.imresize", "numpy.expand_dims", "os.path.join", "numpy.squeeze", "numpy.expand_dims.astype", "os.path.basename"], ["matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "numpy.array", "numpy.array", "numpy.random.permutation", "scipy.misc.imread", "scipy.misc.imread", "os.path.join", "tensorflow.contrib.keras.python.keras.utils.vis_utils.plot_model", "tensorflow.contrib.keras.python.keras.utils.vis_utils.plot_model", "matplotlib.pyplot.plot", "matplotlib.patches.Patch", "matplotlib.pyplot.legend", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.show", "os.path.exists", "os.makedirs", "numpy.ones", "glob.glob", "glob.glob", "glob.glob", "os.path.join", "os.path.join", "numpy.arange", "scipy.misc.imread", "os.path.join", "os.path.join", "matplotlib.pyplot.plot", "matplotlib.patches.Patch", "numpy.concatenate", "os.path.join", "os.path.join", "os.path.join", "scipy.misc.imresize", "scipy.misc.imresize"], ["numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.zeros", "numpy.zeros", "numpy.random.randint", "numpy.random.randint", "numpy.zeros", "glob.glob", "glob.glob", "numpy.zeros", "scipy.misc.imread", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "os.path.join", "os.path.join", "tensorflow.contrib.keras.python.keras.backend.floatx", "scipy.misc.imresize", "tensorflow.contrib.keras.python.keras.backend.floatx", "scipy.misc.imresize", "scipy.misc.imread"], ["tensorflow.contrib.keras.python.keras.utils.generic_utils.get_custom_objects.update", "tensorflow.python.framework.ops.name_scope", "tensorflow.python.framework.ops.convert_to_tensor", "tensorflow.python.framework.ops.convert_to_tensor", "tensorflow.python.framework.ops.convert_to_tensor", "tensorflow.python.ops.nn_ops.with_space_to_batch", "tensorflow.python.ops.nn_ops.conv2d", "tensorflow.python.ops.init_ops.zeros_initializer", "tensorflow.python.layers.base.InputSpec", "tensorflow.python.layers.utils.conv_output_length", "tensorflow.python.layers.utils.conv_output_length", "tensorflow.contrib.keras.python.keras.constraints.get", "tensorflow.contrib.keras.python.keras.constraints.get", "tensorflow.contrib.keras.python.keras.constraints.get", "tensorflow.contrib.keras.python.keras.backend.int_shape", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.image_ops.resize_bilinear", "tensorflow.python.ops.image_ops.resize_bilinear.set_shape", "tensorflow.contrib.keras.python.keras.utils.conv_utils.normalize_data_format", "tensorflow.contrib.keras.python.keras.utils.conv_utils.normalize_tuple", "tensorflow.contrib.keras.python.keras.engine.InputSpec", "tensorflow.contrib.keras.python.keras.utils.generic_utils.get_custom_objects", "tensorflow.python.ops.nn_ops.depthwise_conv2d_native", "tensorflow.python.ops.array_ops.transpose", "tensorflow.python.ops.array_ops.transpose", "tensorflow.python.ops.nn.bias_add", "tensorflow.contrib.keras.python.keras.backend.image_data_format", "tensorflow.contrib.keras.python.keras.activations.serialize", "tensorflow.contrib.keras.python.keras.initializers.serialize", "tensorflow.contrib.keras.python.keras.initializers.serialize", "tensorflow.contrib.keras.python.keras.initializers.serialize", "tensorflow.contrib.keras.python.keras.regularizers.serialize", "tensorflow.contrib.keras.python.keras.regularizers.serialize", "tensorflow.contrib.keras.python.keras.regularizers.serialize", "tensorflow.contrib.keras.python.keras.regularizers.serialize", "tensorflow.contrib.keras.python.keras.constraints.serialize", "tensorflow.contrib.keras.python.keras.constraints.serialize", "tensorflow.contrib.keras.python.keras.constraints.serialize", "tensorflow.python.ops.array_ops.shape", "tensorflow.contrib.keras.python.keras.backend.int_shape", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.image_ops.resize_bilinear", "tensorflow.python.ops.image_ops.resize_bilinear.set_shape", "tensorflow.python.framework.ops.convert_to_tensor.get_shape", "tensorflow.python.ops.array_ops.shape", "tensorflow.contrib.keras.python.keras.activations.get", "tensorflow.contrib.keras.python.keras.initializers.get", "tensorflow.contrib.keras.python.keras.initializers.get", "tensorflow.contrib.keras.python.keras.initializers.get", "tensorflow.contrib.keras.python.keras.regularizers.get", "tensorflow.contrib.keras.python.keras.regularizers.get", "tensorflow.contrib.keras.python.keras.regularizers.get", "tensorflow.contrib.keras.python.keras.regularizers.get", "tensorflow.python.ops.array_ops.shape", "tensorflow.python.framework.ops.convert_to_tensor.get_shape", "tensorflow.python.layers.utils.convert_data_format", "tensorflow.contrib.keras.python.keras.constraints.serialize.items", "numpy.array", "tensorflow.contrib.keras.python.keras.constraints.serialize.items", "tensorflow.python.framework.ops.convert_to_tensor.get_shape", "tensorflow.python.framework.ops.convert_to_tensor.get_shape", "numpy.array"], ["glob.glob", "glob.glob", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "os.path.join", "os.path.join", "scipy.misc.imresize", "numpy.clip", "scipy.misc.imread", "scipy.misc.imread"]], "module": ["utils", "matplotlib", "scipy", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/humzaiqbal@CV-Workshop/Tensorflow CNN.ipynb": {"API": ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool"], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tdeason416@interview_prep/tech_interview_questions.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/HY0095@d01_LogisticRegression/Untitled.ipynb": {"API": [["statsmodels.api.add_constant", "numpy.array", "pandas.DataFrame", "numpy.dot", "numpy.dot", "numpy.dot", "scipy.stats.chisqprob", "pandas.DataFrame", "copy.copy", "copy.copy.remove", "statsmodels.api.Logit", "statsmodels.api.Logit.fit", "numpy.arange", "numpy.ones.append", "numpy.ones", "scipy.stats.norm.cdf", "numpy.dot", "numpy.dot", "numpy.exp", "numpy.linalg.inv", "numpy.vstack", "pandas.DataFrame", "statsmodels.api.Logit", "statsmodels.api.Logit.fit", "numpy.vstack", "pandas.DataFrame", "copy.copy.remove", "numpy.log", "numpy.abs", "numpy.dot", "numpy.eye", "statsmodels.api.Logit", "statsmodels.api.Logit.fit"]], "module": ["matplotlib", "pandas", "scipy", "statsmodels", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/anildharni@Data-preparation-and-exploration-Tutorial-material-part-3/Exploratory Data Analysis..ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hnkulkarni@udacity/minflow/minflow.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rtspeaks360@mnist-tensorflow/mnist-conv.ipynb": {"API": [["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.InteractiveSession", "tensorflow.global_variables_initializer.run", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.InteractiveSession.run", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.InteractiveSession.run", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.global_variables_initializer", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.InteractiveSession", "tensorflow.global_variables_initializer.run", "tensorflow.equal", "tensorflow.reduce_mean", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "tensorflow.app.run", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.InteractiveSession.run", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.InteractiveSession.run", "tensorflow.train.GradientDescentOptimizer", "tensorflow.global_variables_initializer"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.InteractiveSession", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.InteractiveSession.run", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.placeholder", "tensorflow.nn.dropout", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.global_variables_initializer", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.train.AdamOptimizer.run", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.truncated_normal", "tensorflow.Variable", "tensorflow.constant", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.max_pool", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.InteractiveSession.run", "tensorflow.train.GradientDescentOptimizer", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.global_variables_initializer", "tensorflow.train.AdamOptimizer.run", "tensorflow.cast.eval", "tensorflow.cast.eval"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mallaham@MET-Museum-NYC/MET_Visualizations.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jupithunder@Python3.6/Single_Neuron_or_gate.ipynb": {"API": ["numpy.array", "random.random", "numpy.array", "numpy.array", "numpy.dot", "math.pow", "random.random", "random.random"], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/surelyourejoking@ElectrodynamicsPy/examples.ipynb": {"API": [["numpy.array", "math.factorial", "math.factorial", "math.factorial", "math.factorial"], ["numpy.sqrt", "numpy.sqrt", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.show", "numpy.linspace", "numpy.linspace", "matplotlib.pyplot.streamplot", "matplotlib.pyplot.draw", "matplotlib.pyplot.contour", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.sqrt", "numpy.sqrt"], ["point_charges_2D.Charge", "point_charges_2D.Charge", "point_charges_2D.Charge"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wusai2333@CSE255/Classes/1.5.MoreSpark/7. Spark SQL_CLASS.ipynb": {"API": [[], [], [], [], [], [], [], [], ["numpy.arange", "matplotlib.pylab.loglog", "matplotlib.pylab.loglog", "matplotlib.pylab.loglog", "numpy.arange", "matplotlib.pylab.loglog", "scipy.special.erf", "scipy.special.erfinv"], [], [], [], [], [], ["os.path.isfile", "urllib.urlretrieve", "re.sub"], [], ["ipywidgets.interactive", "ipywidgets.VBox", "matplotlib.pyplot.show", "YearPlotter.YearPlotter", "matplotlib.pyplot.figure", "ipywidgets.HBox", "ipywidgets.FloatSlider"], ["matplotlib.dates.DateFormatter", "matplotlib.dates.MonthLocator", "numpy.shape", "datetime.date.fromordinal", "numpy.shape"], [], ["numpy.array", "numpy.dot", "numpy.nan_to_num", "numpy.vstack", "numpy.dot", "numpy.shape", "numpy.zeros", "numpy.zeros", "numpy.array", "numpy.nan_to_num"], ["numpy.array", "numpy.sqrt", "numpy.array", "numpy.float64", "numpy.isnan", "numpy.isnan"], ["numpy.frombuffer"], [], [], []], "module": ["matplotlib", "numpy", "ipywidgets", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/akwiat@matsci331/pset3.ipynb": {"API": [["matplotlib.pyplot.show", "numpy.zeros", "numpy.zeros", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot"], [], ["Computation.Computation", "numpy.exp", "Constants.kT_in_eV", "Atom.Atom", "Vector3d.Vector3d"], ["Vector3d.Vector3d", "Vector3d.Vector3d", "Vector3d.Vector3d"], [], ["random.seed", "ParticleSim.ParticleSim", "Simulation.Simulation", "ComputationalCell.FccCell", "ComputationalCell.FccCell.initialize", "ComputationalCell.FccCell.randomize_velocities", "ComputationalCell.FccCell.scale_kinetic_energy_per_atom"], ["Vector3d.Vector3d", "Vector3d.Vector3d", "Vector3d.Vector3d", "Atom.Atom", "Atom.Atom", "Atom.Atom", "Atom.Atom", "random.uniform", "Vector3d.Vector3d", "Vector3d.Vector3d"], ["numpy.linalg.norm", "numpy.copy", "numpy.asarray"], ["pset3_make_sim.make_sim", "pset3_make_sim.make_sim.track_quantity", "pset3_make_sim.make_sim.run", "Constants.Units", "Constants.Units.time_true_units", "pset3_make_sim.make_sim", "pset3_make_sim.make_sim.track_quantity", "pset3_make_sim.make_sim.track_quantity", "pset3_make_sim.make_sim.run", "pset3_make_sim.make_sim", "pset3_make_sim.make_sim", "pset3_make_sim.make_sim.track_quantity", "pset3_make_sim.make_sim.run"], ["Vector3d.Vector3d", "Vector3d.Vector3d"], [], ["numpy.linalg.norm", "numpy.linspace", "numpy.array", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "numpy.linspace", "numpy.array", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "Vector3d.Vector3d", "Vector3d.Vector3d"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pragyakale@network_from_scratch/fromScratch.ipynb": {"API": [], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CFDBrasil@DiferencasFinitas/EULER_FTBS.ipynb": {"API": ["numpy.linspace", "numpy.zeros", "numpy.copy", "matplotlib.pyplot.suptitle", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.suptitle", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "numpy.copy"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/menglin0320@446-project/preprocess_data.ipynb": {"API": [["tensorflow.nn.max_pool", "tensorflow.stop_gradient", "tensorflow.variable_scope", "tensorflow.nn.conv2d", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "numpy.load", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.relu"], [], [], []], "module": ["matplotlib", "h5py", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/balta2ar@analytics-edge/korean.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jf4rr3ll@IS362_Assignment12/NYT_API.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jsigee87@Rewire-Lab/Number Generator/Number_Generator_3.ipynb": {"API": [["numpy.zeros", "numpy.zeros", "numpy.unique", "numpy.random.randint", "numpy.zeros", "numpy.random.randint", "numpy.sum"]], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Ivanbuezor@Computo-Distribuido/Tarea+2+C\u00f3mputo+distribuido+Iv\u00e1n+Buezo+Rojas+iD+168710.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/glapointe7@NucleiImageDetection/NucleiImageAnalysis.ipynb": {"API": [], "module": ["imageio", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jmwr4800@odsc_bayes/workshop02soln.ipynb": {"API": [["thinkbayes.Pmf", "thinkbayes.Pmf", "numpy.linspace", "thinkplot.Pmf", "thinkplot.Pmf", "thinkplot.Save", "thinkbayes.Pmf.Incr", "thinkbayes.Pmf.Incr"], [], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "numpy.asarray", "scipy.stats.geom.pmf", "scipy.stats.hypergeom.pmf", "scipy.stats.poisson.pmf", "numpy.linspace", "numpy.linspace", "scipy.stats.pareto.pdf", "numpy.linspace", "scipy.stats.pareto.pdf", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "numpy.sum", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.asarray", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.special.gamma", "scipy.stats.geom.pmf", "scipy.stats.poisson.pmf", "math.exp", "math.exp", "numpy.exp", "numpy.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "scipy.special.betainc", "scipy.special.betaincinv", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.normal", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "io.open", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "numpy.exp", "math.erf", "numpy.asarray", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "re.search", "thinkplot.Plot", "math.exp", "math.isnan", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["thinkplot.Pdf", "thinkplot.Show"], ["thinkplot.Pdf", "thinkplot.Show"], ["thinkplot.PrePlot", "thinkplot.Pmf", "thinkplot.Show"], ["numpy.linspace", "thinkplot.Pdf", "thinkplot.Save", "thinkbayes.Odds", "thinkbayes.Odds"], [], ["thinkplot.Pdf", "thinkplot.Show"], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.stats.hypergeom.pmf", "numpy.linspace", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "io.open", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.special.gamma", "math.exp", "math.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.uniform", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "re.search", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "math.exp", "math.erf", "scipy.special.betainc", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "thinkplot.Plot", "math.exp", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["csv.reader", "thinkbayes.Interpolator", "csv.reader", "thinkbayes.Pmf", "thinkplot.PrePlot", "thinkplot.Pdfs", "thinkplot.Show", "thinkbayes.Pmf.Set", "thinkbayes.MakePmfFromDict", "thinkbayes.Pmf", "thinkbayes.Suite.__init__", "thinkbayes.Pmf.Incr"], ["csv.reader", "thinkbayes.Interpolator", "csv.reader", "thinkbayes.Pmf", "thinkplot.PrePlot", "thinkplot.Pdfs", "thinkplot.Show", "thinkbayes.Pmf.Set", "thinkbayes.MakePmfFromDict", "thinkbayes.Pmf", "thinkbayes.Suite.__init__", "thinkbayes.Pmf.Incr"], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.vlines", "matplotlib.pyplot.hlines", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.gca", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "warnings.filterwarnings", "warnings.filterwarnings", "matplotlib.pyplot.gcf", "warnings.warn", "numpy.arange", "matplotlib.pyplot.xticks", "numpy.array", "numpy.array", "matplotlib.pyplot.legend", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.get_xticklabels", "matplotlib.pyplot.setp", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.get_yticklabels", "matplotlib.pyplot.setp", "warnings.warn", "warnings.warn", "math.log", "math.log", "numpy.diff", "numpy.diff"], ["thinkplot.PrePlot", "thinkplot.Pmf", "thinkplot.Save", "thinkplot.Pmf", "thinkplot.PrePlot", "thinkplot.Pmf", "thinkplot.Save"], ["numpy.linspace", "thinkplot.Pmf", "thinkplot.Save"], [], ["thinkplot.PrePlot", "thinkplot.Pmf", "thinkplot.Show"], ["numpy.linspace", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.annotate", "thinkplot.Plot", "thinkplot.Show", "thinkbayes2.EvalNormalPdf"]], "module": ["matplotlib", "scipy", "pandas", "numpy", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vaprigliano1@CD/APS5_alunos.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/StefanHanisch@DifferentialPrivacy/Implementation of a private random decision tree.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/QuentinCoic@Probabilistic-Graphical-Models-Homework-1-Classification/MVA_DM1_CO\u00cfC_NAAMANE_Code_source.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/KarneRahulReddy@Titanic/Titanic.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jattenberg@gp/ipynb/gp.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JavonDavis@Bike-Sharing-Neural-Network/Your_first_neural_network.ipynb": {"API": [["numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.dot", "numpy.dot", "numpy.exp", "numpy.log", "numpy.log"], ["numpy.random.normal", "numpy.random.normal", "numpy.zeros", "numpy.zeros", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.exp"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Gaylaxumb@tumo-tf/tensorflow3.ipynb": {"API": [[], ["tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.Session", "tensorflow.Session.close", "tensorflow.Session.run"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mainkoon81@U005-project-Python-AB-testing-Comprehensive/Analyze_ab_test_practice.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/leojsp@JedisAnalytics/Exerc - Limite_cr\u00e9dito.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Utkagr@SimilarityIndexQP/practice_tf.ipynb": {"API": [], "module": ["numpy", "tensorflow", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/avivbd@mehcoeg/code/Python/PF.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/devonyates@jupyter_examples/Visualizing Service Coverage.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chnwentao@MusicTrendsPrediction/main.ipynb": {"API": [], "module": ["numpy", "xgboost", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ethanzh@stanford-mouthguard/Analysis.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dsaplala@ECON628-01-dsaplala/Project_1_Dino_Saplala.ipynb": {"API": [], "module": ["IPython", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mhosankalp@tv-script-generation/dlnd_tv_script_generation-ms.ipynb": {"API": [["os.path.join", "pickle.dump", "pickle.load", "pickle.dump", "pickle.load"], ["tensorflow.Graph", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "numpy.array", "numpy.array_equal", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "numpy.array", "numpy.array_equal", "numpy.array_equal", "tensorflow.Graph", "tensorflow.Graph", "numpy.array", "numpy.array", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.Graph"]], "module": ["numpy", "tensorflow", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/iczmind@advance1/py_exp_comp_adv1-translated.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ecseymour@healthy_homes/ToxicStructures2015_Analysis2018-07-18.ipynb": {"API": [[], [], []], "module": ["matplotlib", "pandas", "statsmodels", "numpy", "seaborn", "geopandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kanming1990@Homework5-Matplotlib/Pyber-Markdown.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/HenryMaguire@digit_recognition/digit_recognition.ipynb": {"API": [["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.initialize_all_variables", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.Saver", "tensorflow.train.Saver.save", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.random_normal.get_shape"]], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fjcamillo@AgriCo/test/AgriCo.ipynb": {"API": [["os.environ.setdefault", "django.core.management.execute_from_command_line"], ["django.http.HttpResponse"], ["django.conf.urls.url"], [], [], [], [], [], [], ["django.conf.urls.url", "django.conf.urls.url", "django.conf.urls.include"], ["os.environ.setdefault", "django.core.wsgi.get_wsgi_application"], [], ["os.path.dirname", "os.path.dirname", "os.path.abspath", "os.path.join"]], "module": ["django"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Archidoc@Pyber/Pyber-HW5_OB.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/udohsolomon@finance/Time series analysis of financial data.ipynb": {"API": [[], []], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/7aiki@Machine-Learning/Principal Component Analysis Entry.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/monicams89@Best-Seller-books-on-Paytm/DATS 6031 - Individual Project2 - Monica Sharma.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/freena22@Statistics-Probability/01_Sampling.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/juanjosegarciaripoll@notebooks/Hamiltonian evolution with Python.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lyaronskaya@TSP-Christofides/TSP-description.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yashshimpi@Visualization-in-Python/Visualization in Python, Seaborn.ipynb": {"API": [], "module": ["numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cbakhshi@pandas-homework/Heroes_of_Pymoli.ipynb": {"API": ["pandas.read_json", "pandas.read_json.head", "pandas.read_json.nunique", "pandas.DataFrame", "pandas.read_json.nunique", "pandas.read_json.mean", "pandas.read_json.count", "pandas.read_json.sum", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.read_json.nunique", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby"], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DylanSpicker@project-euler/Project Euler.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chrischute@hdfs-scalability/src/Simulation.ipynb": {"API": ["numpy.linspace", "matplotlib.pyplot.figure", "matplotlib.pyplot.xscale", "matplotlib.pyplot.yscale", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "math.ceil", "math.floor"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lainglo@coastalnewswatch/coastalnews-analysis.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/egox2@hello-world/plotese.ipynb": {"API": ["matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot"], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ClaseML-2017@learningslowdown-edwinpeter/Deep Learning Speed Slowdown.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bleearmstrong@islr_python/ISLR_chapter_03.ipynb": {"API": [], "module": ["patsy", "matplotlib", "scipy", "pandas", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mannb986@Star-Wars-Survey/Star_Wars.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/theamazingfedex@ml-southpark/notebooks/notebook.ipynb": {"API": [], "module": ["numpy", "tensorflow", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Slandert@Rosalind/Rosalind_DBRU.ipynb": {"API": [[], [], ["math.factorial", "math.factorial", "math.factorial", "math.factorial"], [], ["itertools.combinations", "Bio.SeqIO.parse"], [], []], "module": ["Bio"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pochekailov@cookbook/Working_With_Sequences_K_Mers.ipynb": {"API": [], "module": ["ipywidgets", "scipy", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fjcamillo@Vanilla-Gradient-Descent-Siraj-Contest/Vanilla Gradient Descent.ipynb": {"API": [["numpy.multiply", "functools.reduce", "numpy.multiply", "numpy.subtract", "numpy.subtract", "numpy.multiply", "numpy.add"]], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/khaixiang@mcmc/MCMC.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/romilhc@Coursera-Intro-to-Data-Science-with-Python/Resources/course1_downloads/Assignment 2.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/1213526191@Stat_628_1/summary/Module_presentation2.ipynb": {"API": [["scipy.io.arff.loadarff", "numpy.random.permutation", "numpy.random.permutation", "numpy.zeros.append", "numpy.array", "numpy.multiply", "numpy.array", "numpy.outer", "numpy.empty", "numpy.empty", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.zeros.append", "numpy.zeros", "numpy.mean", "numpy.std", "numpy.dot", "numpy.dot", "numpy.zeros", "numpy.zeros.extend"], []], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Ujjwalsas9@DNN_MNIST_Sigmoid/DNN_MNIST_Sigmoid.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kiswinyo@fraktal/proba.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/srharris91@PSE/OrrSommerfeld_and_primitive/OrrSommerfeld_and_primitive.ipynb": {"API": [["numpy.array", "numpy.array.tofile"]], "module": ["matplotlib", "scipy", "pandas", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/buchkov@Analytics/Megatreyd.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gokererdogan@Notebooks/Reparameterization Trick.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kaleend101@JSONExamplesandExercise5.3.2/sliderule_dsi_json_exercise.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kekegg@Summater/summator_keras_vae_share.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "numpy.frombuffer", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.delete", "numpy.delete", "numpy.delete", "numpy.arange", "numpy.random.shuffle", "numpy.append", "numpy.append", "numpy.append"]], "module": ["IPython", "matplotlib", "keras", "numpy", "h5py"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/klosev@pandas-intro/Pandas_Uebung.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/LuckyWanderboy@aftershock/Untitled.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/guru865@twitter-analytics/Untitled.ipynb": {"API": [], "module": ["matplotlib", "tweepy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yzh119@transfer-learning/TCA/TCA.ipynb": {"API": [["torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.functional.relu", "torch.nn.functional.relu"], ["torch.optim.Adam", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.functional.log_softmax", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torch.save", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.log_softmax", "torch.nn.functional.nll_loss", "torch.nn.functional.nll_loss.backward", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], ["torch.optim.Adam", "torchvision.datasets.MNIST", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.load.eval", "torch.load.parameters", "torch.load", "torch.Tensor", "torch.Tensor", "torch.utils.data.TensorDataset", "torchvision.datasets.MNIST", "torch.nn.functional.log_softmax", "torchvision.transforms.Compose", "torch.autograd.Variable.cuda", "torch.autograd.Variable", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy.backward", "torch.autograd.Variable.cuda", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable.tolist", "torchvision.transforms.Compose", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"]], "module": ["torch", "numpy", "torchvision"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/akashprem12@StockMarketAnalysis/Stock Market Analysis .ipynb": {"API": [], "module": ["matplotlib", "pandas_datareader", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/qyxiao@N-N/plot1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JeongsooHa@DeepLearning/selfstudy/lab12-2_RNN.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/retyidoro@data_analysis_competition/Adatfeldolgoz\u00e1s  - kib\u0151v\u00edtve.ipynb": {"API": [["json.loads"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Jenny-Ag@Springboard-/sliderule_dsi_json_exercise.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Kulukami@HW2018-3/Regression.ipynb": {"API": [["matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.show", "math.sqrt", "math.sqrt", "math.sqrt", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.show", "time.mktime", "time.strptime"], [], []], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zelong430@cs207labs/Lab1.ipynb": {"API": [[], [], ["numpy.where", "numpy.array_equal", "numpy.mean", "numpy.median", "numpy.argsort", "numpy.vstack", "numpy.where", "numpy.where", "numpy.array", "numpy.array"], ["amath.myaverage", "pytest.raises", "amath.myaverage", "amath.mymedian", "pytest.raises", "amath.mymedian", "pytest.raises", "amath.mymedian"], [], ["reprlib.repr", "collections.defaultdict", "collections.defaultdict", "collections.defaultdict", "os.walk", "itertools.islice"]], "module": ["matplotlib", "IPython", "numpy", "pytest"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nicpayne713@Udemy_PyTorch/Feedforward Neural Network.ipynb": {"API": [], "module": ["torch", "numpy", "matplotlib", "torchvision"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SnowMasaya@Cython-notebook/cython-study.ipynb": {"API": [["distutils.core.setup", "Cython.Build.cythonize"], [], ["distutils.core.Extension", "distutils.core.setup", "Cython.Build.cythonize"], ["distutils.core.setup", "Cython.Build.cythonize"]], "module": ["Cython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jpalma-espinosa@myNotebooks/anexoModelos.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sitaomin1994@Deeplearning-Research/Ghost Batch Normalization/Batch_size_gbn.ipynb": {"API": [], "module": ["matplotlib", "pandas", "torch", "torchvision", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Ashwin-Nadig@Analyzing-IMDB-data/Ananlyzing IMDB data in Keras.ipynb": {"API": [], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chenfenghui@python_project/tensorflow_example/Getting Started with TensorFlow CHS/chapter1/python_algorithm.ipynb": {"API": [["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], [], [], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], [], [], []], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Fixman@metnum-TP3/src/resultados/Analisis_Cualquiera.ipynb": {"API": [["unittest.main"], [], [], [], ["utils.listfiles"], ["os.walk", "fnmatch.fnmatch", "os.path.join"], ["utils.listfiles"], [], []], "module": ["matplotlib", "pandas", "scipy", "seaborn", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ksanjay77@deep-learning/tv-script-generation/dlnd_tv_script_generation.ipynb": {"API": [["os.path.join", "pickle.dump", "pickle.load", "pickle.dump", "pickle.load"], ["tensorflow.Graph", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "numpy.array", "numpy.array_equal", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "numpy.array", "numpy.array_equal", "numpy.array_equal", "tensorflow.Graph", "tensorflow.Graph", "numpy.array", "numpy.array", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.Graph"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/7kanak@linear_regression/linear_regression.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/xiapingtang@Python_study/Introduction/Exercise1.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sharathrao13@deep-convolutional-neural-network/graph_plotter.ipynb": {"API": [["time.time", "data_utils.load_CIFAR100", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.optimizers.Adagrad", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "keras.models.Sequential.evaluate", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.MaxPooling2D", "keras.layers.core.Dropout", "keras.layers.core.Flatten", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.core.Activation", "time.time"], ["time.time", "data_utils.load_CIFAR100", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "keras.models.Sequential.evaluate", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.MaxPooling2D", "keras.layers.core.Dropout", "keras.layers.core.Flatten", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.core.Activation", "time.time"], ["cPickle.load", "numpy.array", "os.path.join", "os.path.join"], ["data_utils.load_CIFAR100", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.optimizers.SGD", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "keras.models.Sequential.evaluate", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.MaxPooling2D", "keras.layers.core.Dropout", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.MaxPooling2D", "keras.layers.core.Dropout", "keras.layers.core.Flatten", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.core.Activation"], ["time.time", "data_utils.load_CIFAR100", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.optimizers.Adagrad", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "keras.models.Sequential.evaluate", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.MaxPooling2D", "keras.layers.core.Dropout", "keras.layers.core.Flatten", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.core.Activation", "time.time"], ["data_utils.load_CIFAR100", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.optimizers.SGD", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "keras.models.Sequential.evaluate", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.MaxPooling2D", "keras.layers.core.Dropout", "keras.layers.core.Flatten", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.core.Activation"]], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/anyarcherty@Seattle_Rainfall/Seattle Weather.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kcdenman@pythonudemy/Installing and Importing Packages.ipynb": {"API": [["math.sqrt"]], "module": ["matplotlib", "pandas", "scrapy", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Praxal@pycon2017_algo_trading/pycon-strategy-backtesting.ipynb": {"API": [[]], "module": ["matplotlib", "IPython", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ShiroJean@coal-exploratory/notebooks/Data_cleaning.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/FurKan7@PytorchSamples/RNN-Conditional.ipynb": {"API": [], "module": ["torch", "unidecode", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mikebarajas@Project-1/Texas Zillow Data Analysis.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "seaborn", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/topin27@notes/books/Python-for-Data-Analysis/04.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/geoff567@Biodiversity/Exploration Notebook.ipynb": {"API": [["flask.Flask", "sqlalchemy.create_engine", "sqlalchemy.ext.automap.automap_base", "sqlalchemy.ext.automap.automap_base.prepare", "sqlalchemy.orm.Session", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.render_template", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.jsonify", "flask.Flask.run", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.desc", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.query"], []], "module": ["sqlalchemy", "flask"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tlihouma@Meetup-analysis/Meetup analysis, unix timestamp in milliseconds to datetime.ipynb": {"API": [["flask.Flask", "flask.Flask.route", "flask.Flask.route", "flask.render_template", "pandas.read_json", "pandas.read_json.to_json", "flask.Flask.run"]], "module": ["numpy", "flask", "shapely", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shubhamjanhere@Very-Simple-Python-Project/Data%20SCIENCE%20Project/Data Project - Stock Market Analysis2.ipynb": {"API": [["re.search", "re.search", "re.search.start", "re.search.start"], ["re.search", "re.search.start", "re.search", "re.search.end", "re.search", "re.search.end"]], "module": ["matplotlib", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CPP-CProgramming@algorithmPython/overview.ipynb": {"API": [], "module": ["nose"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/eosg@DebtMkt/notebook.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "plotly", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Hebali@launchbot-learning-machines/Tutorial_TensorFlow_05_ConvNet_Vis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/masato0412@TV-Script-Generation-RNN-/dlnd_tv_script_generation.ipynb": {"API": [["os.path.join", "pickle.dump", "pickle.load", "pickle.dump", "pickle.load"], ["tensorflow.Graph", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "numpy.array", "numpy.array_equal", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "numpy.array", "numpy.array_equal", "numpy.array_equal", "tensorflow.Graph", "tensorflow.Graph", "numpy.array", "numpy.array", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.Graph", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.Graph"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mmoelter@Phys133/WidgetTest.ipynb": {"API": ["ipywidgets.interact", "matplotlib.pyplot.plot", "matplotlib.pyplot.axis", "matplotlib.pyplot.grid", "matplotlib.pyplot.show"], "module": ["matplotlib", "numpy", "ipywidgets"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/avassilev@Solow_model_tool/Solow_model_BG.ipynb": {"API": [], "module": ["matplotlib", "ipywidgets", "scipy", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JuanDiegoArango@Validacion-de-simulacion/Catch-Bond/Catch-Bond.ipynb": {"API": [], "module": ["sympy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/XiaoMYu@TheRainMaker/FEMA_data_Final.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Faye5@1025HW/1025HW.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/physics91si@pdraghis-lab5/data.ipynb": {"API": [["numpy.sin", "numpy.exp", "numpy.random.randn"], []], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AnGonzalz@Taller-Python/Taller - \u00c1ngela Gonz\u00e1lez  Vf.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ortegauriol@UR5/Untitled.ipynb": {"API": [[], [], [], [], []], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hyzhak@siraj-tutorials/notebooks/build-a-neural-net-in-4-minutes.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ALLEN-CHUANG@Gaussiandropout/keras_test.ipynb": {"API": [["keras.backend.in_train_phase", "numpy.sqrt", "keras.backend.random_normal", "keras.backend.shape"]], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ciornav@files_to_test/vsc.ipynb": {"API": [["PyQt5.uic.loadUiType", "sys.exit", "PyQt5.QtWidgets.QMainWindow.__init__", "numpy.ceil", "PyQt5.QtWidgets.QApplication.instance", "PyQt5.QtWidgets.QApplication", "PyQt5.QtWidgets.QApplication.instance", "PyQt5.QtWidgets.QApplication.instance.exec_"], ["PyQt5.QtWidgets.QApplication", "PyQt5.QtWidgets.QMainWindow", "PyQt5.QtWidgets.QMainWindow.show", "PyQt5.QtWidgets.QApplication.exec_", "PyQt5.QtWidgets.QMainWindow.setObjectName", "PyQt5.QtWidgets.QMainWindow.resize", "PyQt5.QtGui.QIcon", "PyQt5.QtGui.QIcon.addPixmap", "PyQt5.QtWidgets.QMainWindow.setWindowIcon", "PyQt5.QtWidgets.QMainWindow.setAutoFillBackground", "PyQt5.QtWidgets.QMainWindow.setStyleSheet", "PyQt5.QtWidgets.QWidget", "PyQt5.QtWidgets.QPushButton", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtWidgets.QTextEdit", "PyQt5.QtWidgets.QWidget", "PyQt5.QtWidgets.QHBoxLayout", "PyQt5.QtWidgets.QSpinBox", "PyQt5.QtWidgets.QComboBox", "PyQt5.QtWidgets.QWidget", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtGui.QFont.setBold", "PyQt5.QtGui.QFont.setWeight", "PyQt5.QtWidgets.QHBoxLayout", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtGui.QFont.setBold", "PyQt5.QtGui.QFont.setWeight", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtGui.QFont.setBold", "PyQt5.QtGui.QFont.setWeight", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtGui.QFont.setBold", "PyQt5.QtGui.QFont.setWeight", "PyQt5.QtWidgets.QWidget", "PyQt5.QtWidgets.QHBoxLayout", "PyQt5.QtWidgets.QCalendarWidget", "PyQt5.QtWidgets.QCalendarWidget", "PyQt5.QtWidgets.QWidget", "PyQt5.QtWidgets.QHBoxLayout", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtWidgets.QTextEdit", "PyQt5.QtWidgets.QLabel", "PyQt5.QtWidgets.QTextEdit", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtWidgets.QLabel", "PyQt5.QtWidgets.QLabel", "PyQt5.QtWidgets.QLabel", "PyQt5.QtWidgets.QWidget", "PyQt5.QtWidgets.QVBoxLayout", "PyQt5.QtWidgets.QSpinBox", "PyQt5.QtWidgets.QSpinBox", "PyQt5.QtWidgets.QSpinBox", "PyQt5.QtWidgets.QMainWindow.setCentralWidget", "PyQt5.QtWidgets.QMenuBar", "PyQt5.QtWidgets.QMainWindow.setMenuBar", "PyQt5.QtWidgets.QStatusBar", "PyQt5.QtWidgets.QMainWindow.setStatusBar", "PyQt5.QtWidgets.QAction", "PyQt5.QtCore.QMetaObject.connectSlotsByName", "PyQt5.QtWidgets.QMainWindow.setWindowTitle", "numpy.ceil", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtGui.QPixmap", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect"], "PyQt5.QtWidgets.QApplication", "PyQt5.QtWidgets.QMainWindow", "PyQt5.QtWidgets.QMainWindow.show", "PyQt5.QtWidgets.QApplication.exec_", "PyQt5.QtWidgets.QMainWindow.setObjectName", "PyQt5.QtWidgets.QMainWindow.resize", "PyQt5.QtGui.QIcon", "PyQt5.QtGui.QIcon.addPixmap", "PyQt5.QtWidgets.QMainWindow.setWindowIcon", "PyQt5.QtWidgets.QMainWindow.setAutoFillBackground", "PyQt5.QtWidgets.QMainWindow.setStyleSheet", "PyQt5.QtWidgets.QWidget", "PyQt5.QtWidgets.QPushButton", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtWidgets.QTextEdit", "PyQt5.QtWidgets.QWidget", "PyQt5.QtWidgets.QHBoxLayout", "PyQt5.QtWidgets.QSpinBox", "PyQt5.QtWidgets.QComboBox", "PyQt5.QtWidgets.QWidget", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtGui.QFont.setBold", "PyQt5.QtGui.QFont.setWeight", "PyQt5.QtWidgets.QHBoxLayout", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtGui.QFont.setBold", "PyQt5.QtGui.QFont.setWeight", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtGui.QFont.setBold", "PyQt5.QtGui.QFont.setWeight", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtGui.QFont.setBold", "PyQt5.QtGui.QFont.setWeight", "PyQt5.QtWidgets.QWidget", "PyQt5.QtWidgets.QHBoxLayout", "PyQt5.QtWidgets.QCalendarWidget", "PyQt5.QtWidgets.QCalendarWidget", "PyQt5.QtWidgets.QWidget", "PyQt5.QtWidgets.QHBoxLayout", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtWidgets.QTextEdit", "PyQt5.QtWidgets.QLabel", "PyQt5.QtWidgets.QTextEdit", "PyQt5.QtWidgets.QLabel", "PyQt5.QtGui.QFont", "PyQt5.QtGui.QFont.setPointSize", "PyQt5.QtWidgets.QLabel", "PyQt5.QtWidgets.QLabel", "PyQt5.QtWidgets.QLabel", "PyQt5.QtWidgets.QWidget", "PyQt5.QtWidgets.QVBoxLayout", "PyQt5.QtWidgets.QSpinBox", "PyQt5.QtWidgets.QSpinBox", "PyQt5.QtWidgets.QSpinBox", "PyQt5.QtWidgets.QMainWindow.setCentralWidget", "PyQt5.QtWidgets.QMenuBar", "PyQt5.QtWidgets.QMainWindow.setMenuBar", "PyQt5.QtWidgets.QStatusBar", "PyQt5.QtWidgets.QMainWindow.setStatusBar", "PyQt5.QtWidgets.QAction", "PyQt5.QtCore.QMetaObject.connectSlotsByName", "PyQt5.QtWidgets.QMainWindow.setWindowTitle", "numpy.ceil", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtCore.QDate", "PyQt5.QtGui.QPixmap", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect", "PyQt5.QtCore.QRect"], "module": ["numpy", "PyQt5"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/arewhyaeenn@BOIDS-v2/Assets/Data/graphmaker.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/paolabruno@P_Computer_Science/Pr_ComputerScience (2).ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/devjeetr@Kaggle-Toxic-Comments/Sandbox.ipynb": {"API": [], "module": ["matplotlib", "numpy", "torch"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fdcl-gwu@MAE3134_examples/Second Order Response.ipynb": {"API": [], "module": ["matplotlib", "sympy", "ipywidgets", "scipy", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/changqing@deeplearning_workshop/day4/mlp_function_approximation.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["collections.Counter", "os.path.join", "os.path.join", "os.path.join", "numpy.array", "numpy.zeros", "tensorflow.gfile.GFile", "collections.Counter.items"], ["collections.Counter", "os.path.join", "os.path.join", "os.path.join", "numpy.array", "numpy.zeros", "tensorflow.gfile.GFile", "collections.Counter.items"], ["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], "numpy.random.seed", "numpy.random.shuffle", "matplotlib.pyplot.figure", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.float32", "tensorflow.random_uniform", "tensorflow.zeros", "tensorflow.random_uniform", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.nn.l2_loss", "tensorflow.initialize_all_variables", "tensorflow.Session.run", "numpy.cos", "numpy.random.uniform", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.Session.run", "tensorflow.nn.l2_loss", "numpy.random.randn"], "module": ["matplotlib", "pandas", "numpy", "tensorflow", "tqdm"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hisarack@hello-gan/Lab3_DCGAN_MNIST.ipynb": {"API": [["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.optimizers.Adam", "keras.models.Sequential.compile", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.datasets.mnist.load_data", "keras.models.Sequential.save", "keras.models.Sequential.save", "keras.models.Sequential.save", "boto3.resource", "keras.layers.convolutional.Conv2D", "keras.layers.advanced_activations.LeakyReLU", "keras.layers.core.Dropout", "keras.layers.convolutional.Conv2D", "keras.layers.advanced_activations.LeakyReLU", "keras.layers.core.Dropout", "keras.layers.core.Flatten", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dense", "keras.layers.advanced_activations.LeakyReLU", "keras.layers.core.Reshape", "keras.layers.convolutional.UpSampling2D", "keras.layers.convolutional.Conv2D", "keras.layers.advanced_activations.LeakyReLU", "keras.layers.convolutional.UpSampling2D", "keras.layers.convolutional.Conv2D", "keras.layers.core.Activation", "numpy.random.normal", "keras.models.Sequential.predict", "numpy.concatenate", "numpy.zeros", "keras.models.Sequential.train_on_batch", "numpy.random.normal", "numpy.ones", "keras.models.Sequential.train_on_batch", "keras.initializers.RandomNormal", "keras.initializers.RandomNormal", "numpy.random.randint"]], "module": ["keras", "boto3", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/LakheyM@time_series/mul_regre_ex.ipynb": {"API": [[]], "module": ["matplotlib", "statsmodels", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zhong110020@TensorFlow-Examples/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.group", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.python.ops.resources.initialize_resources", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.python.ops.resources.shared_resources", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lakshmi-intechcode@pandas/Data Visualisation Notebook.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/etienne-v@tensorflow-tutorial_regression/tensorflow-tutorial_regression.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bkelemen56@titanic-py/titanic_exploration.ipynb": {"API": [[], "pandas.read_csv"], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CS506-Boston-University@homework-1-2-NancyYixuanXiao/Homework-1-2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/LIngfeiLu@neural-network/Hwk9/Hwk9.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DonalMcGahon@Problem-set-Jupyter-pyplot-and-numpy/Fisher\u2019s iris data set.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rubennj@percentiles/index.ipynb": {"API": ["matplotlib.pyplot.subplots", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv.query", "pandas.read_csv.query"], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/avchikar97@lab1_PatientData/Lab1AkaashChikarmane_SeanTremblay.ipynb": {"API": [["numpy.random.normal", "numpy.random.normal", "matplotlib.pyplot.hist", "matplotlib.pyplot.show"], ["pandas.read_csv", "pandas.read_csv.hist", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "pandas.read_csv.hist", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.show", "pandas.read_csv.value_counts", "matplotlib.pyplot.figure", "pandas.read_csv.hist", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.show", "pandas.read_csv.isnull", "numpy.zeros", "pandas.read_csv.sum", "numpy.array", "numpy.divide", "pandas.read_csv.isnull", "pandas.read_csv.notnull"], ["numpy.random.normal", "numpy.random.normal", "matplotlib.pyplot.hist", "matplotlib.pyplot.show", "matplotlib.pyplot.hist", "matplotlib.pyplot.figure", "matplotlib.pyplot.hist", "matplotlib.pyplot.figure", "matplotlib.pyplot.hist", "matplotlib.pyplot.show", "numpy.random.normal", "numpy.full", "numpy.subtract", "numpy.multiply", "numpy.random.multivariate_normal", "numpy.zeros", "numpy.zeros", "numpy.array", "numpy.full", "numpy.full", "numpy.array", "numpy.zeros", "pandas.read_csv", "pandas.read_csv.hist", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "pandas.read_csv.hist", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.show", "pandas.read_csv.value_counts", "matplotlib.pyplot.figure", "pandas.read_csv.hist", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.show", "pandas.read_csv.isnull", "numpy.zeros", "pandas.read_csv.sum", "numpy.array", "numpy.divide", "numpy.zeros", "numpy.divide", "numpy.divide", "numpy.divide", "scipy.stats.bernoulli.rvs", "numpy.array", "numpy.place", "numpy.sum", "numpy.subtract", "numpy.subtract", "numpy.multiply", "numpy.divide", "pandas.read_csv.isnull", "pandas.read_csv.notnull", "numpy.sum", "numpy.sum"], ["numpy.random.multivariate_normal", "numpy.zeros", "numpy.zeros", "numpy.array", "numpy.full", "numpy.full", "numpy.array", "numpy.zeros", "numpy.divide", "numpy.divide", "numpy.subtract", "numpy.subtract", "numpy.multiply", "numpy.divide", "numpy.sum"], ["matplotlib.pyplot.hist", "matplotlib.pyplot.figure", "matplotlib.pyplot.hist", "matplotlib.pyplot.figure", "matplotlib.pyplot.hist", "matplotlib.pyplot.show", "numpy.zeros", "scipy.stats.bernoulli.rvs", "numpy.array", "numpy.place", "numpy.sum"], ["numpy.random.normal", "numpy.full", "numpy.subtract", "numpy.multiply", "numpy.divide", "numpy.sum"]], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/adamstueckrath@data_analysis_1D/standardizing_data_1D.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/csh3l3-2017b@0a-heroes-heartwagon/TelU Legends Heroes_IFX-41-GAB02_Akbar Habib Buana Wibawa Putra_1301178198.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/petyag@Test2/Tst_Sin.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "ipywidgets"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alisevii@FCTE_solver_ipynb/FCTE_solver_polyacetylene.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/salil82@Pyber/Pyber.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ejdanderson@q-error-correction/classical.ipynb": {"API": ["numpy.matrix", "numpy.matrix", "numpy.matrix", "numpy.matrix", "numpy.identity", "numpy.matmul", "numpy.matmul", "itertools.combinations", "numpy.matrix", "numpy.matrix", "numpy.matrix", "numpy.matrix", "numpy.matrix", "numpy.matrix", "numpy.matrix", "numpy.matrix", "numpy.binary_repr", "numpy.power", "numpy.binary_repr", "numpy.power", "numpy.binary_repr", "numpy.power", "numpy.binary_repr", "numpy.power", "numpy.argmax", "numpy.argmax", "numpy.binary_repr", "numpy.binary_repr", "numpy.argmax", "numpy.argmax", "numpy.matmul", "numpy.matmul", "numpy.argmax", "numpy.power", "numpy.power", "numpy.argmax", "numpy.power", "numpy.power", "numpy.binary_repr", "numpy.binary_repr", "numpy.argmax", "numpy.power", "numpy.power", "numpy.argmax", "numpy.power", "numpy.power"], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/open-sst@Mortality/Death_Part_I.ipynb": {"API": [], "module": ["matplotlib", "ipywidgets", "scipy", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ivvv@spireFts/FtsDataAccess.ipynb": {"API": [["os.path.join", "numpy.interp", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "copy.deepcopy", "matplotlib.pyplot.figure", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.title", "requests.get", "matplotlib.pyplot.figure", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "zipfile.ZipFile", "math.sqrt", "math.pow", "matplotlib.pyplot.figure", "math.sqrt", "astropy.modeling.models.Gaussian2D", "numpy.median", "astropy.stats.median_absolute_deviation", "numpy.median", "astropy.stats.median_absolute_deviation", "numpy.linspace", "numpy.arange", "os.getenv", "numpy.interp", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.interp.write", "tarfile.open", "tarfile.open.getnames", "tarfile.open.close", "astropy.io.fits.open", "zipfile.ZipFile.infolist", "zipfile.ZipFile.close", "astropy.modeling.models.Gaussian2D", "astropy.modeling.fitting.LevMarLSQFitter", "numpy.zeros", "numpy.arange", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "numpy.sum", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "numpy.zeros", "numpy.arange", "matplotlib.pyplot.figure", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "numpy.zeros", "numpy.zeros", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "tempfile.mkdtemp", "shutil.rmtree", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.arange", "math.log", "numpy.sum", "math.log", "numpy.sum", "matplotlib.pyplot.plot", "tarfile.open.extract", "astropy.io.fits.open", "os.remove", "zipfile.ZipFile.extract", "astropy.io.fits.open", "math.sqrt", "os.path.join"], "requests.get", "matplotlib.pyplot.figure", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "tarfile.open", "tarfile.open.getnames", "tarfile.open.close", "matplotlib.pyplot.plot", "matplotlib.pyplot.figure.suptitle", "tempfile.mkdtemp", "shutil.rmtree", "tarfile.open.extract", "astropy.io.fits.open", "os.remove", "matplotlib.pyplot.plot", "os.path.join"], "module": ["matplotlib", "requests", "numpy", "astropy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hollisn@GU-Churn-Model/08-AWS-Results.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/skhobahi@MNIST-Python-Preprocessor/MNIST.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NetApp-StorageGRID@S3-API-Python-Notebook/S3-Api-Example.ipynb": {"API": [], "module": ["boto3"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/annajxli@scaredy-rat/ethovision-preprocessing.ipynb": {"API": [["os.path.join", "pandas.read_excel", "pandas.read_excel", "pandas.read_csv.replace", "pandas.DataFrame", "numpy.arange", "pandas.DataFrame", "numpy.arange", "pandas.DataFrame", "numpy.arange", "pandas.DataFrame", "numpy.arange", "numpy.arange", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "math.floor", "math.floor", "pandas.DataFrame", "pandas.DataFrame", "os.walk", "os.listdir", "os.listdir", "os.walk", "re.split", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "math.floor", "math.floor", "math.floor", "math.floor", "math.floor", "math.floor", "pandas.DataFrame", "pandas.DataFrame", "pandas.concat", "pandas.concat", "pandas.DataFrame.set_index", "pandas.concat", "pandas.DataFrame.set_index", "pandas.concat", "pandas.DataFrame", "pandas.concat", "pandas.read_csv", "pandas.concat", "pandas.DataFrame", "pandas.concat", "pandas.DataFrame", "pandas.concat", "numpy.mean", "numpy.median", "numpy.std", "pandas.DataFrame", "pandas.DataFrame", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "pandas.read_csv", "pandas.DataFrame", "pandas.read_csv", "pandas.read_csv", "numpy.mean", "os.path.join", "os.path.join", "pandas.read_csv", "pandas.DataFrame", "pandas.read_csv", "pandas.DataFrame", "pandas.read_csv"]], "module": ["matplotlib", "pandas", "numpy", "seaborn", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nima200@ml-classification/src/q123.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nazaninsinaei87@Matplotlib/Pyber.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv", "pandas.merge.head", "pandas.DataFrame.head", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.grid", "matplotlib.pyplot.text", "seaborn.set", "matplotlib.pyplot.legend", "seaborn.set", "matplotlib.pyplot.show", "matplotlib.pyplot.pie", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.pie", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.pie", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "pandas.read_csv.groupby", "pandas.merge", "pandas.DataFrame", "matplotlib.lines.Line2D", "pandas.DataFrame.sum", "pandas.merge.groupby", "pandas.merge.groupby", "pandas.merge.groupby", "pandas.DataFrame.groupby"], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/quangdtsc@python-machinelearning/train neural nets efficiently with high-level APIs.ipynb": {"API": [], "module": ["keras", "numpy", "tensorflow", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JohnFunk-Pivotal@jupyterexperiments/develop/2017-01-03-ExperimentingWithCoalData.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/FMeirinhos@unsorted-notebooks/notebooks/NLSAnimations.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sbartek@gan_mnist/Intro_to_GANs_Solution.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/iramusa@price-pred/notebooks/preprocess.ipynb": {"API": [[]], "module": ["matplotlib", "scipy", "pandas", "seaborn", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rogerfitz@school/thesis/Dispersions.ipynb": {"API": [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gaspaio@sangoku/notes/gensims/plot_test.ipynb": {"API": ["pandas.DataFrame", "matplotlib.pyplot.subplots", "matplotlib.pyplot.show", "numpy.random.randint"], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/micahhp@WestNile/workbooks/west_nile_rn-v.1.4.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CSquare-analytics@pandas_tutorials/pandas_transform.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/epetrovaekaterina@Bayes/workshop02soln.ipynb": {"API": [["thinkbayes.Pmf", "thinkbayes.Pmf", "numpy.linspace", "thinkplot.Pmf", "thinkplot.Pmf", "thinkplot.Save", "thinkbayes.Pmf.Incr", "thinkbayes.Pmf.Incr"], [], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "numpy.asarray", "scipy.stats.geom.pmf", "scipy.stats.hypergeom.pmf", "scipy.stats.poisson.pmf", "numpy.linspace", "numpy.linspace", "scipy.stats.pareto.pdf", "numpy.linspace", "scipy.stats.pareto.pdf", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "numpy.sum", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.asarray", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.special.gamma", "scipy.stats.geom.pmf", "scipy.stats.poisson.pmf", "math.exp", "math.exp", "numpy.exp", "numpy.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "scipy.special.betainc", "scipy.special.betaincinv", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.normal", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "io.open", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "numpy.exp", "math.erf", "numpy.asarray", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "re.search", "thinkplot.Plot", "math.exp", "math.isnan", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["thinkplot.Pdf", "thinkplot.Show"], ["thinkplot.Pdf", "thinkplot.Show"], ["thinkplot.PrePlot", "thinkplot.Pmf", "thinkplot.Show"], ["numpy.linspace", "thinkplot.Pdf", "thinkplot.Save", "thinkbayes.Odds", "thinkbayes.Odds"], [], ["thinkplot.Pdf", "thinkplot.Show"], ["math.sqrt", "random.seed", "numpy.random.seed", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.binom.pmf", "scipy.stats.hypergeom.pmf", "numpy.linspace", "scipy.stats.norm.cdf", "scipy.stats.norm.ppf", "scipy.stats.lognorm.cdf", "numpy.linspace", "numpy.linspace", "scipy.stats.norm.cdf", "numpy.linspace", "scipy.misc.comb", "numpy.random.normal", "numpy.asarray.sort", "numpy.asarray.sort", "math.sqrt", "thinkplot.Plot", "thinkplot.Plot", "numpy.mean", "numpy.asarray", "math.sqrt", "numpy.asarray", "numpy.asarray.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.sort", "numpy.asarray", "numpy.asarray", "random.gauss", "math.sqrt", "math.sqrt", "math.sqrt", "io.open", "pandas.DataFrame", "numpy.random.choice", "numpy.random.choice", "numpy.zeros", "numpy.sort", "scipy.ndimage.filters.gaussian_filter1d", "bisect.bisect", "copy.copy", "copy.copy", "random.random", "math.sqrt", "numpy.asarray", "numpy.cumsum", "numpy.roll", "bisect.bisect", "numpy.asarray", "numpy.searchsorted", "bisect.bisect_left", "numpy.asarray", "numpy.searchsorted", "numpy.random.random", "numpy.array", "numpy.roll", "numpy.linspace", "scipy.stats.norm.pdf", "numpy.linspace", "scipy.stats.expon.pdf", "scipy.stats.gaussian_kde", "numpy.linspace", "scipy.special.gamma", "math.exp", "math.exp", "numpy.exp", "random.betavariate", "numpy.random.beta", "numpy.random.gamma", "numpy.log.sum", "numpy.array", "numpy.random.uniform", "numpy.asarray.mean", "numpy.dot", "math.sqrt", "numpy.mean", "numpy.mean", "numpy.dot", "math.sqrt", "random.gauss", "numpy.int.self.colspecs.astype.values.tolist", "pandas.read_fwf", "re.search", "thinkplot.Cdf", "logging.warning", "numpy.asarray", "numpy.asarray", "copy.copy", "copy.copy", "numpy.asarray", "numpy.asarray", "numpy.all", "numpy.all", "numpy.any", "numpy.any", "random.random", "numpy.empty", "numpy.linspace", "math.exp", "math.erf", "scipy.special.betainc", "numpy.ones", "numpy.log", "math.log", "pandas.Series", "pandas.Series", "operator.itemgetter", "thinkplot.Plot", "math.exp", "logging.warning", "numpy.asarray", "numpy.asarray", "math.log", "math.log", "re.search.group", "math.log", "logging.warning", "collections.Counter"], ["csv.reader", "thinkbayes.Interpolator", "csv.reader", "thinkbayes.Pmf", "thinkplot.PrePlot", "thinkplot.Pdfs", "thinkplot.Show", "thinkbayes.Pmf.Set", "thinkbayes.MakePmfFromDict", "thinkbayes.Pmf", "thinkbayes.Suite.__init__", "thinkbayes.Pmf.Incr"], ["csv.reader", "thinkbayes.Interpolator", "csv.reader", "thinkbayes.Pmf", "thinkplot.PrePlot", "thinkplot.Pdfs", "thinkplot.Show", "thinkbayes.Pmf.Set", "thinkbayes.MakePmfFromDict", "thinkbayes.Pmf", "thinkbayes.Suite.__init__", "thinkbayes.Pmf.Incr"], ["matplotlib.pyplot.subplot", "matplotlib.pyplot.clf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.figure", "matplotlib.pyplot.vlines", "matplotlib.pyplot.hlines", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.bar", "matplotlib.pyplot.scatter", "matplotlib.pyplot.hexbin", "numpy.asarray", "numpy.asarray", "numpy.meshgrid", "numpy.vectorize", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "numpy.meshgrid", "matplotlib.ticker.ScalarFormatter", "matplotlib.pyplot.gca", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "plotly.plotly.plot_mpl", "matplotlib.pyplot.savefig", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf", "matplotlib.pyplot.gcf.set_size_inches", "matplotlib.pyplot.subplot", "matplotlib.pyplot.gca", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.delete", "numpy.delete", "numpy.delete", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.imshow", "matplotlib.pyplot.pcolormesh", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "warnings.filterwarnings", "warnings.filterwarnings", "matplotlib.pyplot.gcf", "warnings.warn", "numpy.arange", "matplotlib.pyplot.xticks", "numpy.array", "numpy.array", "matplotlib.pyplot.legend", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.get_xticklabels", "matplotlib.pyplot.setp", "matplotlib.pyplot.gca", "matplotlib.pyplot.gca.get_yticklabels", "matplotlib.pyplot.setp", "warnings.warn", "warnings.warn", "math.log", "math.log", "numpy.diff", "numpy.diff"], ["thinkplot.PrePlot", "thinkplot.Pmf", "thinkplot.Save", "thinkplot.Pmf", "thinkplot.PrePlot", "thinkplot.Pmf", "thinkplot.Save"], ["numpy.linspace", "thinkplot.Pmf", "thinkplot.Save"], [], ["thinkplot.PrePlot", "thinkplot.Pmf", "thinkplot.Show"], ["numpy.linspace", "matplotlib.pyplot.fill_between", "matplotlib.pyplot.annotate", "thinkplot.Plot", "thinkplot.Show", "thinkbayes2.EvalNormalPdf"]], "module": ["matplotlib", "scipy", "pandas", "numpy", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aiqtong@LSTM/GRU_LSTM.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/duspviz-mit@data-science/python-intro/python-intro.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tkms0106@deep-learning-intro/mnist_softmax.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/flowroute@ClueCon2016-SMS-Demo/SMS-Proxy.ipynb": {"API": [], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/micheledoro@my_tests/read_MAGIC_fits.ipynb": {"API": [], "module": ["matplotlib", "numpy", "astropy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/acervantesc@first-python-notebook/Prop-64-analysis.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/adeang47@dataScience/ProjectScript.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "seaborn", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hongchaopan@coursera/MySQL/MySQL_Exercise_12_Queries_that_Test_Relationships_Between_Test_Completion_and_Test_Circumstances.ipynb": {"API": [], "module": ["numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fernandovela@coursera-datascience-python/week2/Assignment_2.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mohammadroghani@bio/practical.ipynb": {"API": ["IPython.core.display.HTML"], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/eren-aydemir@Semantic-Segmantation/Inference_v2.ipynb": {"API": [["tensorflow.assert_rank", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "os.path.join", "copy.deepcopy", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.zeros", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.Session", "glob.glob", "glob.glob", "glob.glob", "tensorflow.Graph.as_default", "unittest.mock.MagicMock", "unittest.mock.call", "tensorflow.global_variables_initializer", "os.path.join", "os.path.join", "os.path.join", "numpy.arange", "tensorflow.Graph", "numpy.prod", "numpy.arange", "numpy.arange", "numpy.prod", "numpy.prod"], ["glob.glob", "zipfile.ZipFile", "glob.glob", "numpy.array", "random.shuffle", "numpy.dot", "shutil.rmtree", "shutil.rmtree", "urllib.request.urlretrieve", "re.sub", "numpy.array", "time.time", "glob.glob", "numpy.all", "numpy.concatenate", "tensorflow.nn.softmax", "numpy.array", "numpy.array", "numpy.array", "numpy.invert"], ["project_tests.test_load_vgg", "project_tests.test_layers", "project_tests.test_optimize", "project_tests.test_train_nn", "tensorflow.test.gpu_device_name", "warnings.warn", "tensorflow.saved_model.loader.load", "tensorflow.get_default_graph", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d", "tensorflow.add", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d", "tensorflow.add", "tensorflow.layers.conv2d_transpose", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "project_tests.test_for_kitti_dataset", "helper.maybe_download_pretrained_vgg", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.global_variables_initializer", "tensorflow.Session", "helper.gen_batch_function", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.Saver", "tensorflow.train.Saver.save", "tensorflow.test.gpu_device_name", "tensorflow.random_normal_initializer", "tensorflow.contrib.layers.l2_regularizer", "tensorflow.random_normal_initializer", "tensorflow.contrib.layers.l2_regularizer", "tensorflow.random_normal_initializer", "tensorflow.contrib.layers.l2_regularizer", "tensorflow.random_normal_initializer", "tensorflow.contrib.layers.l2_regularizer", "tensorflow.random_normal_initializer", "tensorflow.contrib.layers.l2_regularizer", "tensorflow.random_normal_initializer", "tensorflow.contrib.layers.l2_regularizer"]], "module": ["numpy", "tqdm", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Simpliphy@memoire-figures/Chapitre-2-MoyenneThermo-1site-Matsubara-2x2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/arisliang@official-tutorials/kaggle-gluon-kfold.ipynb": {"API": [["mxnet.nd.random.uniform", "mxnet.nd.random.uniform", "mxnet.autograd.record", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Conv2D", "mxnet.nd.relu", "mxnet.nd.relu", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.nd.relu", "mxnet.nd.relu", "mxnet.nd.relu", "mxnet.gluon.nn.MaxPool2D", "mxnet.gluon.nn.AvgPool2D", "mxnet.gluon.nn.Dense"], ["mxnet.nd.random.uniform", "mxnet.nd.random.uniform", "sys.path.append", "utils.load_data", "utils.try_gpu", "utils.train", "mxnet.init.Xavier"], ["mxnet.nd.random.uniform", "mxnet.nd.random.uniform", "sys.path.append", "utils.load_data", "utils.try_gpu", "utils.train", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Activation", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Activation", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.AvgPool2D", "mxnet.init.Xavier", "mxnet.nd.concat", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Activation", "mxnet.gluon.nn.MaxPool2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Activation", "mxnet.gluon.nn.GlobalAvgPool2D", "mxnet.gluon.nn.Flatten", "mxnet.gluon.nn.Dense"], ["mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Conv2D", "mxnet.nd.relu", "mxnet.nd.relu", "mxnet.gluon.nn.Conv2D", "mxnet.nd.relu", "mxnet.nd.relu", "mxnet.nd.relu", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.MaxPool2D", "mxnet.gluon.nn.AvgPool2D", "mxnet.gluon.nn.Dense", "mxnet.gluon.nn.MaxPool2D", "mxnet.gluon.nn.AvgPool2D", "mxnet.gluon.nn.Dense", "mxnet.gluon.nn.MaxPool2D", "mxnet.gluon.nn.AvgPool2D", "mxnet.gluon.nn.Dense", "mxnet.gluon.nn.MaxPool2D", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.AvgPool2D", "mxnet.gluon.nn.Dense", "mxnet.gluon.nn.MaxPool2D", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.AvgPool2D", "mxnet.gluon.nn.Dense"], ["sys.path.append", "mxnet.gluon.data.vision.FashionMNIST", "mxnet.gluon.data.vision.FashionMNIST", "mxnet.gluon.data.DataLoader", "mxnet.gluon.data.DataLoader", "mxnet.gluon.loss.SoftmaxCrossEntropyLoss", "mxnet.gluon.Trainer", "mxnet.image.imresize.as_in_context", "mxnet.gpu", "mxnet.nd.array", "time.time", "utils.evaluate_accuracy", "mxnet.nd.mean", "mxnet.cpu", "mxnet.image.imresize", "mxnet.gluon.Trainer.step", "utils.accuracy", "mxnet.nd.transpose", "mxnet.autograd.record", "mxnet.image.imresize.astype", "mxnet.image.imresize.as_in_context", "mxnet.nd.mean", "time.time"], ["mxnet.gluon.data.vision.FashionMNIST", "mxnet.gluon.data.vision.FashionMNIST", "mxnet.nd.array", "mxnet.gluon.nn.HybridSequential", "matplotlib.pyplot.subplots", "matplotlib.pyplot.show", "random.shuffle", "mxnet.nd.array", "mxnet.nd.zeros", "mxnet.gluon.loss.SoftmaxCrossEntropyLoss", "random.shuffle", "mxnet.gluon.data.ArrayDataset", "mxnet.gluon.data.DataLoader", "mxnet.gluon.loss.L2Loss", "numpy.linspace", "matplotlib.pyplot.semilogy", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.show", "mxnet.nd.array", "mxnet.gpu", "mxnet.nd.array", "mxnet.gluon.utils.split_and_load", "mxnet.gluon.utils.split_and_load", "mxnet.cpu", "mxnet.nd.array.wait_to_read", "mxnet.nd.array.asscalar", "time.time", "mxnet.gluon.nn.HybridSequential.name_scope", "mxnet.gluon.nn.HybridSequential.add", "mxnet.nd.array", "mxnet.nd.array", "mxnet.nd.array", "mxnet.nd.zeros", "mxnet.nd.array", "mxnet.nd.array", "mxnet.nd.dot", "numpy.arange", "numpy.random.shuffle", "mxnet.nd.array", "mxnet.nd.array", "mxnet.nd.zeros", "mxnet.cpu", "mxnet.gpu", "mxnet.nd.array", "mxnet.cpu.append", "mxnet.cpu", "mxnet.nd.mean", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.MaxPool2D", "mxnet.gluon.nn.GlobalAvgPool2D", "mxnet.gluon.nn.Dense", "mxnet.nd.sum", "mxnet.nd.zeros", "mxnet.image.imresize", "mxnet.nd.transpose", "mxnet.cpu", "mxnet.autograd.record", "mxnet.gluon.nn.Conv2D", "mxnet.nd.sqrt", "mxnet.nd.zeros", "mxnet.nd.zeros", "mxnet.autograd.record", "mxnet.nd.concat", "mxnet.nd.array.take", "mxnet.autograd.record", "mxnet.nd.array.asnumpy", "mxnet.nd.sum", "mxnet.nd.zeros", "mxnet.nd.sum", "time.time", "math.exp"], ["mxnet.nd.random.uniform", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Activation", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Activation", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.AvgPool2D", "mxnet.nd.concat", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Activation", "mxnet.gluon.nn.MaxPool2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Activation", "mxnet.gluon.nn.GlobalAvgPool2D", "mxnet.gluon.nn.Flatten", "mxnet.gluon.nn.Dense"], ["mxnet.nd.random.uniform", "mxnet.nd.random.uniform", "utils.load_data", "utils.try_gpu", "utils.train", "mxnet.autograd.record", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.BatchNorm", "mxnet.nd.relu", "mxnet.nd.relu", "mxnet.init.Xavier", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.Sequential.add", "mxnet.gluon.nn.Sequential", "mxnet.gluon.nn.MaxPool2D", "mxnet.gluon.nn.AvgPool2D", "mxnet.gluon.nn.Dense"]], "module": ["mxnet", "matplotlib", "scipy", "pandas", "numpy", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yurimkrtumyan@tumo/numpy-tutorial-solved.ipynb": {"API": [[], [], []], "module": ["matplotlib", "IPython", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yarynam@Pre-Project-1/Data_carpentry.ipynb": {"API": ["glob.glob", "pandas.read_csv", "pandas.read_csv.head", "pandas.read_csv.to_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.merge", "pandas.merge.head", "pandas.merge", "pandas.merge.fillna", "pandas.merge.to_csv", "pandas.read_csv.groupby"], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pieere@Machine-Learning-Notes/Implement-Gradient-Descent-in-Linear-Regression.ipynb": {"API": [["numpy.hstack", "numpy.zeros", "numpy.hstack", "numpy.array", "numpy.exp", "numpy.ones", "numpy.ones", "numpy.sum", "numpy.log", "numpy.log"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/makeyourowntextminingtoolkit@makeyourowntextminingtoolkit/A02_svd_applied_to_word_document_matrix.ipynb": {"API": [["re.compile", "re.compile.sub", "re.compile", "re.compile.sub"], ["collections.Counter", "pandas.DataFrame.from_dict", "re.compile"], ["pandas.set_option", "os.path.isfile", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.DataFrame", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.DataFrame", "glob.glob", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.DataFrame", "pandas.DataFrame.max", "os.remove", "collections.Counter", "collections.Counter.items", "pandas.HDFStore", "pandas.HDFStore.close", "os.remove", "math.exp", "math.pow"], ["pandas.set_option", "os.path.isfile", "pandas.HDFStore", "pandas.HDFStore.close", "numpy.zeros", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.DataFrame", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.DataFrame", "numpy.vstack.astype", "numpy.vstack.max", "os.remove", "numpy.array.head", "numpy.array", "numpy.vstack", "numpy.dot", "numpy.sqrt", "numpy.sqrt", "numpy.sum", "numpy.sum", "numpy.square", "numpy.square"], ["wordcloud.WordCloud", "wordcloud.WordCloud.generate_from_frequencies", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.axis", "networkx.from_pandas_dataframe", "networkx.readwrite.json_graph.node_link_data", "os.path.join", "os.path.join", "networkx.from_pandas_dataframe", "networkx.readwrite.json_graph.node_link_data", "os.path.join", "os.path.join", "matplotlib.pyplot.bar", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.axis", "matplotlib.pyplot.subplot.axhline", "matplotlib.pyplot.subplot.axvline", "matplotlib.pyplot.subplot.set_yticklabels", "matplotlib.pyplot.subplot.set_xticklabels", "matplotlib.pyplot.subplot.set_title", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.show", "os.path.dirname", "os.path.dirname", "random.randrange", "os.path.dirname", "os.path.dirname", "random.randrange", "numpy.arange"], [], ["glob.glob", "os.path.basename"], ["pandas.set_option", "os.path.isfile", "pandas.HDFStore", "pandas.HDFStore.close", "collections.Counter", "numpy.fromiter", "pandas.DataFrame", "pandas.HDFStore", "pandas.HDFStore.close", "glob.glob", "pandas.DataFrame", "pandas.DataFrame.fillna", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.HDFStore", "pandas.HDFStore.close", "os.remove", "pandas.DataFrame.head", "collections.Counter.items", "pandas.HDFStore", "pandas.HDFStore.close", "os.remove"], ["pandas.set_option", "os.path.isfile", "pandas.HDFStore", "pandas.HDFStore.close", "scipy.linalg.svd", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.HDFStore", "pandas.HDFStore.close", "numpy.dot", "pandas.DataFrame", "pandas.HDFStore", "pandas.HDFStore.close", "numpy.dot", "pandas.DataFrame", "os.remove", "numpy.diag", "numpy.diag"], ["pandas.read_table"], ["pandas.set_option", "os.path.isfile", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.HDFStore", "pandas.HDFStore.close", "pandas.DataFrame", "os.remove", "numpy.tanh"], "pandas.DataFrame", "numpy.linalg.svd", "numpy.diag", "numpy.dot", "numpy.zeros_like", "numpy.dot", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.axis", "matplotlib.pyplot.subplot.axis", "matplotlib.pyplot.subplot.axhline", "matplotlib.pyplot.subplot.axvline", "matplotlib.pyplot.subplot.set_yticklabels", "matplotlib.pyplot.subplot.set_xticklabels", "matplotlib.pyplot.subplot.set_title", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.show", "numpy.dot", "pandas.DataFrame", "numpy.round", "numpy.round", "numpy.round", "numpy.dot", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "matplotlib.pyplot.get_cmap"], "module": ["wordcloud", "matplotlib", "pandas", "scipy", "numpy", "networkx", "numba", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jo2232@Homework-5-MatPlotLib/Pyber.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wseviour@wseviour.github.io/notebooks/Guez2013.ipynb": {"API": [], "module": ["matplotlib", "numpy", "ipywidgets", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Murcha1990@ML9/PCA_ML9_to_fill.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kolchinski@ktsandbox/python/Create Synthetic Data, Train BKT Model.ipynb": {"API": [["numpy.random.normal", "numpy.random.randint", "numpy.array", "numpy.zeros", "numpy.zeros", "hmmlearn.hmm.MultinomialHMM", "numpy.random.binomial", "numpy.random.normal", "numpy.random.binomial", "numpy.exp", "numpy.exp"]], "module": ["numpy", "hmmlearn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/xyf186@Python_notes/\u7b2c2\u8282_Python\u6838\u5fc3\u7f16\u7a0b/1-python\u9ad8\u7ea7\u7f16\u7a0b/02.python\u9ad8\u7ea72-\u751f\u6210\u5668\u3001\u95ed\u5305\u3001\u88c5\u9970\u5668.ipynb": {"API": [["unittest.main", "requests.get", "requests.get.json"], [], [], [], [], [], [], [], ["os.listdir", "os.chdir", "os.rename"], [], [], []], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/data4sci@PP2/chapter2_2.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ConorCurry@NumericalLinearAlgebra/hw2/hw2.ipynb": {"API": [["matplotlib.pyplot.plot", "matplotlib.pyplot.plot.show"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/triwandaseptian@JUPYTER_NOTEBOOK_pengujian-data-snmp/PENGUJIAN3.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/RobertArbon@IntegerMapping/Warped Integer Mapping.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JanvanVliet@Jan-van-Vliet/Week_3_project.ipynb": {"API": [], "module": ["scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ruggeri@deep-learning-projects/00_logistic_regression_project.ipynb": {"API": [], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/haniramezani@prepare-fuel-data/DC.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ZainRaza14@Random-Forest-Classifier/Assignment_4c_i12_0340_Random-Forests-Random-Conic.ipynb": {"API": [[], ["weakLearner.evaluate", "numpy.unique", "numpy.unique", "numpy.array", "numpy.array", "weakLearner.ConicWeakLearner", "weakLearner.LinearWeakLearner", "numpy.sum", "weakLearner.WeakLearner", "weakLearner.RandomWeakLearner"], [], []], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/FHainzl@SD-TSIA211/TP2/TP2.ipynb": {"API": [["numpy.loadtxt", "numpy.mean", "numpy.std"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/JayMichChi@DSI_class_regression/Wednesday Bias Variance Tradeoff.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/peterjfoster@eLife/Get_alpha_and_beta.ipynb": {"API": [[], "sys.path.append", "contract.setup_grid", "scipy.integrate.odeint", "contract.init_packed", "scipy.optimize.curve_fit", "scipy.optimize.curve_fit"], "module": ["scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/csdesilva@SDC_workshop_2018/python/Untitled.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Kyubyong@pytorch_exercises/Chapter1_Tensors/Statistics_solution.ipynb": {"API": [], "module": ["torch", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/krishnac7@DSXMarkovChain/Markov chain.ipynb": {"API": ["random.randint", "collections.defaultdict", "numpy.searchsorted", "numpy.cumsum", "numpy.random.rand", "numpy.sum"], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/taesiri89@science_team_kth_practice/Breast_Cancer_Wisconsin_Data/Breast Cancer Diagnosis _ TensorFlow _ Practice.ipynb": {"API": [], "module": ["numpy", "tensorflow", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jannab@star-wars-survey/star_wars_survey.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/freysam@252examples2018s01/python/notebooks/pythonian.ipynb": {"API": [[], []], "module": ["IPython", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/marco-p@muovebrasil/GruposComparativosNotebook.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jaganmohan@assignment3/TBFactors.ipynb": {"API": [], "module": ["matplotlib", "numpy", "keras", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pandeydivesh15@Quora-Duplicate-Question-Detection/quora_duplicate_ques.ipynb": {"API": [], "module": ["keras", "numpy", "spacy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AIHackerTest@Hansoluo_Py101-004/Chap3/note/ch3_study.ipynb": {"API": [[], ["random.randint", "random.randint"], [], [], [], [], [], [], ["random.randint"], ["flask.Flask", "flask.Flask.route", "flask.Flask.route", "flask.render_template", "requests.get", "json.loads", "flask.Flask.run", "flask.render_template", "flask.render_template"], ["os.path.dirname", "os.path.join", "csv.reader", "os.getcwd"], ["os.path.dirname", "os.path.join", "os.getcwd"], ["datetime.datetime.strptime", "requests.get", "json.loads", "datetime.datetime.now", "time.sleep"], ["flask.Flask", "sqlite3.connect", "sqlite3.connect.cursor", "flask.Flask.route", "flask.Flask.route", "sqlite3.connect.commit", "sqlite3.connect.commit", "requests.get", "json.loads", "flask.render_template", "flask.Flask.run", "sqlite3.connect.close", "flask.render_template", "flask.request.form.keys", "flask.render_template", "flask.request.form.keys", "flask.request.form.keys", "flask.request.form.keys", "flask.request.form.split"]], "module": ["flask", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/reemagit@GraphKernel/GraphKernel_tutorial.ipynb": {"API": [[], ["random.sample", "random.choice", "random.choice", "random.choice", "random.choice"], [], ["scipy.sparse.csc_matrix", "numpy.asarray", "numpy.asmatrix", "numpy.asmatrix.sum", "numpy.diag", "scipy.sparse.csc_matrix", "scipy.sparse.linalg.expm", "numpy.sqrt", "scipy.sparse.csc_matrix", "numpy.diag", "numpy.dot", "numpy.eye", "numpy.tile", "numpy.eye", "scipy.spatial.distance.squareform", "scipy.spatial.distance.squareform", "numpy.asarray", "numpy.linalg.inv", "scipy.spatial.distance.pdist", "scipy.spatial.distance.pdist", "numpy.dot", "numpy.eye", "numpy.linalg.inv", "numpy.eye"], []], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cphyc@project_filament_torque/Non-zero correlation.ipynb": {"API": [[], ["numpy.diff", "functools.lru_cache", "numpy.diff", "numba.jit", "numpy.loadtxt", "numpy.sqrt", "numpy.array", "numpy.sqrt", "numpy.sin", "numpy.cos", "numpy.isfinite", "numpy.isnan", "numpy.linalg.inv", "scipy.integrate.dblquad", "numpy.cos", "numpy.sin", "numpy.exp", "numpy.sum", "numpy.zeros", "numpy.concatenate", "numpy.asarray", "numpy.zeros", "itertools.combinations_with_replacement", "functools.partial", "numpy.asarray", "matplotlib.pyplot.imshow", "numpy.arange", "matplotlib.pyplot.xticks", "matplotlib.pyplot.yticks", "numpy.isclose", "IPython.display.display", "numpy.dot", "numpy.dot", "numpy.array", "numpy.exp", "numpy.sum", "numpy.exp", "multiprocessing.Pool", "tqdm.tqdm", "numpy.zeros", "numpy.abs", "numpy.nanmin", "IPython.display.Markdown", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.isfinite.extend", "numpy.isfinite.extend", "numpy.array", "numpy.isnan", "numpy.linalg.eigvalsh", "numpy.where", "numpy.floor", "numpy.array", "numpy.array", "multiprocessing.cpu_count", "numpy.log10", "matplotlib.colors.SymLogNorm"]], "module": ["matplotlib", "scipy", "numpy", "tqdm", "numba", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fisiceoir@LearningAssistantProject/LA Project.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zbremmer@jupyter_notebooks/Hate Crime Analysis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ninastempelj@Smucarskiskoki/Projekt_skoki.ipynb": {"API": [["os.path.dirname", "re.compile", "re.findall", "os.makedirs", "sys.stdout.flush", "requests.get", "sys.stdout.flush", "requests.get", "os.path.join", "csv.DictWriter", "csv.DictWriter.writeheader", "os.path.isfile", "os.path.isfile", "os.listdir", "csv.DictWriter.writerow"], ["requests.get", "re.findall", "requests.get", "re.findall", "orodja.shrani_tekmo"], []], "module": ["pandas", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fuyas@demography-analysis2/analysis.ipynb": {"API": [["csv.DictReader", "re.sub.split", "unidecode.unidecode", "collections.Counter", "numpy.histogram", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.xticks", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.subplot.axis", "numpy.histogram", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.xticks", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.subplot.axis", "numpy.histogram", "numpy.histogram.astype", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.subplot.axis", "matplotlib.pyplot.subplot.legend", "matplotlib.pyplot.xticks", "re.sub", "re.sub.split", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.legend", "matplotlib.pyplot.subplot.axis", "matplotlib.pyplot.xticks", "matplotlib.pyplot.subplot.set_yticks", "collections.Counter", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.xticks", "matplotlib.pyplot.yticks", "matplotlib.pyplot.subplot.axis", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.full", "numpy.full", "numpy.full", "numpy.full", "numpy.arange", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.subplot.axis", "matplotlib.pyplot.subplot.legend", "matplotlib.pyplot.xticks", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "numpy.full", "numpy.full", "numpy.full", "numpy.full", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.subplot.axis", "matplotlib.pyplot.subplot.legend", "matplotlib.pyplot.xticks", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.subplot.legend", "matplotlib.pyplot.subplot.set_xticks", "matplotlib.pyplot.subplot.set_xticklabels", "matplotlib.pyplot.subplot.axis", "matplotlib.pyplot.subplot.set_ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.subplot.legend", "matplotlib.pyplot.subplot.set_xticks", "matplotlib.pyplot.subplot.set_xticklabels", "matplotlib.pyplot.subplot.axis", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "numpy.histogram", "numpy.histogram", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.subplot.bar", "matplotlib.pyplot.xticks", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.subplot.legend", "matplotlib.pyplot.subplot.axis", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.plot", "matplotlib.pyplot.xticks", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.subplot.legend", "collections.defaultdict", "collections.defaultdict", "string.capwords", "datetime.date", "string.capwords", "datetime.date", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.ylabel", "numpy.random.normal", "numpy.zeros", "numpy.zeros", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "numpy.histogram", "numpy.seterr", "matplotlib.pyplot.subplot.legend", "matplotlib.pyplot.xticks", "matplotlib.pyplot.subplots", "matplotlib.pyplot.xticks", "matplotlib.pyplot.subplot.set_title", "matplotlib.pyplot.figure.subplots_adjust", "matplotlib.pyplot.setp", "collections.Counter", "string.capwords", "string.capwords", "string.capwords", "string.capwords", "string.capwords", "string.capwords", "string.capwords", "string.capwords", "string.capwords", "string.capwords", "string.capwords", "string.capwords", "string.capwords", "string.capwords", "string.capwords", "numpy.mean", "numpy.mean", "numpy.median", "numpy.median", "matplotlib.pyplot.subplot.scatter", "numpy.random.normal", "matplotlib.pyplot.subplot.scatter", "numpy.argsort", "numpy.arange", "matplotlib.pyplot.subplot.plot", "datetime.date", "datetime.date", "datetime.date", "datetime.date", "collections.Counter.most_common", "collections.Counter.most_common", "numpy.histogram", "datetime.datetime.strptime", "datetime.datetime.strptime", "datetime.datetime.strptime", "datetime.datetime.strptime", "string.capwords", "string.capwords", "collections.Counter.most_common", "collections.defaultdict.get", "collections.defaultdict.get", "collections.Counter.most_common", "collections.Counter.most_common", "collections.Counter.most_common", "collections.Counter.most_common", "collections.Counter.most_common", "collections.Counter.most_common"]], "module": ["matplotlib", "numpy", "unidecode"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AVT96@Producci-n-de-WTI-BRENT-Y-MME-.ipynb/Producci\u00f3n de WTI,BRENT Y MME .ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bupticybee@icytranslate_api/align-and-translate-char.ipynb": {"API": [[], ["requests.get", "requests.get", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "json.loads", "json.loads"]], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/banzayats@bgg_xml_stats/BGG_stats.ipynb": {"API": [["xml.etree.cElementTree.ElementTree", "urllib2.urlopen.getroot", "csv.writer", "csv.writer.writerow", "csv.writer", "csv.writer.writerow", "operator.itemgetter", "csv.writer.writerow", "csv.writer.writerow", "urllib2.urlopen"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aleriedy@web-traffic/submission-final.ipynb": {"API": [["tensorflow.maximum", "tensorflow.maximum", "tensorflow.python.ops.state_ops.assign", "tensorflow.python.ops.state_ops.assign", "tensorflow.python.ops.state_ops.assign", "tensorflow.python.ops.state_ops.assign", "tensorflow.python.ops.state_ops.assign", "tensorflow.python.ops.state_ops.assign", "tensorflow.python.ops.control_flow_ops.group", "tensorflow.abs", "tensorflow.abs", "tensorflow.python.framework.ops.colocate_with", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.constant_op.constant", "tensorflow.maximum"], ["pickle.load.create_vars", "tensorflow.train.Saver", "pickle.dump", "tensorflow.Graph.as_default", "tensorflow.train.Saver", "tensorflow.global_variables_initializer", "tensorflow.as_dtype", "tensorflow.constant", "tensorflow.get_local_variable", "tensorflow.device", "pickle.load", "numpy.array", "tensorflow.placeholder", "tensorflow.Session", "tensorflow.name_scope", "tensorflow.Graph", "tensorflow.as_dtype", "tensorflow.ConfigProto"], ["tensorflow.random_shuffle", "tensorflow.gather", "tensorflow.boolean_mask", "tensorflow.assert_equal", "tensorflow.concat", "tensorflow.cast", "tensorflow.maximum", "tensorflow.gather", "tensorflow.zeros_like", "tensorflow.where", "tensorflow.split", "tensorflow.where", "tensorflow.random_uniform", "tensorflow.reduce_sum", "tensorflow.split", "tensorflow.reduce_mean", "tensorflow.sqrt", "tensorflow.split", "tensorflow.stack", "tensorflow.concat", "tensorflow.expand_dims", "tensorflow.concat", "tensorflow.concat", "tensorflow.range", "tensorflow.shape", "tensorflow.control_dependencies", "tensorflow.split", "tensorflow.random_shuffle", "tensorflow.is_nan", "tensorflow.zeros_like", "tensorflow.to_int32", "tensorflow.reduce_mean", "tensorflow.random_shuffle", "tensorflow.random_shuffle", "tensorflow.gather", "tensorflow.gather", "tensorflow.range", "tensorflow.gather", "tensorflow.fill", "tensorflow.is_nan", "pandas.Timedelta", "pandas.Timedelta", "pandas.Timedelta", "pandas.Timedelta", "pandas.Timedelta", "pandas.Timedelta", "tensorflow.equal", "tensorflow.squared_difference", "tensorflow.expand_dims", "tensorflow.tile", "tensorflow.tile", "tensorflow.data.Dataset.from_tensor_slices", "tensorflow.concat", "tensorflow.gather", "pandas.Timedelta", "pandas.Timedelta", "pandas.Timedelta"], ["numba.jit", "numba.jit", "numba.jit", "os.path.exists", "os.path.join", "os.path.exists", "pandas.DataFrame", "pandas.DatetimeIndex", "numpy.mean", "numpy.mean", "numpy.empty", "numpy.empty", "numpy.full", "numpy.full", "pandas.isnull", "pandas.date_range", "pandas.Series", "extractor.extract.drop", "numpy.full", "re.compile", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "pandas.date_range", "numpy.stack", "numpy.stack", "feeder.VarFeeder", "pandas.read_pickle", "pandas.read_pickle", "pandas.read_pickle", "numpy.sqrt", "numpy.sqrt", "numpy.log1p", "numpy.arange", "pandas.Series", "re.compile.fullmatch", "pandas.get_dummies", "numpy.std", "pandas.Timedelta", "numpy.sum", "numpy.sum", "numpy.nan_to_num", "numpy.nan_to_num", "os.path.exists", "numpy.sum", "numpy.sum", "numpy.sum", "pandas.DateOffset", "extractor.extract", "pandas.get_dummies.std", "numpy.isnan", "numpy.isnan", "numpy.cos", "numpy.sin", "pandas.read_csv", "pandas.Timestamp", "pandas.Timestamp", "pandas.get_dummies.mean", "numpy.isnan", "numpy.isnan", "extractor.extract.join"], ["tensorflow.contrib.training.HParams"], ["logging.getLogger", "tensorflow.reset_default_graph", "tensorflow.train.get_or_create_global_step", "tensorflow.assign_add", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "pandas.Timedelta", "pandas.date_range", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "hparams.build_from_set", "numpy.mean", "numpy.min", "numpy.mean", "numpy.any", "numpy.array", "numpy.array", "numpy.array", "numpy.zeros", "logging.getLogger.debug", "numpy.mean", "tensorflow.set_random_seed", "tensorflow.device", "feeder.VarFeeder.read_vars", "numpy.ceil", "model.Model", "tensorflow.get_variable_scope.reuse_variables", "tensorflow.train.Saver", "tensorflow.train.Saver", "tensorflow.train.Saver", "tensorflow.Session", "feeder.VarFeeder.read_vars.restore", "numpy.mean", "tensorflow.variable_scope", "model.Model", "tensorflow.Session", "input_pipe.page_features.load_vars", "pandas.Timedelta", "pandas.concat", "pandas.date_range", "numpy.mean", "heapq.heappushpop", "heapq.heappush", "numpy.stack", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.array", "tensorflow.Summary", "numpy.mean", "logging.getLogger.debug", "heapq.heappushpop", "heapq.heappush", "logging.getLogger.debug", "input_pipe.Splitter", "input_pipe.FakeSplitter", "tensorflow.variable_scope", "model.Model", "model.Model", "tensorflow.summary.FileWriter", "tensorflow.device", "tensorflow.get_variable_scope", "shutil.rmtree", "itertools.chain", "model.Model.init", "sys.stderr.flush", "tensorflow.device", "feeder.VarFeeder.read_vars", "input_pipe.InputPipe", "input_pipe.page_features.init_iterator", "tensorflow.train.Saver.restore", "pandas.concat", "pandas.Timedelta", "tensorflow.Summary.Value", "tensorflow.Summary", "numpy.mean", "input_pipe.page_features", "input_pipe.page_features", "tensorflow.device", "input_pipe.InputPipe", "shutil.rmtree", "tensorflow.device", "tensorflow.ConfigProto", "tqdm.trange", "input_pipe.page_features", "tensorflow.variable_scope", "tensorflow.ConfigProto", "pandas.Timedelta", "numpy.array", "numpy.array", "input_pipe.InputPipe", "input_pipe.InputPipe", "tensorflow.variable_scope", "model.Model", "pandas.DataFrame", "tensorflow.Summary.Value", "tensorflow.Summary.Value", "tensorflow.GPUOptions", "tensorflow.train.Saver.save", "tensorflow.train.Saver.save", "tensorflow.train.Saver.save", "tensorflow.train.Saver.restore", "tensorflow.train.Saver.restore", "tensorflow.GPUOptions", "pandas.DataFrame", "numpy.expm1", "numpy.round", "numpy.expm1"], ["tensorflow.contrib.layers.variance_scaling_initializer", "tensorflow.transpose", "functools.partial", "tensorflow.layers.dense", "tensorflow.transpose", "tensorflow.layers.dense", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.nn.depthwise_conv2d_native", "tensorflow.squeeze", "tensorflow.transpose", "tensorflow.concat", "tensorflow.reduce_sum", "tensorflow.round", "tensorflow.maximum", "tensorflow.where", "tensorflow.expm1", "tensorflow.expm1", "tensorflow.maximum", "tensorflow.losses.compute_weighted_loss", "tensorflow.transpose", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.is_finite", "tensorflow.where", "tensorflow.to_float", "tensorflow.losses.absolute_difference", "cocob.COCOB", "tensorflow.train.get_global_step", "tensorflow.get_collection", "cocob.COCOB.compute_gradients", "tensorflow.clip_by_global_norm", "tensorflow.unstack", "tensorflow.sqrt", "tensorflow.name_scope", "tensorflow.Graph.as_default", "tensorflow.ConfigProto", "tensorflow.control_dependencies", "tensorflow.get_variable", "tensorflow.zeros", "tensorflow.transpose", "tensorflow.nn.dropout", "tensorflow.variable_scope", "tensorflow.reduce_sum", "tensorflow.expm1", "tensorflow.round", "tensorflow.abs", "tensorflow.abs", "tensorflow.zeros_like", "tensorflow.reduce_sum", "tensorflow.zeros_like", "tensorflow.size", "cocob.COCOB.apply_gradients", "tensorflow.train.ExponentialMovingAverage", "tensorflow.train.ExponentialMovingAverage.apply", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.nn.l2_loss", "tensorflow.concat", "tensorflow.python.util.nest.assert_same_structure", "tensorflow.transpose", "tensorflow.while_loop", "tensorflow.squeeze", "tensorflow.where", "tensorflow.Session", "tensorflow.shape", "tensorflow.contrib.layers.variance_scaling_initializer", "tensorflow.variable_scope", "tensorflow.layers.conv1d", "tensorflow.layers.conv1d", "tensorflow.layers.max_pooling1d", "tensorflow.layers.conv1d", "tensorflow.layers.conv1d", "tensorflow.layers.max_pooling1d", "tensorflow.layers.conv1d", "tensorflow.layers.conv1d", "tensorflow.layers.max_pooling1d", "tensorflow.reshape", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.expm1", "tensorflow.abs", "tensorflow.abs", "tensorflow.expand_dims", "tensorflow.control_dependencies", "tensorflow.group", "tensorflow.python.util.nest.map_structure", "tensorflow.zeros_like", "tensorflow.square", "tensorflow.square", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.layers.dense", "tensorflow.constant", "tensorflow.expand_dims", "tensorflow.TensorArray", "tensorflow.Graph", "tensorflow.GPUOptions", "tensorflow.assert_equal", "tensorflow.random_uniform", "tensorflow.nn.dropout", "tensorflow.abs", "tensorflow.abs", "tensorflow.expand_dims", "tensorflow.train.ExponentialMovingAverage", "tensorflow.get_collection", "tensorflow.variable_scope", "tensorflow.contrib.rnn.GRUBlockCell", "tensorflow.concat", "tensorflow.concat", "tensorflow.TensorArray", "tensorflow.constant", "tensorflow.nn.elu", "tensorflow.contrib.layers.variance_scaling_initializer", "tensorflow.contrib.layers.variance_scaling_initializer", "tensorflow.nn.dropout", "tensorflow.contrib.rnn.DropoutWrapper"], ["re.compile", "re.compile", "numpy.full_like", "numpy.full_like", "numpy.full_like", "numpy.full_like", "numpy.full_like", "pandas.DataFrame", "re.compile.fullmatch", "re.compile.match"]], "module": ["matplotlib", "pandas", "numpy", "tensorflow", "tqdm", "numba"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rmotr-curriculum@ds-class-1-intro-to-data-science/2 - Numpy.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shubhamvadhera@knn-n-fold-classification/knn-mean-accuracy.ipynb": {"API": [["pandas.read_csv", "pandas.DataFrame", "pandas.DataFrame", "numpy.zeros", "numpy.zeros", "numpy.zeros", "scipy.sparse.csr_matrix", "scipy.sparse.csr_matrix.sort_indices", "math.ceil", "collections.Counter", "numpy.random.uniform", "collections.Counter.most_common", "numpy.linalg.norm", "numpy.linalg.norm", "scipy.sparse.csr_matrix.getrow", "scipy.sparse.csr_matrix.getrow"], "pandas.read_csv", "pandas.DataFrame", "pandas.DataFrame"], "module": ["numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sreeras@PythonAlgorithms/Trees/ValidateBinarySearchTreeInterviewProblemSolved.ipynb": {"API": [], "module": ["nose"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/barley99@mccme_python_tasks/lesson3_tasks_solutions.ipynb": {"API": [], "module": ["scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/abhishekmshr956@Computational-Modelling/SineGratings + Filters.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bpeng93@CNN_Feature_Visualization/Clean_MNIST.ipynb": {"API": [["tensorflow.placeholder", "tensorflow.placeholder", "model.SVHN", "tools.loss", "tools.accuracy", "tensorflow.Variable", "tools.optimize", "tensorflow.train.Saver", "tensorflow.summary.merge_all", "tensorflow.name_scope", "input_data.read_SVHN", "tensorflow.global_variables", "tensorflow.Session", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter", "tensorflow.train.Coordinator.join", "tensorflow.global_variables_initializer", "numpy.arange", "tensorflow.train.Coordinator.request_stop", "tensorflow.train.Coordinator.should_stop", "tensorflow.summary.FileWriter.add_summary", "tensorflow.summary.FileWriter.add_summary", "os.path.join", "tensorflow.global_variables.save"], ["scipy.io.loadmat", "numpy.dot", "numpy.mean", "numpy.std", "numpy.zeros", "numpy.arange", "numpy.hstack", "numpy.random.shuffle", "math.floor", "tensorflow.name_scope", "tensorflow.train.input_producer", "tensorflow.train.input_producer.dequeue", "tensorflow.slice", "tensorflow.cast", "tensorflow.slice", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.cast", "tensorflow.train.batch", "tensorflow.one_hot", "tensorflow.reshape"], ["tensorflow.nn.max_pool", "tensorflow.nn.dropout.get_shape", "tensorflow.nn.dropout.get_shape", "tensorflow.nn.dropout.get_shape", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.reshape", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.reshape", "tensorflow.nn.bias_add", "tensorflow.variable_scope", "tensorflow.nn.dropout", "tensorflow.variable_scope", "tensorflow.cast", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.cast", "tensorflow.summary.scalar", "tensorflow.name_scope", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.reduce_mean", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.constant_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.constant_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.constant_initializer"], ["tools.conv", "tools.pool", "tools.conv", "tools.pool", "tools.conv", "tools.pool", "tools.FC_layer", "tools.drop_out", "tools.final_layer"]], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rayjustinhuang@CS175/Balls Without Replacement Exercise (Seaborn Experimenting).ipynb": {"API": [["numpy.random.randint"], [], ["numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_axes", "numpy.sqrt", "numpy.random.normal"], [], ["pandas.DataFrame", "matplotlib.pyplot.plot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.plot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.plot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_axes", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_axes", "numpy.sqrt", "numpy.random.normal", "numpy.sqrt", "numpy.random.normal"], [], []], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/planetceres@monte-carlo-chess/MCMC_Sampling.ipynb": {"API": [["numpy.reshape", "numpy.linspace", "numpy.zeros", "numpy.zeros", "numpy.random.choice", "numpy.ndindex", "numpy.dstack", "numpy.dstack", "numpy.mean", "numpy.std", "numpy.mean", "numpy.std", "numpy.where", "numpy.where", "numpy.zeros", "numpy.mean", "numpy.std"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/phiendp@recurrent-neural-networks/RNN_project.ipynb": {"API": [["numpy.asarray", "numpy.asarray", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "numpy.asarray.append", "numpy.asarray.append", "numpy.shape", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.LSTM", "keras.layers.Dense"]], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ChiLunHuang@Example-for-video-downloaded/Example.ipynb": {"API": ["requests.get", "shutil.copyfileobj"], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/herdingbats@temperature-blanket/Temperature blanket.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DQOfficial@examples/wifi_agg_pandas.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/WenxuanZhang@Stock-Picking/Stock Pick.ipynb": {"API": ["pandas.read_csv", "pandas_datareader.data.DataReader", "pandas.date_range", "pandas_datareader.data.DataReader.to_excel", "pandas.read_excel", "pandas.read_excel.apply", "pandas.read_excel.apply", "pandas.read_excel.apply", "pandas.DataFrame", "pandas.DataFrame.merge"], "module": ["matplotlib", "pandas_datareader", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tuchandra@sleep-analysis/stats-and-sleep.ipynb": {"API": [["datetime.datetime.strptime", "datetime.date.today", "requests.post", "os.path.abspath", "os.path.join", "json.loads", "os.path.split", "os.path.exists", "os.makedirs", "requests.post", "os.path.join", "sys.exit", "datetime.timedelta", "json.dump", "json.loads.replace", "json.loads.replace", "json.loads.replace", "json.loads", "json.dump", "json.load", "datetime.date.today", "datetime.timedelta", "requests.post.json", "base64.b64encode"]], "module": ["matplotlib", "pandas", "scipy", "statsmodels", "numpy", "seaborn", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Avyukth@pr_4/language-translation/dlnd_language_translation.ipynb": {"API": [["os.path.join", "pickle.dump", "pickle.load", "copy.copy", "pickle.dump", "pickle.load", "copy.copy.items", "numpy.array", "numpy.array"], ["helper.create_lookup_tables", "helper.create_lookup_tables", "numpy.array_equal", "tensorflow.Graph.as_default", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.assert_rank", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.LSTMStateTuple", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.Graph.as_default", "tensorflow.Graph.as_default", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session", "tensorflow.variable_scope", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.LSTMStateTuple", "tensorflow.variable_scope", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.LSTMStateTuple", "itertools.chain.from_iterable", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.Graph", "tensorflow.contrib.layers.fully_connected", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Graph", "tensorflow.contrib.layers.fully_connected", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sr6582924@TensorFlow-Examples/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.group", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.python.ops.resources.initialize_resources", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.python.ops.resources.shared_resources", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hk1506@Unit1Lesson3/Lesson 3 Challenge.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/michbad@adversarial-mnist/analysis.ipynb": {"API": [["tensorflow.truncated_normal", "tensorflow.Variable", "tensorflow.constant", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.max_pool", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.placeholder", "tensorflow.nn.dropout", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.matmul", "tensorflow.train.AdamOptimizer"]], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zerosum99@python_tensorflow/tensorflow 700_tensorboard\ub97c \uc704\ud55c \ub85c\uadf8\uc5d0 \ub300\ud55c inspect \uac80\uc0ac\ud558\uae30.ipynb": {"API": [], "module": ["IPython", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bthalenberg@neuralnet/neuralnet.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yuefuzi@Thinkful_project_11/Thinkful_Project_11.ipynb": {"API": [], "module": ["pandas", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lovenoor@plos_one_student_transfers/MajorShiftsAnalysis.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/arjunshah1993@Exploratory-analysis-of-Titanic-dataset/Titanic.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Amirosimani@cryptocurrency/cryptocurrencies.ipynb": {"API": [], "module": ["quandl", "numpy", "plotly", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ads2206@apma-group-work---personal/03_interpolation.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/parikshit-soni@Data_analysis/Problem 4 & 5/Problem 4 & 5 .ipynb": {"API": [[], ["pandas.read_csv"], []], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ruteee@ConvolucaoFrequencia/Processamento digital de sinais.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bangbangjim@Genetic-Algorithm-to-play-Snake/Code.ipynb": {"API": ["IPython.display.display", "IPython.display.Image"], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/glados17@a-data-wrangling-for-liang-1/liang_1_1.ipynb": {"API": ["pandas.DataFrame", "pandas.DataFrame", "pandas.read_csv", "csv.DictReader", "csv.DictReader", "csv.DictReader", "pandas.read_csv", "pandas.read_csv", "csv.DictWriter", "csv.DictWriter.writeheader", "pandas.merge", "csv.DictWriter.writerow", "pandas.cut", "pandas.read_csv.groupby"], "module": ["xlrd", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aragit@DL_pytorch/CIFAR10_PyTorch_Practice_00.ipynb": {"API": [], "module": ["torch", "numpy", "matplotlib", "torchvision"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jonyclee@UCB-Data-Bootcamp-Matplotlib-Pyber-/Pyber.ipynb": {"API": ["os.getcwd", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "pandas.read_csv", "pandas.read_csv", "pandas.DataFrame.merge", "pandas.DataFrame.merge.value_counts", "pandas.DataFrame", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "seaborn.set", "matplotlib.pyplot.text", "matplotlib.pyplot.show", "pandas.DataFrame", "matplotlib.pyplot.pie", "matplotlib.pyplot.title", "matplotlib.pyplot.axis", "matplotlib.pyplot.show", "pandas.DataFrame", "matplotlib.pyplot.pie", "matplotlib.pyplot.title", "matplotlib.pyplot.axis", "matplotlib.pyplot.show", "pandas.DataFrame", "matplotlib.pyplot.pie", "matplotlib.pyplot.title", "matplotlib.pyplot.axis", "matplotlib.pyplot.show", "pandas.DataFrame.merge.value_counts", "pandas.DataFrame.merge.groupby", "pandas.DataFrame.merge.groupby"], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/PeiZhangOSU@peizhangosu.github.io/notebooks/Temperature_SARIMA.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ALifeinBeing@basic_statistics_with_baseball_data/basic_probability_and_statistics.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/superprism@INSA_ALAM/alam.ipynb": {"API": [["matplotlib.pyplot.clf", "matplotlib.pyplot.figure", "matplotlib.pyplot.show", "matplotlib.pyplot.subplot", "matplotlib.pyplot.imshow", "matplotlib.pyplot.subplot", "matplotlib.pyplot.imshow"], ["numpy.linalg.svd", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.diag", "numpy.dot", "numpy.dot"], [], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yamengsun@PythonStudy/Numbers.ipynb": {"API": [], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cissilin@use_jupyter/ssj_example.ipynb": {"API": [], "module": ["matplotlib", "h5py", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/PriyaJain@star-wars-2/Star wars.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Hang91@Image-Segment-Cluster/MyMartinIndex<5>.ipynb": {"API": [], "module": ["scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/robshlee@API_fun/API_fun.ipynb": {"API": ["requests.get", "json.loads", "pandas.DataFrame", "requests.get", "json.loads", "pandas.DataFrame", "pandas.DataFrame.head", "requests.get", "json.loads", "pandas.DataFrame", "requests.get", "json.loads", "json.loads.items", "pandas.DataFrame", "pandas.DataFrame.head", "requests.get", "requests.get.json", "pandas.DataFrame", "requests.get", "requests.get.json", "pandas.DataFrame"], "module": ["pandas", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wcy940418@TextBoxes-TF/TB_training.ipynb": {"API": [["keras.backend.variable", "keras.backend.l2_normalize", "numpy.array", "numpy.linspace", "numpy.linspace", "numpy.meshgrid", "numpy.concatenate", "numpy.tile", "numpy.concatenate.reshape", "numpy.concatenate", "keras.backend.expand_dims", "keras.backend.image_dim_ordering", "keras.engine.topology.InputSpec", "numpy.ones", "keras.backend.image_dim_ordering", "numpy.array", "numpy.array", "numpy.minimum", "keras.backend.variable", "keras.backend.backend", "tensorflow.tile", "keras.backend.int_shape", "numpy.array.append", "numpy.array.append", "numpy.maximum", "numpy.ones", "numpy.tile", "numpy.array.append", "numpy.array.append", "tensorflow.shape", "numpy.sqrt", "numpy.sqrt", "numpy.array.append", "numpy.array.append", "numpy.sqrt", "numpy.sqrt"], [], [], ["tensorflow.abs", "tensorflow.where", "tensorflow.reduce_sum", "tensorflow.maximum", "tensorflow.to_float", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.minimum", "tensorflow.greater", "tensorflow.to_float", "tensorflow.concat", "tensorflow.reduce_min", "tensorflow.to_int32", "tensorflow.reduce_max", "tensorflow.nn.top_k", "tensorflow.expand_dims", "tensorflow.tile", "tensorflow.gather", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.where", "tensorflow.less", "tensorflow.minimum", "tensorflow.reduce_sum", "tensorflow.shape", "tensorflow.reduce_any", "tensorflow.boolean_mask", "tensorflow.range", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.to_float", "tensorflow.not_equal", "tensorflow.ones_like", "tensorflow.shape", "tensorflow.greater", "tensorflow.reshape", "tensorflow.to_int32", "tensorflow.log"]], "module": ["keras", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/oddinigwe@DV-project1/DataVisualization_Project1.ipynb": {"API": ["warnings.filterwarnings", "seaborn.set", "pandas.read_csv", "pandas.read_csv.head", "pandas.read_csv.value_counts", "pandas.read_csv.plot", "pandas.read_csv.plot", "seaborn.jointplot", "seaborn.jointplot", "matplotlib.pyplot.scatter.iris.sns.FacetGrid.map.add_legend", "seaborn.boxplot", "seaborn.boxplot", "seaborn.stripplot", "seaborn.violinplot", "seaborn.kdeplot.iris.sns.FacetGrid.map.add_legend", "seaborn.pairplot", "seaborn.pairplot", "pandas.tools.plotting.andrews_curves", "pandas.tools.plotting.parallel_coordinates", "pandas.tools.plotting.radviz", "pandas.read_csv.drop", "pandas.read_csv.drop", "pandas.read_csv.drop", "pandas.read_csv.drop", "pandas.read_csv.drop", "pandas.read_csv.drop", "seaborn.FacetGrid", "seaborn.FacetGrid"], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/popoolaio@my-python-training/AppData/Local/Temp/Hello+Data+2.ipynb": {"API": [], "module": ["matplotlib", "ipywidgets", "pandas", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/BenderV@PrisonerDilemma/PrisonnersDilemma.ipynb": {"API": [[], ["dilemma.Game", "dilemma.Game.play", "dilemma.Game", "dilemma.Game.play", "dilemma.Game", "dilemma.Game.play", "dilemma.Game", "dilemma.Game.play", "dilemma.Game", "dilemma.Game.play", "dilemma.Game", "dilemma.Game.play", "dilemma.Game", "dilemma.Game.play", "dilemma.Game", "dilemma.Game.play", "collections.Counter", "collections.Counter", "collections.Counter", "collections.Counter", "collections.Counter", "collections.Counter", "collections.Counter", "collections.Counter"], [], [], ["random.uniform"], [], [], [], [], [], ["tensorflow.train.RMSPropOptimizer", "agents._models.MLP", "tensorflow.InteractiveSession", "agents.deepqlearning.DiscreteDeepQ", "numpy.array", "numpy.array", "numpy.array", "tensorflow.initialize_all_variables", "random.choice", "agents.qlearning.QLearning"], [], [], ["tensorflow.constant", "tensorflow.constant", "collections.deque", "tensorflow.scalar_summary", "tensorflow.merge_all_summaries", "tensorflow.no_op", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.identity", "tensorflow.histogram_summary", "tensorflow.argmax", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.stop_gradient", "tensorflow.histogram_summary", "tensorflow.placeholder", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.group", "random.random", "random.randint", "random.sample", "numpy.empty", "numpy.empty", "numpy.zeros", "numpy.empty", "numpy.empty", "tensorflow.reduce_max", "tensorflow.square", "tensorflow.histogram_summary", "tensorflow.histogram_summary", "tensorflow.clip_by_norm"], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.random_uniform_initializer", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.constant_initializer", "math.sqrt", "math.sqrt", "tensorflow.matmul"], ["_models.linear_annealing", "random.choice", "random.random", "random.choice"]], "module": ["pandas", "numpy", "plotly", "tensorflow", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jasonbai@DeepinPython/\u4f60\u597d\uff0cColaboratory.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gaurub@pytorch-learn/MNIST/Main.ipynb": {"API": [], "module": ["matplotlib", "pandas", "torch", "torchvision", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mouiranai@plactice_tensorflow/ch5/BMI.ipynb": {"API": [["tensorflow.constant", "tensorflow.constant", "tensorflow.Session", "tensorflow.train.SummaryWriter", "tensorflow.Session.run"], ["random.randint", "random.randint"], ["pandas.read_csv", "pandas.read_csv.apply", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.train.SummaryWriter", "tensorflow.Session.run", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.reduce_sum", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.initialize_all_variables", "tensorflow.Session.run", "numpy.array", "tensorflow.matmul", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.log"], ["pandas.read_csv", "pandas.read_csv.apply", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.train.SummaryWriter", "tensorflow.Session.run", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.initialize_all_variables", "tensorflow.Session.run", "numpy.array", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.reduce_sum", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.matmul", "tensorflow.log"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.Variable", "tensorflow.assign", "tensorflow.Session", "tensorflow.train.SummaryWriter", "tensorflow.Session.run", "tensorflow.Session.run"], ["pandas.read_csv", "pandas.read_csv.apply", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.reduce_sum", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.initialize_all_variables", "tensorflow.Session.run", "numpy.array", "tensorflow.matmul", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.log"], [], [], ["tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.initialize_all_variables", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.Session", "tensorflow.train.SummaryWriter", "tensorflow.Session.run"], ["pandas.Series"], ["pandas.DataFrame"], ["pandas.read_csv", "pandas.read_csv.as_matrix", "numpy.empty", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "keras.models.Sequential.evaluate", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.callbacks.EarlyStopping"], ["pandas.DataFrame", "pandas.DataFrame.sort_values", "pandas.DataFrame.sort_values"], ["tensorflow.placeholder", "tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run"], ["pandas.DataFrame"], ["pandas.DataFrame"], ["keras.datasets.mnist.load_data", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "keras.models.Sequential.evaluate", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.optimizers.Adam"], ["tensorflow.placeholder", "tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.Variable", "tensorflow.assign", "tensorflow.Session", "tensorflow.train.SummaryWriter", "tensorflow.Session.run", "tensorflow.Session.run"], ["pandas.read_csv", "pandas.read_csv.apply", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.reduce_sum", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.initialize_all_variables", "tensorflow.Session.run", "numpy.array", "tensorflow.matmul", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.log"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run"], ["pandas.read_csv", "pandas.read_csv.apply", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.train.SummaryWriter", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.reduce_sum", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.initialize_all_variables", "tensorflow.Session.run", "numpy.array", "tensorflow.matmul", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.truncated_normal", "tensorflow.Variable", "tensorflow.constant", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.max_pool", "tensorflow.name_scope", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.nn.relu", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.nn.dropout", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.train.SummaryWriter", "tensorflow.reduce_sum", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.initialize_all_variables", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.Variable", "tensorflow.assign", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run"], ["pandas.read_csv", "pandas.read_csv.apply", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.train.SummaryWriter", "numpy.array", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.reduce_sum", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.initialize_all_variables", "tensorflow.matmul", "tensorflow.log"], ["pandas.DataFrame"], ["pandas.DataFrame"], ["pandas.DataFrame"], ["numpy.zeros", "numpy.arange", "numpy.arange.mean"], ["pandas.DataFrame"]], "module": ["matplotlib", "pandas", "keras", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alecross89@CapsuleNetwork/caps_net_playground.ipynb": {"API": [[]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/anaelenarg@Ejercicios/Ejercicios_bloques_12.ipynb": {"API": ["functools.reduce", "random.choice", "re.findall", "re.findall", "ftplib.FTP", "ftplib.FTP.login", "ftplib.FTP.cwd", "ftplib.FTP.retrlines", "ftplib.FTP.retrbinary", "ftplib.FTP.quit", "tarfile.open", "os.listdir", "random.choice", "tarfile.open.extract", "math.sqrt", "statistics.mean", "statistics.median", "os.remove"], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nhatnguyen12@test-pandas/learn_axis.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ninginthecloud@Brainhack2015/src/EDA.ipynb": {"API": [], "module": ["matplotlib", "pandas", "scipy", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/RajeshRaman91@GitTest01/Mnist 01.ipynb": {"API": [], "module": ["keras"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/madderle@Improving-Project-Estimates/Project Estimate Improvements.ipynb": {"API": ["seaborn.set", "pandas.read_csv", "pandas.to_datetime", "pandas.to_datetime", "pandas.read_csv.sort_index", "pandas.read_csv.head", "pandas.read_csv.apply", "pandas.read_csv.apply", "pandas.read_csv.apply", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "seaborn.countplot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.subplot", "seaborn.countplot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.subplot", "seaborn.countplot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.figure", "seaborn.boxplot", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "seaborn.pointplot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.subplot", "seaborn.pointplot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.subplot", "seaborn.pointplot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "pandas.TimeGrouper.data.groupby.median.to_frame", "pandas.TimeGrouper.plot", "statsmodels.tsa.seasonal.seasonal_decompose", "statsmodels.tsa.seasonal.seasonal_decompose.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "pandas.TimeGrouper.data.groupby.median", "pandas.read_csv.groupby", "pandas.read_csv.groupby", "pandas.read_csv.groupby", "pandas.TimeGrouper"], "module": ["matplotlib", "pandas", "statsmodels", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DivyanshuGola@IPL-2016-Points-Table/IPL 2016 League Matches.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/djtango@learn-mlpy/ex1/ex1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/thomasehuang@ML-Models/Auto-Encoder/variational_autoencoder.ipynb": {"API": ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.add", "tensorflow.shape", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.matmul", "tensorflow.exp", "tensorflow.log", "tensorflow.log", "tensorflow.square", "tensorflow.train.RMSPropOptimizer", "numpy.array", "tensorflow.Session.run"], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cmg-dev@dice_statistsics/3d6 Calandra Feat VS. 4d6.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Arsalan-Syed@MovieReccomender/Untitled.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv.unique", "numpy.sqrt", "numpy.sqrt", "numpy.power", "numpy.power", "pandas.read_csv.isin"], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Yichuans@biodiversity-food-agriculture/Biodiversity for food and agriculture.ipynb": {"API": [], "module": ["matplotlib", "numpy", "ipyparallel", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/prideloki@til-arima-online-retail/online-retail-ARIMA.ipynb": {"API": [["pandas.read_excel", "pandas.read_excel.describe", "pandas.read_excel.head", "pandas.read_excel.astype", "pandas.read_excel.head", "pandas.read_excel.info", "pandas.read_excel.set_index", "matplotlib.pyplot.show", "warnings.filterwarnings", "statsmodels.api.tsa.statespace.SARIMAX", "statsmodels.api.tsa.statespace.SARIMAX.fit", "matplotlib.pyplot.show", "pandas.to_datetime.conf_int", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "pandas.to_datetime.conf_int", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "itertools.product", "pandas.to_datetime", "pandas.read_excel.isnull", "pandas.read_excel.isnull", "pandas.read_excel.resample", "operator.itemgetter", "pandas.to_datetime", "pandas.to_datetime", "itertools.product", "statsmodels.api.tsa.statespace.SARIMAX", "statsmodels.api.tsa.statespace.SARIMAX.fit"]], "module": ["matplotlib", "statsmodels", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aggieed97@DSI-Project-1/code/DSI-Project-One.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ChenChengKuan@PIKI/DesignerSimilarity.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/TomasBaeten@assignments/week3 (1).ipynb": {"API": [], "module": ["pandas", "numpy", "matplotlib", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/davidtgonzales@Negative-Feedback/Speeding up response times.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wawosz@jupyter_notebooks/testing/VTKi jupyter test.ipynb": {"API": [], "module": ["matplotlib", "sympy", "ipywidgets", "scipy", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pheonixhar@Network-attacks/Untitled1.ipynb": {"API": [], "module": ["matplotlib", "pandas", "keras", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mblouk@notebooks-tests/first-notebook.ipynb": {"API": [], "module": ["ipywidgets"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dhadjia1@LSTMSpeechTherapy/SpeechParsing.ipynb": {"API": [["numpy.reshape", "keras.utils.np_utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.callbacks.ModelCheckpoint", "keras.models.Sequential.fit", "keras.models.Sequential.load_weights", "keras.models.Sequential.compile", "numpy.random.randint", "keras.layers.LSTM", "keras.layers.Dropout", "keras.layers.LSTM", "keras.layers.Dropout", "keras.layers.Dense", "numpy.reshape", "keras.models.Sequential.predict", "numpy.argmax", "sys.stdout.write"], ["json.load"], "lxml.html.parse", "lxml.html.parse.getroot", "lxml.html.parse", "lxml.html.parse.getroot"], "module": ["keras", "lxml", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/akaija@DELPHI/DELPHI_console.ipynb": {"API": [], "module": ["IPython", "ipywidgets"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/coryang@Mis-tests/simulation1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/carlakim@APS-4-DPCD/Aula12 Atividade Modelos probabil\u00edsticos discretos.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kabalaandrew@matplot_ex/Matplotlib.ipynb": {"API": [], "module": ["matplotlib", "statsmodels", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dwaithe@peroxisome_scripts/Single color analysis.ipynb": {"API": [[], ["numpy.min", "numpy.zeros", "scipy.ndimage.filters.maximum_filter", "numpy.zeros", "numpy.where", "numpy.zeros", "numpy.zeros", "numpy.where", "numpy.argsort", "numpy.array", "numpy.min", "time.time", "time.time", "numpy.arange", "numpy.argmin"]], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/abhishekori@DataStructureAlgoJavaAndPy/Untitled2.ipynb": {"API": [[]], "module": ["nose"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/harsha-nj@soft_carp/day2_py.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/numerical-mooc@assignment-bank-2015/croberts94/Final Project.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "ipywidgets"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mmitchell@udacity-intro-to-data-analysis/lesson_3/lesson_3.5.ipynb": {"API": [], "module": ["numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vinayakumarr@CNN-RNN/21-03-2018/CNN Architectures.ipynb": {"API": [], "module": ["keras", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/a10doan@Panda_Hw4/GamePurchase_Analysis_main.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/anselsantos@PH_Quant_Stock_Strategy/Scores_vs_3Month_Performance.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/brendanjryan@talks/talks/floats/notebooks/Deconstructing a Floating Point Number.ipynb": {"API": [], "module": ["matplotlib", "numpy", "numba"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wgm2111@wgm-bio/prototype_cysteine_probability.ipynb": {"API": [[], "scipy.arange", "scipy.stats.binom", "scipy.stats.binom.pmf", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot"], "module": ["matplotlib", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DS-BootCamp-DSI-Columbia@AY2017-2018-Summer-CSS/Bootcamp-materials/Session 2.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "statsmodels", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jtamir@mri-sim-py/epg/EPG_testing-T1sensitivite.ipynb": {"API": [["numpy.cos", "numpy.sin", "numpy.array", "numpy.dot", "numpy.array", "numpy.dot", "numpy.exp", "numpy.exp", "numpy.diag", "numpy.exp", "numpy.exp", "numpy.diag", "numpy.dot", "numpy.roll", "numpy.roll", "numpy.dot", "numpy.zeros", "numpy.zeros", "numpy.array", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "warnings.warn", "numpy.cos", "numpy.sin", "warnings.warn", "numpy.hstack", "numpy.dot", "numpy.dot", "numpy.ones", "numpy.arange", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.sin", "numpy.cos", "numpy.cos", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.cos"], [], ["numpy.cos", "numpy.sin", "numpy.exp", "numpy.exp", "numpy.exp", "numpy.exp", "numpy.array", "numpy.dot", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.exp", "numpy.exp", "numpy.exp", "numpy.exp", "numpy.array", "numpy.dot", "numpy.exp", "numpy.exp", "numpy.diag", "numpy.exp", "numpy.exp", "numpy.diag", "numpy.dot", "numpy.roll", "numpy.roll", "numpy.conj", "numpy.dot", "numpy.array", "numpy.array", "numpy.zeros", "numpy.zeros", "numpy.copy", "numpy.real", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "warnings.warn", "numpy.cos", "numpy.sin", "warnings.warn", "numpy.hstack", "numpy.dot", "numpy.dot", "numpy.array", "numpy.real", "numpy.ones", "numpy.arange"], []], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/akimbelsannit@first-python-notebook/Untitled.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Mike1014@Data-Bootcamp-Unit-1-Lesson-3-and-4/Drill Lesson 4.3.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Nemzy@video_generator/video_generator.ipynb": {"API": [[], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d_transpose", "tensorflow.matmul", "tensorflow.truncated_normal_initializer", "tensorflow.constant_initializer", "tensorflow.truncated_normal_initializer", "tensorflow.constant_initializer", "tensorflow.truncated_normal_initializer", "tensorflow.constant_initializer"], []], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rosswilliaminnes@neural-network-2/simple neural network.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gsynetos@hw1/Untitled.ipynb": {"API": [["numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty.fill", "numpy.empty", "numpy.empty.flatten", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty.flatten", "numpy.empty", "numpy.zeros", "numpy.diag", "numpy.tril", "numpy.triu", "numpy.meshgrid", "matplotlib.pyplot.contour", "matplotlib.pyplot.clabel", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.colorbar", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.yscale", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "matplotlib.pyplot.plot", "matplotlib.pyplot.title", "matplotlib.pyplot.yscale", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "numpy.diag", "numpy.linalg.inv", "numpy.empty", "numpy.arange", "numpy.arange", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.dot", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.dot", "numpy.linalg.norm", "numpy.linalg.norm"]], "module": ["matplotlib", "IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/LongerVision@PyTorch_Examples/00_HelloPyTorch.ipynb": {"API": [["torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.optim.SGD", "torchvision.transforms.ToTensor", "torchvision.transforms.ToTensor", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.MaxPool2d", "torch.nn.Linear", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.log_softmax", "torch.nn.functional.nll_loss", "torch.nn.functional.nll_loss.backward", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.no_grad", "torch.nn.functional.nll_loss.item", "torch.nn.functional.nll_loss"], []], "module": ["torch", "torchvision"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Prothro92@Crypto-Currency-Analysis/Analyze Cryptocurrency Market Git-checkpoint.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jpskycak@automation/queue_check.ipynb": {"API": [[], []], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jerryold@B10409014/chapter8.ipynb": {"API": [], "module": ["requests", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nazmulapu@nazsearch/weather-analysis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SSaishruthi@Python_practice/LinkedList_Sum.ipynb": {"API": [], "module": ["nose"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vishalsingh020997@Convolutional_Neural_Network-based_Image_Classifier/model_2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yetifrisstlama@DrGreenThumb/phCalibration/phCalibration.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Marktc1993@Accessible_Deep_Learning/Discounted_Cash_Flow_Analysis_Framework_Incorporating_Probabilistic_Modeling_Techniques.ipynb": {"API": [], "module": ["keras", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alexandrudaia@ApartmentsRecruiting/TSNE.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hotfuzzy@go/preprocessing.ipynb": {"API": [["random.sample"], [], [], ["re.match"]], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gcrowder@atus-analysis/ATUS-Analysis.ipynb": {"API": [["pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv.itertuples"]], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/arcrin@Dashboard/Python for data analysis 2nd/NumPy Basics.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "pymongo"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/asashiho@dockertext2/chap06/sample_notebook/CavityFlow_with_Navier-Stokes.ipynb": {"API": [["flask.Flask", "os.environ.get", "os.environ.get", "os.environ.get", "flask.Flask.route", "flask.render_template", "random.choice", "os.environ.get", "flask.Flask.run"], ["flask.Flask", "os.environ.get", "os.environ.get", "os.environ.get", "flask.Flask.route", "flask.render_template", "random.choice", "os.environ.get", "flask.Flask.run"], ["flask.Flask", "redis.Redis", "flask.Flask.route", "redis.Redis.incr", "flask.render_template", "random.choice", "os.environ.get", "flask.Flask.run"]], "module": ["redis", "numpy", "flask", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mattlong@dnd-spells-toolkit/Cleric Spells.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kspi@pulley/pulley.ipynb": {"API": [], "module": ["numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nullkatar@base/\u0422\u0440\u0435\u0442\u044c\u044f \u043b\u0430\u0431\u0430.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/HarshitNITT@geek/project.ipynb": {"API": [], "module": ["matplotlib", "textblob", "tweepy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/akaron@zero_velocity_curve/ZVC_example.ipynb": {"API": [["matplotlib.pyplot.style.use", "numpy.linspace", "numpy.linspace", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_axes", "numpy.linspace", "matplotlib.pyplot.Circle", "matplotlib.pyplot.Circle", "matplotlib.pyplot.figure.savefig", "numpy.meshgrid", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aintoha@Pyton/data/03-list.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lodurality@textnorm/notebooks/Untitled.ipynb": {"API": [["torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "numpy.random.seed", "random.seed", "torch.cuda.is_available", "torch.save", "torch.save", "pandas.concat", "torch.autograd.Variable", "pandas.concat", "torch.autograd.Variable", "torch.autograd.Variable", "time.time", "torch.optim.SGD", "torch.optim.SGD", "torch.nn.NLLLoss", "torch.autograd.Variable", "torch.autograd.Variable", "torch.zeros", "numpy.array", "numpy.random.choice", "numpy.array", "numpy.array", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplots", "matplotlib.ticker.MultipleLocator", "matplotlib.pyplot.plot", "math.floor", "time.time", "torch.nn.Embedding", "torch.nn.GRU", "torch.autograd.Variable", "torch.nn.Embedding", "torch.nn.GRU", "torch.nn.Linear", "torch.nn.LogSoftmax", "torch.autograd.Variable", "torch.nn.Embedding", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.GRU", "torch.nn.Linear", "torch.nn.functional.softmax", "torch.bmm", "torch.cat", "torch.nn.functional.log_softmax", "torch.autograd.Variable", "pandas.read_csv", "torch.LongTensor.cuda", "torch.zeros", "torch.LongTensor", "random.shuffle", "torch.zeros", "torch.LongTensor", "torch.autograd.Variable", "numpy.random.choice", "numpy.array.mean", "torch.zeros", "torch.LongTensor.cuda", "torch.nn.functional.relu", "torch.zeros", "torch.LongTensor.cuda", "torch.cat.unsqueeze", "torch.nn.functional.relu", "torch.zeros", "torch.LongTensor.cuda", "pandas.concat.fillna", "random.random", "torch.autograd.Variable", "numpy.ceil", "torch.LongTensor", "numpy.array.mean", "numpy.mean", "torch.cat", "torch.LongTensor", "torch.LongTensor", "numpy.random.random"], ["torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "numpy.random.seed", "random.seed", "torch.cuda.is_available", "torch.save", "torch.save", "pandas.concat", "torch.autograd.Variable", "pandas.concat", "torch.autograd.Variable", "torch.autograd.Variable", "time.time", "torch.optim.SGD", "torch.optim.SGD", "torch.nn.NLLLoss", "torch.autograd.Variable", "torch.autograd.Variable", "torch.zeros", "numpy.array", "numpy.random.choice", "numpy.array", "numpy.array", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplots", "matplotlib.ticker.MultipleLocator", "matplotlib.pyplot.plot", "math.floor", "time.time", "torch.nn.Embedding", "torch.nn.GRU", "torch.autograd.Variable", "torch.nn.Embedding", "torch.nn.GRU", "torch.nn.Linear", "torch.nn.LogSoftmax", "torch.autograd.Variable", "torch.nn.Embedding", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.GRU", "torch.nn.Linear", "torch.nn.functional.softmax", "torch.bmm", "torch.cat", "torch.nn.functional.log_softmax", "torch.autograd.Variable", "pandas.read_csv", "torch.LongTensor.cuda", "torch.zeros", "torch.LongTensor", "random.shuffle", "torch.zeros", "torch.LongTensor", "torch.autograd.Variable", "numpy.random.choice", "numpy.array.mean", "torch.zeros", "torch.LongTensor.cuda", "torch.nn.functional.relu", "torch.zeros", "torch.LongTensor.cuda", "torch.cat.unsqueeze", "torch.nn.functional.relu", "torch.zeros", "torch.LongTensor.cuda", "pandas.concat.fillna", "random.random", "torch.autograd.Variable", "numpy.ceil", "torch.LongTensor", "numpy.array.mean", "numpy.mean", "torch.cat", "torch.LongTensor", "torch.LongTensor", "numpy.random.random"], ["torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "numpy.random.seed", "random.seed", "torch.cuda.is_available", "torch.save", "torch.save", "pandas.concat", "torch.autograd.Variable", "pandas.concat", "torch.autograd.Variable", "torch.autograd.Variable", "time.time", "torch.optim.SGD", "torch.optim.SGD", "torch.nn.NLLLoss", "torch.autograd.Variable", "torch.autograd.Variable", "torch.zeros", "numpy.array", "numpy.random.choice", "numpy.array", "numpy.array", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplots", "matplotlib.ticker.MultipleLocator", "matplotlib.pyplot.plot", "math.floor", "time.time", "torch.nn.Embedding", "torch.nn.GRU", "torch.autograd.Variable", "torch.nn.Embedding", "torch.nn.GRU", "torch.nn.Linear", "torch.nn.LogSoftmax", "torch.autograd.Variable", "torch.nn.Embedding", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.GRU", "torch.nn.Linear", "torch.nn.functional.softmax", "torch.bmm", "torch.cat", "torch.nn.functional.log_softmax", "torch.autograd.Variable", "pandas.read_csv", "torch.LongTensor.cuda", "torch.zeros", "torch.LongTensor", "random.shuffle", "torch.zeros", "torch.LongTensor", "torch.autograd.Variable", "numpy.random.choice", "numpy.array.mean", "torch.zeros", "torch.LongTensor.cuda", "torch.nn.functional.relu", "torch.zeros", "torch.LongTensor.cuda", "torch.cat.unsqueeze", "torch.nn.functional.relu", "torch.zeros", "torch.LongTensor.cuda", "pandas.concat.fillna", "random.random", "torch.autograd.Variable", "numpy.ceil", "torch.LongTensor", "numpy.array.mean", "numpy.mean", "torch.cat", "torch.LongTensor", "torch.LongTensor", "numpy.random.random"], ["torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "numpy.random.seed", "random.seed", "torch.cuda.is_available", "torch.save", "torch.save", "pandas.concat", "torch.autograd.Variable", "pandas.concat", "torch.autograd.Variable", "torch.autograd.Variable", "time.time", "torch.optim.SGD", "torch.optim.SGD", "torch.nn.NLLLoss", "torch.autograd.Variable", "torch.autograd.Variable", "torch.zeros", "numpy.array", "numpy.random.choice", "numpy.array", "numpy.array", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplots", "matplotlib.ticker.MultipleLocator", "matplotlib.pyplot.plot", "math.floor", "time.time", "torch.nn.Embedding", "torch.nn.GRU", "torch.autograd.Variable", "torch.nn.Embedding", "torch.nn.GRU", "torch.nn.Linear", "torch.nn.LogSoftmax", "torch.autograd.Variable", "torch.nn.Embedding", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.GRU", "torch.nn.Linear", "torch.nn.functional.softmax", "torch.bmm", "torch.cat", "torch.nn.functional.log_softmax", "torch.autograd.Variable", "pandas.read_csv", "torch.LongTensor.cuda", "torch.zeros", "torch.LongTensor", "random.shuffle", "torch.zeros", "torch.LongTensor", "torch.autograd.Variable", "numpy.random.choice", "numpy.array.mean", "torch.zeros", "torch.LongTensor.cuda", "torch.nn.functional.relu", "torch.zeros", "torch.LongTensor.cuda", "torch.cat.unsqueeze", "torch.nn.functional.relu", "torch.zeros", "torch.LongTensor.cuda", "pandas.concat.fillna", "random.random", "torch.autograd.Variable", "numpy.ceil", "torch.LongTensor", "numpy.array.mean", "numpy.mean", "torch.cat", "torch.LongTensor", "torch.LongTensor", "numpy.random.random"], ["torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "numpy.random.seed", "random.seed", "torch.cuda.is_available", "torch.save", "torch.save", "pandas.concat", "torch.autograd.Variable", "pandas.concat", "torch.autograd.Variable", "torch.autograd.Variable", "time.time", "torch.optim.SGD", "torch.optim.SGD", "torch.nn.NLLLoss", "torch.autograd.Variable", "torch.autograd.Variable", "torch.zeros", "numpy.array", "numpy.random.choice", "numpy.array", "numpy.array", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplots", "matplotlib.ticker.MultipleLocator", "matplotlib.pyplot.plot", "math.floor", "time.time", "torch.nn.Embedding", "torch.nn.GRU", "torch.autograd.Variable", "torch.nn.Embedding", "torch.nn.GRU", "torch.nn.Linear", "torch.nn.LogSoftmax", "torch.autograd.Variable", "torch.nn.Embedding", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.GRU", "torch.nn.Linear", "torch.nn.functional.softmax", "torch.bmm", "torch.cat", "torch.nn.functional.log_softmax", "torch.autograd.Variable", "pandas.read_csv", "torch.LongTensor.cuda", "torch.zeros", "torch.LongTensor", "random.shuffle", "torch.zeros", "torch.LongTensor", "torch.autograd.Variable", "numpy.random.choice", "numpy.array.mean", "torch.zeros", "torch.LongTensor.cuda", "torch.nn.functional.relu", "torch.zeros", "torch.LongTensor.cuda", "torch.cat.unsqueeze", "torch.nn.functional.relu", "torch.zeros", "torch.LongTensor.cuda", "pandas.concat.fillna", "random.random", "torch.autograd.Variable", "numpy.ceil", "torch.LongTensor", "numpy.array.mean", "numpy.mean", "torch.cat", "torch.LongTensor", "torch.LongTensor", "numpy.random.random"], ["torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "numpy.random.seed", "random.seed", "torch.cuda.is_available", "torch.save", "torch.save", "pandas.concat", "torch.autograd.Variable", "pandas.concat", "torch.autograd.Variable", "torch.autograd.Variable", "time.time", "torch.optim.SGD", "torch.optim.SGD", "torch.nn.NLLLoss", "torch.autograd.Variable", "torch.autograd.Variable", "torch.zeros", "numpy.array", "numpy.random.choice", "numpy.array", "numpy.array", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplots", "matplotlib.ticker.MultipleLocator", "matplotlib.pyplot.plot", "math.floor", "time.time", "torch.nn.Embedding", "torch.nn.GRU", "torch.autograd.Variable", "torch.nn.Embedding", "torch.nn.GRU", "torch.nn.Linear", "torch.nn.LogSoftmax", "torch.autograd.Variable", "torch.nn.Embedding", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.GRU", "torch.nn.Linear", "torch.nn.functional.softmax", "torch.bmm", "torch.cat", "torch.nn.functional.log_softmax", "torch.autograd.Variable", "pandas.read_csv", "torch.LongTensor.cuda", "torch.zeros", "torch.LongTensor", "random.shuffle", "torch.zeros", "torch.LongTensor", "torch.autograd.Variable", "numpy.random.choice", "numpy.array.mean", "torch.zeros", "torch.LongTensor.cuda", "torch.nn.functional.relu", "torch.zeros", "torch.LongTensor.cuda", "torch.cat.unsqueeze", "torch.nn.functional.relu", "torch.zeros", "torch.LongTensor.cuda", "pandas.concat.fillna", "random.random", "torch.autograd.Variable", "numpy.ceil", "torch.LongTensor", "numpy.array.mean", "numpy.mean", "torch.cat", "torch.LongTensor", "torch.LongTensor", "numpy.random.random"], ["torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "numpy.random.seed", "random.seed", "torch.cuda.is_available", "torch.save", "torch.save", "pandas.concat", "torch.autograd.Variable", "pandas.concat", "torch.autograd.Variable", "torch.autograd.Variable", "time.time", "torch.optim.SGD", "torch.optim.SGD", "torch.nn.NLLLoss", "torch.autograd.Variable", "torch.autograd.Variable", "torch.zeros", "numpy.array", "numpy.random.choice", "numpy.array", "numpy.array", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplots", "matplotlib.ticker.MultipleLocator", "matplotlib.pyplot.plot", "math.floor", "time.time", "torch.nn.Embedding", "torch.nn.GRU", "torch.autograd.Variable", "torch.nn.Embedding", "torch.nn.GRU", "torch.nn.Linear", "torch.nn.LogSoftmax", "torch.autograd.Variable", "torch.nn.Embedding", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.GRU", "torch.nn.Linear", "torch.nn.functional.softmax", "torch.bmm", "torch.cat", "torch.nn.functional.log_softmax", "torch.autograd.Variable", "pandas.read_csv", "torch.LongTensor.cuda", "torch.zeros", "torch.LongTensor", "random.shuffle", "torch.zeros", "torch.LongTensor", "torch.autograd.Variable", "numpy.random.choice", "numpy.array.mean", "torch.zeros", "torch.LongTensor.cuda", "torch.nn.functional.relu", "torch.zeros", "torch.LongTensor.cuda", "torch.cat.unsqueeze", "torch.nn.functional.relu", "torch.zeros", "torch.LongTensor.cuda", "random.random", "torch.autograd.Variable", "numpy.ceil", "torch.LongTensor", "numpy.array.mean", "numpy.mean", "torch.cat", "torch.LongTensor", "torch.LongTensor"]], "module": ["torch", "numpy", "matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cksajil@BioSensor/Trial_1/Image_analysis.ipynb": {"API": [["matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "pandas.read_excel", "pandas.ExcelWriter", "pandas.ExcelWriter.save", "matplotlib.pyplot.subplots", "matplotlib.pyplot.bar", "matplotlib.pyplot.xticks", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "matplotlib.pyplot.subplots", "matplotlib.pyplot.bar", "matplotlib.pyplot.xticks", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "scipy.misc.imread", "numpy.mean", "scipy.misc.imread.flatten"], ["matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "numpy.arange.index", "numpy.arange.index", "pandas.read_csv", "matplotlib.pyplot.subplots", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "numpy.arange"], [], [], [], ["matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "numpy.arange.index", "numpy.arange.index", "numpy.arange", "pandas.read_csv", "matplotlib.pyplot.subplots", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.subplots", "numpy.mean", "matplotlib.pyplot.scatter", "matplotlib.pyplot.plot", "matplotlib.pyplot.xticks", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "numpy.arange"], [], ["matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "matplotlib.pyplot.rc", "numpy.arange.index", "numpy.arange.index", "numpy.arange", "pandas.read_csv", "matplotlib.pyplot.subplots", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.grid", "matplotlib.pyplot.subplots", "numpy.mean", "matplotlib.pyplot.scatter", "matplotlib.pyplot.plot", "matplotlib.pyplot.xticks", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "numpy.arange"], []], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AndreaOrtizM@ProyectoModulo2_OrtizA_AcostaE_ChiquitoE/ProyectoModulo2_OrtizA_AcostaE_ChiquitoE.ipynb": {"API": [], "module": ["matplotlib", "pandas_datareader", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AkiNikolaidis@Simulations/Jovo_Bootstrap_Simulations.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/spaceF@titanic/Untitled.ipynb": {"API": [], "module": ["scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DavidMcDonald1993@em/ExplicitWaitTest.ipynb": {"API": [[], [], ["numpy.array"], []], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/MachineLearningAcademy@IntroNeuralNetworks/neuralnetwork.ipynb": {"API": [["numpy.array", "numpy.array", "numpy.square", "numpy.array", "numpy.array", "numpy.random.random", "numpy.dot", "numpy.dot", "numpy.zeros", "numpy.multiply", "numpy.mean"]], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/perlgirl2002@Timeseries/Timeseries.ipynb": {"API": [], "module": ["matplotlib", "pandas", "statsmodels", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/aditya-ranade@Tutorial/Tutorial.ipynb": {"API": [], "module": ["matplotlib", "pandas", "keras", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yzy1995@Life-Universe-and-Everything/visualization.ipynb": {"API": [["torch.nn.Conv2d", "torch.nn.MaxPool2d", "torch.nn.Conv2d", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu"], ["torchvision.transforms.Compose", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "torch.nn.CrossEntropyLoss", "torch.optim.SGD", "numpy.transpose", "torch.autograd.Variable", "torch.max", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torch.autograd.Variable", "torch.autograd.Variable"]], "module": ["torch", "numpy", "matplotlib", "torchvision"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CNPetridis@Jupyter/Test-NO.ipynb": {"API": ["plotly.offline.init_notebook_mode", "ipywidgets.interact", "numpy.arange", "plotly.offline.iplot", "ipywidgets.Dropdown"], "module": ["matplotlib", "ipywidgets", "scipy", "numpy", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/namanwahi@GoogleHashCode/FL_1.ipynb": {"API": [["numpy.genfromtxt", "numpy.abs", "numpy.abs"], ["numpy.genfromtxt", "numpy.genfromtxt", "numpy.arange", "pandas.DataFrame", "numpy.abs", "numpy.abs"]], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yang-fighter@Calculus/RiemannSum_publish.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "ipywidgets"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/HuitingHuang@data_analysis/Kaggle_competition_prediction_of_Titanic_survivors.ipynb": {"API": [], "module": ["wordcloud", "matplotlib", "scipy", "pandas", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/meidell@Data-Analysis/Data_Analyst_ND_Project0.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ivynsanpedro@dog-project/dog_app.ipynb": {"API": [["keras.applications.vgg16.VGG16.predict", "keras.applications.vgg19.VGG19.predict", "keras.applications.resnet50.ResNet50.predict", "keras.applications.xception.Xception.predict", "keras.applications.inception_v3.InceptionV3.predict", "keras.applications.inception_v3.preprocess_input", "keras.applications.inception_v3.preprocess_input", "keras.applications.inception_v3.preprocess_input", "keras.applications.inception_v3.preprocess_input", "keras.applications.inception_v3.preprocess_input", "keras.applications.vgg16.VGG16", "keras.applications.vgg19.VGG19", "keras.applications.resnet50.ResNet50", "keras.applications.xception.Xception", "keras.applications.inception_v3.InceptionV3"]], "module": ["keras"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dylanwijman@data-science/Week1_slides.ipynb": {"API": [[]], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ajgeers@3dracta/data_analysis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/andrew-lundgren@ComputationalPhysics/IntroODEs/intro_to_ODEs2.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gboye@clips/Transpose Latex Table.ipynb": {"API": [], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jirmola@LearnDL/ConvNets/convnet_with_np.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gwjbrodie@Aneira/Aneira.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CrowdTruth@Salience-In-News-And-Tweets/Crowdsourcing novelty features for news and tweets.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Mofal91@PandasHW/Pymoli.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zjjxsjh@notebooks/kPCA demo.ipynb": {"API": [], "module": ["mxnet", "matplotlib", "scipy", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wollip@kalmanFilter/linearChange.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/regstrtn@digit-recognition-mnist/test1.ipynb": {"API": [["numpy.random.seed", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.dot", "numpy.dot", "numpy.zeros", "numpy.zeros", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.argmax", "numpy.argmax", "numpy.dot", "numpy.dot", "numpy.exp"], ["numpy.random.seed", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.dot", "numpy.dot", "numpy.zeros", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.argmax", "numpy.dot", "numpy.dot", "numpy.exp"], ["network.Network", "network.Network.SGD", "network.Network", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "network.Network.test", "numpy.save", "numpy.save"], ["gzip.open", "cPickle.load", "gzip.open.close", "numpy.zeros", "numpy.reshape", "numpy.reshape", "numpy.reshape"], ["gzip.open", "cPickle.load", "gzip.open.close", "numpy.zeros", "numpy.reshape", "numpy.reshape", "numpy.reshape"], ["numpy.random.seed", "numpy.fromfile", "numpy.fromfile", "numpy.fromfile", "numpy.fromfile", "numpy.asarray", "numpy.asarray", "numpy.random.permutation", "numpy.random.permutation", "numpy.zeros", "train.train", "train.test", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "numpy.reshape", "numpy.reshape", "numpy.fromfile.reshape", "numpy.fromfile.reshape", "numpy.fromfile.reshape", "numpy.fromfile.reshape"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DillonWard@Jupyter-Worksheet/Fishers-Iris-Worksheet.ipynb": {"API": [["matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.scatter", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "seaborn.set", "seaborn.load_dataset", "seaborn.pairplot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "csv.reader", "matplotlib.patches.Patch", "numpy.linspace", "numpy.polyfit", "matplotlib.pyplot.scatter", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "scipy.stats.linregress", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray"]], "module": ["matplotlib", "numpy", "seaborn", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Mikhailry@Udacity/US_Bikeshare_analysis/Bike_Share_Analysis.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Souvic108@startpadML/NNwithTensorflow.ipynb": {"API": [[], ["random.seed", "numpy.random.seed", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "numpy.ndarray", "numpy.ndarray", "collections.deque", "numpy.zeros", "numpy.zeros", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.layers.core.Dense", "keras.layers.core.Activation", "keras.models.Sequential.train_on_batch", "collections.deque.append", "collections.deque.append", "itertools.compress", "collections.Counter", "numpy.arange"], [], ["numpy.random.randint", "numpy.random.randint", "numpy.random.randn", "numpy.random.randn", "numpy.zeros", "numpy.zeros", "numpy.exp"]], "module": ["keras", "IPython", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dsarona@ds_class/homework/06_yelp_votes_homework.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/EricMadigan44@Pandas-HW/Pandas_HW.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/devender@us-shootings/fatalities.ipynb": {"API": ["pandas.read_csv", "pandas.concat", "pandas.read_csv", "pandas.concat.groupby"], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Yishi1215@EDA_racial_discrimination/sliderule_dsi_inferential_statistics_exercise_2.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "seaborn", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/edooley7@comparison_group_viz/create_data_for_viz.ipynb": {"API": [["pandas.concat", "pandas.concat.to_csv", "random.shuffle", "pandas.DataFrame", "random.randint", "random.random", "random.randint", "random.randint", "random.randrange"]], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/EdinburghCityScope@cec-litter-bins/notebooks/cec-litter-bins.ipynb": {"API": [], "module": ["matplotlib", "folium", "numpy", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cathyshiyuan@Data-Mining/Untitled.ipynb": {"API": [["sys.setdefaultencoding", "pandas.read_csv", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.colorbar", "matplotlib.pyplot.xticks", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.show", "numpy.arange", "numpy.arange"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/afko@python-project/thanksgiving.ipynb": {"API": [["pandas.read_csv", "pandas.read_csv.head", "pandas.read_csv.value_counts", "pandas.read_csv.isnull", "pandas.read_csv.isnull", "pandas.read_csv.isnull", "pandas.read_csv.apply", "pandas.read_csv.describe", "pandas.read_csv.apply", "pandas.read_csv.describe", "pandas.read_csv.pivot_table", "pandas.read_csv.pivot_table", "pandas.isnull", "pandas.isnull"], ["csv.reader", "csv.reader", "datetime.datetime"]], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/khulan8824@tunnelChanger/tunnelPlot.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kcho@survey_monkey/DICC_SM_test.py.ipynb": {"API": [[], []], "module": ["openpyxl", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hamelsmu@Useful_Notebooks/Regex_with_Pandas_and_Named_Groups.ipynb": {"API": ["pandas.DataFrame"], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pollardJ@project_euler/2017-11-16-p1-p2-p3.ipynb": {"API": [["numpy.sqrt"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/F-ridge@eccs_git_test/jupyter_test.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/TejaAlaghari@final_svm/svm.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fairfield-university-is505-fall2017@health-stats-part-2-VermouthLiang/HealthStatsPart1.ipynb": {"API": ["IPython.display.display", "IPython.display.HTML"], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/gilesrich@dmu-smart-meter-analysis/dmu_gar_02.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sdmccaul@da3/osm_pvd.ipynb": {"API": [[], "pandas.DataFrame", "pandas.date_range", "pandas.DataFrame", "matplotlib.pyplot.show", "pandas.DataFrame", "pandas.date_range", "pandas.DataFrame", "pandas.DataFrame.groupby", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "pandas.DataFrame", "pandas.date_range", "pandas.DataFrame", "pandas.DataFrame.groupby", "ipywidgets.interactive", "json.load", "json.load", "json.load", "matplotlib.pyplot.show", "ipywidgets.IntSlider"], "module": ["matplotlib", "ipywidgets", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Darellblg@VoodooMarkets/BlogSpyDownGaps.ipynb": {"API": [], "module": ["matplotlib", "pandas", "scipy", "quandl", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/amxmongoose@Pymoli/Heroes of Pymoli Solved.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/izmiran@test/pyProject/Surf_georadar.ipynb": {"API": [["numpy.loadtxt", "numpy.shape", "numpy.arange", "numpy.arange", "numpy.shape", "matplotlib.pyplot.ylim", "matplotlib.pyplot.contourf", "matplotlib.pyplot.colorbar", "matplotlib.pyplot.show", "numpy.zeros"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rachelmteigen@PyBank/Pybank2 (1).ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pikkaay@Plotly/plotly.ipynb": {"API": [], "module": ["numpy", "ipywidgets", "plotly", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NicholasDeLateur@Import-To-Pandas/CreatePDfromCSV.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chapman-phys227-2016s@hw-7-C0deMonkee/hw7.ipynb": {"API": [[], ["numpy.zeros", "numpy.add", "numpy.append", "numpy.append"], [], ["numpy.sin", "numpy.abs", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.axis", "matplotlib.pyplot.show"]], "module": ["matplotlib", "numpy", "sympy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/s60912frank@ML_HW3/Team32_HW2.ipynb": {"API": ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.elu", "tensorflow.nn.elu", "tensorflow.nn.elu", "tensorflow.nn.elu", "tensorflow.nn.elu", "tensorflow.add", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.Saver", "tensorflow.reset_default_graph", "tensorflow.set_random_seed", "numpy.random.seed", "tensorflow.get_variable", "numpy.empty", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "numpy.zeros", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.Session", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "tensorflow.train.Saver.save", "tensorflow.contrib.layers.variance_scaling_initializer", "tensorflow.global_variables_initializer", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.argmax", "tensorflow.argmax", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum"], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jagrutipatel13@PythonAssignment11.1/Assignment11.1.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ParkGong@til/\ubaac\ud2b8\ub9ac\ud640 \uc2dc\ubbac\ub808\uc774\uc158.ipynb": {"API": [[], [], ["functools.reduce", "functools.reduce", "math.sqrt"], [], [], [], [], ["openpyxl.load_workbook", "functools.reduce", "math.sqrt", "functools.reduce"], ["functools.reduce", "math.sqrt", "functools.reduce"], [], ["random.sample", "time.sleep"], ["openpyxl.load_workbook", "functools.reduce", "functools.reduce"], ["time.sleep", "time.sleep"]], "module": ["openpyxl"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/keshino-hana@linear-algebra/class.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jjgu1030@jjgu1030-BDAOrg/Assignment02/Solutions02.ipynb": {"API": [["numpy.trapz", "matplotlib.pyplot.plot", "numpy.sqrt"], ["matplotlib.pyplot.ion", "numpy.linspace", "numpy.array", "numpy.array"], [], ["matplotlib.pyplot.ion", "scipy.stats.norm.rvs", "scipy.stats.norm", "scipy.stats.norm", "numpy.linspace", "scipy.stats.norm.pdf", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "numpy.sqrt", "numpy.mean", "numpy.sqrt", "numpy.exp", "scipy.stats.norm.pdf", "numpy.testing.assert_allclose", "numpy.testing.assert_allclose", "numpy.exp", "numpy.mean", "numpy.trapz", "numpy.var", "numpy.mean"]], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/DiploDatos@AnalisisyVisualizacion/03_regresion_lineal.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rctn@ComputationalWorkshops/tensorflow/TF Logistic Regression Tutorial.ipynb": {"API": [], "module": ["numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/konradbjk@WorkshopEIS/notebook1.ipynb": {"API": [["pymongo.MongoClient", "pandas.DataFrame"]], "module": ["matplotlib", "numpy", "pymongo", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Jennifermariec@csci3022/notebooks/NumpyPandasTutorial.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Eldridg@Tensorflow/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tylerjereddy@pycon-2016/computational_geometry_tutorial.ipynb": {"API": [["numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.linalg.det", "numpy.linalg.det", "math.sqrt", "numpy.linalg.det", "numpy.linalg.det", "numpy.linalg.det", "numpy.linalg.det", "numpy.linalg.det", "numpy.linalg.det"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vyaslkv@Keras-CNN-6/keras CNN python=3.5.ipynb": {"API": [], "module": ["keras"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/starrtnow@generator_examples/GAN.ipynb": {"API": [], "module": ["torch", "torchvision"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/joshong@cifar10attempt/CIFAR-10 with CNNs and Keras - Initial Results Now with F1-score!.ipynb": {"API": [], "module": ["matplotlib", "numpy", "keras"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/arneboe@notebooks/dmp/RCIS2016_paper.ipynb": {"API": [["matplotlib.pyplot.plot", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.savefig"], ["matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.savefig", "numpy.exp", "math.log"], ["cs.CS", "matplotlib.pyplot.show", "numpy.linspace", "numpy.exp", "numpy.zeros_like", "numpy.ndarray", "numpy.exp", "numpy.sum", "numpy.linspace", "numpy.linspace", "matplotlib.pyplot.plot", "numpy.exp", "numpy.random.rand", "math.log", "numpy.dot", "numpy.exp", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "numpy.exp.append"], ["rbf.Rbf", "numpy.gradient", "numpy.gradient", "numpy.ndarray", "numpy.diag", "numpy.linalg.inv", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot"], ["fop.Fop", "rbf.Rbf", "fop.Fop", "fop.Fop.evalArray", "numpy.ndarray", "fop.Fop", "numpy.diag", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.linalg.inv", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot"], ["numpy.linspace", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "numpy.linalg.solve", "numpy.ndarray", "numpy.ndarray", "numpy.ndarray", "numpy.ndarray"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/m-hintz-42@rnn_aind/RNN_project.ipynb": {"API": [["numpy.size", "numpy.asarray", "numpy.asarray", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.optimizers.RMSprop", "keras.models.Sequential.compile", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.optimizers.RMSprop", "keras.models.Sequential.compile", "numpy.shape", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.LSTM", "keras.layers.Dense"]], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/shivathudi@shivathudi.github.io/flights-chord/transform.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/smani6@DSAndAlgorthims/Untitled.ipynb": {"API": [[], [], [], [], [], [], [], [], [], [], []], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sherlockhoatszx@TimeSeriesPredctionUsingDeeplearning/CStimeSeries_TimeDistributed-step1shift24_LSTM-1115.ipynb": {"API": [], "module": ["matplotlib", "scipy", "keras", "pandas", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Vishu26@Capsule-Networks/capsNet.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yunshengli@homework2/python-homework.ipynb": {"API": ["pandas.read_csv", "numpy.unique", "pandas.read_csv.duplicated", "pandas.read_csv.drop_duplicates", "pandas.read_csv.drop_duplicates", "pandas.DataFrame", "pandas.DataFrame", "pandas.merge", "pandas.DataFrame"], "module": ["numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jbsolis@__-Hour-Analysis-Video-Game-Sales/Video Game Analysis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chomnoue@Live-Camera-App/build_model.ipynb": {"API": [["matplotlib.pyplot.rcdefaults", "numpy.array", "numpy.array", "matplotlib.pyplot.text", "matplotlib.pyplot.subplots", "matplotlib.collections.PatchCollection", "matplotlib.collections.PatchCollection.set_array", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.axis", "matplotlib.pyplot.axis", "matplotlib.pyplot.show", "numpy.array", "numpy.array", "numpy.array", "matplotlib.patches.Rectangle", "matplotlib.lines.Line2D", "matplotlib.lines.Line2D", "matplotlib.lines.Line2D", "matplotlib.lines.Line2D", "numpy.array", "os.path.join", "matplotlib.patches.Rectangle", "numpy.array", "numpy.array", "numpy.cumsum", "numpy.zeros", "numpy.cumsum", "numpy.zeros"]], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mat-esp-2015@capstone-grupo-do-douglas/capstone.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/learn-co-curriculum@multivariable-functions/index.ipynb": {"API": [[], ["plotly.offline.init_notebook_mode", "plotly.offline.iplot"], ["numpy.linspace", "numpy.linspace", "numpy.meshgrid", "matplotlib.pyplot.axes", "matplotlib.pyplot.axes.contour3D", "matplotlib.pyplot.axes.set_xlabel", "matplotlib.pyplot.axes.set_ylabel", "matplotlib.pyplot.axes.set_zlabel", "matplotlib.pyplot.axes.plot_surface", "matplotlib.pyplot.figure", "matplotlib.pyplot.show", "plotly.offline.init_notebook_mode", "plotly.graph_objs.Scatter", "plotly.graph_objs.Layout", "plotly.offline.iplot"]], "module": ["matplotlib", "IPython", "numpy", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ivotron@varsys16/exp/base-vs-targets/visualize.ipynb": {"API": [[]], "module": ["matplotlib", "IPython", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/narekpy@tumo/numpy-tutorial-solved.ipynb": {"API": [[], []], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mc-carthy@pyDSML/numPy/numPyOperations.ipynb": {"API": [], "module": ["matplotlib", "numpy", "sqlalchemy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kitchenknif@1d-fdfd/Task1_PEC-PMC_Eigenmodes.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CarlosATiV@PROYECTO_SM_1/ProyectoModulo1_EscotoU_TinajeroC_SayavedraJ.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/danielzuot@L50-lab4/Lab 4.ipynb": {"API": [["useful.np.histogram", "useful.np.cumsum", "useful.plt.plot", "useful.plt.ylabel", "useful.plt.xlabel", "useful.np.arange", "useful.plt.errorbar", "useful.plt.show", "useful.plt.plot", "useful.plt.show", "useful.np.histogram", "useful.np.cumsum", "useful.plt.plot", "useful.plt.ylabel", "useful.plt.xlabel", "useful.np.arange", "useful.plt.errorbar", "useful.plt.show", "useful.np.median", "useful.np.median", "useful.np.median", "useful.ceil", "useful.floor", "useful.ceil", "useful.floor", "useful.findall", "useful.findall", "useful.findall", "useful.findall"], ["paramiko.SSHClient", "paramiko.SSHClient.set_missing_host_key_policy", "paramiko.SSHClient.connect", "subprocess.Popen", "paramiko.AutoAddPolicy", "paramiko.SSHClient.exec_command"]], "module": ["matplotlib", "numpy", "paramiko"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sharonsu94@numpy-pandas/Heroes of Pymoli.ipynb": {"API": ["os.path.join", "pandas.read_json", "pandas.read_json.nunique", "pandas.DataFrame", "pandas.read_json.nunique", "pandas.read_json.sum", "pandas.DataFrame", "pandas.DataFrame.map", "pandas.DataFrame.map", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame.set_index", "pandas.DataFrame.map", "pandas.DataFrame.map", "pandas.DataFrame.map", "pandas.cut", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "pandas.DataFrame", "pandas.DataFrame.astype", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "pandas.DataFrame", "pandas.DataFrame.astype", "pandas.DataFrame.map", "pandas.DataFrame.map", "pandas.DataFrame.map", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby", "pandas.read_json.groupby"], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dacarlin@bagel-thermostability/feature_generation.ipynb": {"API": [["flask.Flask", "flask.Flask.template_filter", "flask.Flask.route", "pandas.read_csv", "flask.render_template", "flask.Flask.run", "pandas.read_csv.iterrows"]], "module": ["numpy", "flask", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/caiolopes@MC959/NOT_XOR_studies.ipynb": {"API": [], "module": ["sympy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/msoares@treino/Cruzeiros.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/polizzz@Pythonn-3/Repository/0312.ipynb": {"API": [], "module": ["requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pausanchezv@Artificial-Intelligence/Problema_PDM_Cartes/qLearning_Cartes_Manera_2.ipynb": {"API": [], "module": ["matplotlib", "networkx"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/danon1205@Facebook_data/Statistics.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv.dropna", "pandas.read_csv.max", "pandas.read_csv.min", "pandas.read_csv.mean", "pandas.read_csv.mode", "pandas.read_csv.median"], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pysprings@data-science/ipython-intro.ipynb": {"API": [], "module": ["seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/honestsoul@Popularity-if-Pandas-in-Data-Science/StackOverFlow.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/skjena@sequenceAnalysis-cancerTherapy/MutationAnalysis.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "seaborn", "dask"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lalonica@PhD/vehicles/VehiclesPortionDataSet.ipynb": {"API": [[], []], "module": ["matplotlib", "scipy", "pandas", "numpy", "networkx"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/treilly94@deeplearning-scratch/tutorial/01_intro.ipynb": {"API": [], "module": ["IPython", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Hopenglish-Miners@data-exploration/jupyter-analysis/data-exploration.ipynb": {"API": [[]], "module": ["wordcloud", "matplotlib", "pandas", "numpy", "seaborn", "plotly"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/omarcresp@DataScience/Pokemon/pokemon-exploracion.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AaronCHH@B_MATLAB/MATLAB Guide to Fibonacci Numbers/MG2FN/Ch06_Fibonacci_Numbers.ipynb": {"API": [["nbformat.v4.new_notebook", "nbformat.write"]], "module": ["nbformat"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/StillSad@first_neural_network/Your_first_neural_network.ipynb": {"API": [["pandas.read_csv", "pandas.concat.head", "pandas.concat.plot", "pandas.concat.drop", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "unittest.TestLoader.loadTestsFromModule", "unittest.TextTestRunner.run", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.ylim", "matplotlib.pyplot.subplots", "pandas.to_datetime", "pandas.get_dummies", "pandas.concat", "numpy.mean", "numpy.random.choice", "sys.stdout.write", "sys.stdout.flush", "numpy.random.normal", "numpy.random.normal", "numpy.zeros", "numpy.zeros", "numpy.dot", "numpy.dot", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "unittest.TestLoader", "unittest.TextTestRunner", "numpy.arange", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.all", "numpy.allclose", "numpy.allclose", "numpy.allclose", "numpy.array", "numpy.array", "numpy.exp", "numpy.exp"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lassebenni@lularu/notebooks/airbnb_extracting_grand_means.ipynb": {"API": [], "module": ["matplotlib", "pandas", "numpy", "plotly", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sndao@learningML/courseraML/p1-simple_linear_regression.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hoangvh1@HW5_Pyber/Untitled.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv", "pandas.merge", "pandas.merge.head", "pandas.read_csv.groupby", "pandas.read_csv.drop_duplicates", "pandas.DataFrame", "pandas.to_numeric", "pandas.DataFrame", "pandas.DataFrame.reset_index", "pandas.merge", "pandas.merge.head", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.suptitle", "matplotlib.pyplot.figure.text", "matplotlib.pyplot.figure.text", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "matplotlib.pyplot.figure.clear", "pandas.merge.sum", "pandas.DataFrame", "pandas.DataFrame.reset_index", "matplotlib.pyplot.figure.clear", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "pandas.DataFrame.plot", "matplotlib.pyplot.suptitle", "matplotlib.pyplot.show", "pandas.merge.sum", "pandas.DataFrame", "pandas.DataFrame.reset_index", "matplotlib.pyplot.figure.clear", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "pandas.DataFrame.plot", "matplotlib.pyplot.suptitle", "matplotlib.pyplot.show", "pandas.merge.sum", "pandas.DataFrame", "pandas.DataFrame.reset_index", "matplotlib.pyplot.figure.clear", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "pandas.DataFrame.plot", "matplotlib.pyplot.suptitle", "matplotlib.pyplot.show", "pandas.merge.apply", "pandas.merge.groupby", "pandas.merge.groupby", "pandas.merge.groupby", "pandas.merge.groupby", "pandas.merge.groupby", "pandas.merge.groupby"], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jmxpearson@DIBS_materials/python/1. Introduction to Python and IPython.ipynb": {"API": [["os.path.join", "os.listdir", "pandas.read_csv.groupby", "matplotlib.pyplot.figure.gca", "matplotlib.pyplot.legend", "pandas.concat", "os.path.join", "pandas.read_csv", "matplotlib.pyplot.figure", "pandas.read_csv.groupby"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fabiolamariana@Python/np1_eb.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sophiaray@soph-hub-user/MNIST Demo.ipynb": {"API": [], "module": ["keras", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/necludov@two-swords/post.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kglowinski@decorators-my-decorators/decorators_enhanced.ipynb": {"API": [], "module": ["IPython", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mortbert@first-python-notebook/first-python-notebook2/module 3 cali dollars.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy", "ipywidgets"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/matecomp@ToyExamples/Toy Example (GAN's) - 1D gaussian distribution aproximation.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mwolfram@CarND-TensorFlow-LeNet-mwolfram/LeNet-Lab.ipynb": {"API": [["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.nn.max_pool", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.reshape", "tensorflow.pad", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.contrib.layers.flatten", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reshape", "tensorflow.pad", "tensorflow.contrib.layers.flatten", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.get_default_session", "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.truncated_normal", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.truncated_normal", "tensorflow.zeros", "tensorflow.truncated_normal", "tensorflow.zeros", "tensorflow.truncated_normal", "tensorflow.zeros", "tensorflow.nn.conv2d", "tensorflow.truncated_normal", "tensorflow.zeros", "tensorflow.nn.conv2d", "tensorflow.truncated_normal", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.truncated_normal", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.truncated_normal", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.get_default_session.run", "tensorflow.Session", "tensorflow.get_default_session.run", "tensorflow.matmul", "tensorflow.nn.conv2d", "tensorflow.global_variables_initializer", "tensorflow.get_default_session.run"]], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/koregor@homatasks/Python_Basics.ipynb": {"API": [], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/GrigorDanielyan@tumo/led 2.ipynb": {"API": [[], [], [], "tensorflow.constant", "tensorflow.Variable", "tensorflow.constant", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.Session", "tensorflow.constant", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.train.GradientDescentOptimizer", "tensorflow.global_variables_initializer"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mailMerge@MailMerge/RenameCol.ipynb": {"API": [[], [], [], [], ["pandas.read_excel"]], "module": ["numpy", "fuzzywuzzy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/NikhilBhutani@MyFirstNeuralNetwork/dlnd-your-first-neural-network.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sarahmarshy@capstone-project/notebooks/Feature_Location.ipynb": {"API": [[], []], "module": ["xlrd", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CarsonLMH@Typeform-API/Task #1 - Typeform API.ipynb": {"API": ["requests.get", "requests.get.json", "requests.get", "pandas.io.json.json_normalize", "json.dumps"], "module": ["pandas", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Schmidt8181@Unit-3-Lesson-3.7-V2/Unit 3 Lesson 3.7.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jmendiola84@Pyber/Pyber.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/young2203@tensorflow_learn/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.group", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.python.ops.resources.initialize_resources", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.python.ops.resources.shared_resources", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CPSC585@perceptron-AnushreeAnkola/Assignment 3.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dan01c@Artistic-Style/codigo.ipynb": {"API": ["tensorflow.python.framework.ops.reset_default_graph", "tensorflow.Session", "tensorflow.placeholder", "numpy.array", "tensorflow.Session.run", "tensorflow.placeholder", "numpy.array", "tensorflow.Variable", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.l2_loss", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.Session.run", "numpy.mean", "tensorflow.Session.run", "numpy.reshape", "tensorflow.random_normal", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.reduce_prod", "tensorflow.reduce_prod", "tensorflow.nn.l2_loss", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "numpy.matmul", "tensorflow.matmul", "tensorflow.Variable.get_shape", "tensorflow.Variable.get_shape", "tensorflow.Session.run", "numpy.transpose", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.l2_loss", "tensorflow.transpose", "tensorflow.constant", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.nn.l2_loss", "tensorflow.Session.run"], "module": ["numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rlhez@sony/Sony.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/bkabbaj@FilRougeKelkoo/Notebook exploration logs kelkoo.ipynb": {"API": [], "module": ["matplotlib", "pymongo", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rupesh20@SolarPredictionNN/WeatherPrediction/Solar Predicition.ipynb": {"API": [[], [], ["requests.get"]], "module": ["requests", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/maxwang88@RNN/RNN_project.ipynb": {"API": [["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "numpy.array", "numpy.array", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.Activation"]], "module": ["keras", "numpy", "tensorflow", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Scstechr@D-WiSE_LT/180301/Numpy_and_Python_Crash_Course.ipynb": {"API": [[], [], ["numpy.random.randn", "matplotlib.pyplot.hist", "matplotlib.pyplot.show"], ["numpy.random.rand", "matplotlib.pyplot.hist", "matplotlib.pyplot.show"], ["numpy.array"], ["numpy.random.normal", "matplotlib.pyplot.hist", "matplotlib.pyplot.show"], [], [], ["numpy.array", "numpy.zeros"], ["numpy.arange"], [], ["numpy.zeros"], ["numpy.arange", "numpy.zeros", "numpy.random.choice", "matplotlib.pyplot.hist", "matplotlib.pyplot.show"], ["numpy.array", "numpy.zeros"], [], ["numpy.array", "numpy.zeros"], [], []], "module": ["matplotlib", "numpy", "sympy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/linamurady@ml2_labs/lab3/lab3.ipynb": {"API": [], "module": ["torch", "IPython", "scipy", "torchvision"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/savvaser@Data-Analysis-Project-Analyzing-Thanksgiving-Dinner/Basics.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/endere@machine_learning/Analyze a Data Set.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sunqhe@pytorch/01_basic.ipynb": {"API": [], "module": ["torch", "numpy", "torchvision", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/GuilhermeFreire@primality/A study on the primality of numbers.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/wandarinca@Python_Data/Another example.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/raviduttac@First/4_Python_Simple_Decision_Tree.ipynb": {"API": [[], ["collections.Counter", "collections.defaultdict", "collections.defaultdict", "collections.Counter", "collections.defaultdict", "collections.Counter", "collections.defaultdict.items", "math.log", "collections.Counter.most_common", "operator.itemgetter", "collections.Counter.most_common"]], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/fishpm-anu@SWC_ANU_2016/ecology.ipynb": {"API": [[], ["pandas.read_csv"]], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/huyanmingtoby@Path_Planning/graph_search.ipynb": {"API": ["numpy.zeros", "matplotlib.pyplot.imshow"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/korenmiklos@bootcamp17/doglott-cegek.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ZhenqiangSun@show-me-the-code/PCA-MNIST.ipynb": {"API": [], "module": ["tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/askarthikkumar@genreRek/load.ipynb": {"API": [], "module": ["utils", "matplotlib", "pandas", "numpy", "librosa"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mmcodesso@Udacity_DLND_Projet1/DLND Your first neural network Mauricio 2 Edicao.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ksrnvsn2@MP7_Collatz/Collatz Conjecture.ipynb": {"API": [], "module": ["matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/yasincidem@PandasSeriesTutorial/PandasSeries.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/R1421@MachineLearning/Exploration.ipynb": {"API": [["gzip.open", "cPickle.load"], []], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sVujke@css17/stefan_vujovic_ass1.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas", "numpy", "networkx"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/persimmones@dlnd_first_neural_network/dlnd-your-first-network/dlnd-your-first-neural-network.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/drasros@unrolled_gan_demo/unrolled_gan_demo.ipynb": {"API": [], "module": ["matplotlib", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/imarranz@python-tricks/python_style.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/javiergomezg@algoritmos-rapidos/Proyecto 2 v1-Copy1.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/carlosbkm@Line-detection/Road lines color selection.ipynb": {"API": [["matplotlib.image.imread", "numpy.copy", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show"], "matplotlib.image.imread", "numpy.copy", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show"], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/HackTheStacks@MineForSpecimens/testing.ipynb": {"API": [[], []], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/chapman-cs510-2017f@cw-06-seongandkynan/critique-seongandkynan-alyandcyndi.ipynb": {"API": [["numpy.linspace", "numpy.linspace", "numpy.meshgrid", "pandas.DataFrame", "numpy.vectorize"], ["cplane_np.ArrayComplexPlane", "cplane_np.ArrayComplexPlane", "cplane_np.ArrayComplexPlane.apply", "cplane_np.ArrayComplexPlane", "cplane_np.ArrayComplexPlane.apply", "cplane_np.ArrayComplexPlane.apply", "cplane_np.ArrayComplexPlane", "cplane_np.ArrayComplexPlane.apply", "cplane_np.ArrayComplexPlane.apply", "cplane_np.ArrayComplexPlane.zoom", "cplane_np.ArrayComplexPlane", "cplane_np.ArrayComplexPlane.apply", "cplane_np.ArrayComplexPlane.apply", "cplane_np.ArrayComplexPlane.refresh"], []], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Silvidheer@DataScience_Numpy2Assignment7.1/Assignment 7.1.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ttamayo@Tech_synesthesia/Day1_Synesthesia/RGB_and_Synesthesia.ipynb": {"API": [[], [], ["numpy.zeros", "numpy.array", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.array", "numpy.zeros", "numpy.zeros", "pandas.read_csv", "scipy.interpolate.splrep", "scipy.interpolate.splev", "numpy.reshape", "numpy.reshape", "numpy.dot", "numpy.zeros", "numpy.float64", "numpy.float", "numpy.float", "numpy.float", "numpy.float", "numpy.float", "numpy.float", "numpy.float"], ["numpy.zeros", "numpy.array", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.array", "numpy.zeros", "numpy.zeros", "pandas.read_csv", "scipy.interpolate.splrep", "scipy.interpolate.splev", "numpy.reshape", "numpy.reshape", "numpy.dot", "numpy.zeros", "numpy.float64", "numpy.float", "numpy.float", "numpy.float", "numpy.float", "numpy.float", "numpy.float", "numpy.float"]], "module": ["matplotlib", "pandas", "numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alephcero@urbanMobilityObservatory/analisis - copia.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/josuearana@Taller-de-lectura-y-procesamiento-de-datos-basico/TallerETVL_ Josu\u00e9 Arana.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/taylorsjones@taylorsjones.github.io/mountain3.ipynb": {"API": ["ipywidgets.interact", "matplotlib.pyplot.subplot", "matplotlib.pyplot.plot", "matplotlib.pyplot.ylim", "matplotlib.pyplot.subplot", "matplotlib.pyplot.contourf", "matplotlib.pyplot.colorbar", "matplotlib.pyplot.show", "ipywidgets.IntSlider", "ipywidgets.FloatSlider"], "module": ["matplotlib", "ipywidgets", "pandas", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mlu68@PythonMonitor/ts_monitor.ipynb": {"API": [["matplotlib.pyplot.style.use", "numpy.linspace", "numpy.array", "numpy.array", "statsmodels.tsa.arima_process.arma_generate_sample", "matplotlib.pyplot.subplots", "pandas.DataFrame", "pandas.DatetimeIndex", "statsmodels.api.tsa.seasonal_decompose", "statsmodels.api.tsa.seasonal_decompose.plot", "matplotlib.pyplot.show", "warnings.filterwarnings", "statsmodels.api.tsa.statespace.SARIMAX", "statsmodels.api.tsa.statespace.SARIMAX.fit", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "pandas.DataFrame", "numpy.reshape", "pandas.DataFrame.std", "numpy.where", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "itertools.product", "itertools.product", "statsmodels.api.tsa.statespace.SARIMAX", "statsmodels.api.tsa.statespace.SARIMAX.fit"]], "module": ["matplotlib", "statsmodels", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/luigiricard@HW1/LuigiRicardHW1.ipynb": {"API": [], "module": ["matplotlib", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/suszka@sns.boxplot/sns_boxplot_sort.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/minori111@coco-caption/cocoEvalCapDemo.ipynb": {"API": [[], [], [], [], [], ["os.path.dirname", "tempfile.NamedTemporaryFile", "tempfile.NamedTemporaryFile.write", "tempfile.NamedTemporaryFile.close", "subprocess.Popen", "os.remove", "os.path.abspath", "os.path.basename", "subprocess.Popen.communicate"], [], ["numpy.mean", "numpy.array", "numpy.array"], [], ["cider_scorer.CiderScorer", "cider_scorer.CiderScorer.compute_score"], ["collections.defaultdict", "copy.copy", "copy.copy", "collections.defaultdict", "numpy.log", "numpy.array", "numpy.array", "numpy.mean", "numpy.mean", "numpy.array", "collections.defaultdict", "numpy.log", "numpy.sqrt", "numpy.array", "math.isnan"], [], ["subprocess.Popen", "threading.Lock", "os.path.dirname", "os.path.abspath"], [], ["bleu_scorer.BleuScorer", "bleu_scorer.BleuScorer.compute_score"], [], [], ["os.path.dirname", "os.path.join", "tempfile.NamedTemporaryFile", "json.dump", "tempfile.NamedTemporaryFile.close", "tempfile.NamedTemporaryFile", "tempfile.NamedTemporaryFile.close", "os.path.join", "subprocess.check_call", "os.remove", "os.remove", "numpy.mean", "os.path.abspath", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "json.load", "numpy.array", "os.path.dirname", "os.path.abspath"]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pycckuu@non-api-twitter-parser/visualisation.ipynb": {"API": [[], []], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Derekwwx@leetcode_python/022. Generate Parentheses.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/iamsiter@FastMap-algorithm-in-Python/FastMapUpdated.ipynb": {"API": ["matplotlib.pyplot.subplots", "matplotlib.pyplot.show", "math.sqrt", "math.pow", "math.pow", "math.pow", "math.pow", "math.pow"], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/rajarshikhare@floyd_hub/convolutional neural network.ipynb": {"API": [["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.models.Sequential.fit_generator", "keras.models.Sequential.save_weights", "keras.preprocessing.image.load_img", "keras.preprocessing.image.img_to_array", "numpy.expand_dims", "keras.models.Sequential.predict", "keras.layers.Convolution2D", "keras.layers.MaxPooling2D", "keras.layers.Convolution2D", "keras.layers.MaxPooling2D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Dense"]], "module": ["keras", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mihkell@neural_network/dlnd-your-first-neural-network.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/adamdempsey90@QuadTreeAMR/notebook/QuadTreeAMR.ipynb": {"API": [["h5py.File", "h5py.File", "numpy.isclose"], ["h5py.File", "numpy.array", "matplotlib.colors.Normalize", "matplotlib.patches.Rectangle", "numpy.zeros", "numpy.sqrt", "numpy.argsort", "matplotlib.pyplot.subplots", "h5py.File", "numpy.array", "matplotlib.collections.PatchCollection", "matplotlib.collections.PatchCollection", "DataClass.Sim"], []], "module": ["matplotlib", "h5py", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ishaankalsi@ml_stem_analysis/RedInc_work_stage_1.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/liviu-@datavis/billboard_100/notebooks/visualisation.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AmartyaCSB@Intro/Solution to Qn1.ipynb": {"API": ["pandas.ExcelFile", "pandas.read_excel", "pandas.read_excel", "pandas.merge", "pandas.merge.drop"], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/slimkaki@APS_4_dadosdp2018/Aula12 Atividade Modelos probabil\u00edsticos discretos(1) (1) (1).ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/SageCode@Class_Code-2/4.5.1.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cirpue49@sdcnd_t2_p3/data-exploration.ipynb": {"API": [], "module": ["matplotlib", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nafseerk@gaussian-processes/gaussian_process.ipynb": {"API": [["numpy.array.reshape", "numpy.array.reshape", "numpy.array.reshape", "numpy.array.reshape", "numpy.array.reshape", "numpy.array.reshape", "numpy.exp", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.matmul", "numpy.transpose", "numpy.linalg.norm", "numpy.matmul", "numpy.transpose"], ["kernels.PolynomialKernel", "data_loader.DataLoader.load_dataset", "pprint.pprint", "kernels.PolynomialKernel", "data_loader.DataLoader.load_dataset", "pprint.pprint", "data_loader.DataLoader.load_dataset", "numpy.array.reshape", "pprint.pprint", "data_loader.DataLoader.load_dataset", "numpy.array.reshape", "data_loader.DataLoader.load_dataset", "numpy.array.reshape", "data_loader.DataLoader.load_dataset", "numpy.array.reshape", "kernels.IdentityKernel", "data_loader.DataLoader.load_full_dataset", "kernels.GaussianKernel", "data_loader.DataLoader.load_full_dataset", "kernels.PolynomialKernel", "data_loader.DataLoader.load_full_dataset", "pandas.concat", "numpy.empty", "pandas.concat.iterrows", "numpy.linalg.inv", "numpy.array", "numpy.reshape", "numpy.transpose", "numpy.array", "pandas.DataFrame", "pprint.pprint", "kernels.IdentityKernel", "pandas.concat.append", "pandas.concat.iterrows", "numpy.add", "numpy.matmul", "time.time", "time.time", "numpy.array.append", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.reshape.append", "numpy.matmul", "numpy.subtract", "numpy.identity", "numpy.matmul", "numpy.matmul"], ["pandas.read_csv", "pandas.read_csv", "pandas.concat", "pandas.concat", "pandas.concat", "pandas.concat"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mirzaevinom@fitness_landsace_abm/abm_demo.ipynb": {"API": [["seaborn.set", "numpy.zeros", "numpy.zeros", "numpy.zeros", "networkx.hypercube_graph", "networkx.spectral_layout", "networkx.draw_networkx_nodes", "networkx.draw_networkx_edges", "networkx.draw_networkx_labels", "numpy.arange", "numpy.transpose", "numpy.zeros", "numpy.zeros", "matplotlib.pyplot.figure", "matplotlib.gridspec.GridSpec", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.figure.add_subplot", "moviepy.editor.VideoClip", "matplotlib.pyplot.close", "numpy.sum", "numpy.repeat", "numpy.repeat", "numpy.random.rand", "numpy.bincount", "numpy.bincount", "numpy.random.permutation", "numpy.sum", "numpy.random.normal", "numpy.int_", "numpy.random.normal", "numpy.int_", "numpy.zeros", "numpy.random.permutation", "numpy.array", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplot", "scipy.stats.entropy", "scipy.stats.entropy", "matplotlib.pyplot.suptitle", "moviepy.video.io.bindings.mplfig_to_npimage", "numpy.ones", "numpy.arange", "numpy.random.rand", "numpy.arange", "numpy.sum", "numpy.bincount", "numpy.int_", "numpy.arange", "numpy.max", "networkx.spectral_layout.items", "numpy.arange", "numpy.arange", "numpy.sort", "numpy.random.choice", "numpy.bincount", "numpy.nanmax", "numpy.nanmax", "numpy.random.rand", "numpy.random.choice", "numpy.sum", "numpy.sum"]], "module": ["matplotlib", "scipy", "seaborn", "numpy", "networkx", "moviepy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/brenanstewart@FIN-5350/Homework 1/NuggetProblem.ipynb": {"API": [[]], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/elbertwang3@calaccessdata/Untitled3.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/meteor-man@visualization/Assignment4.ipynb": {"API": [["matplotlib.use", "seaborn.set", "matplotlib.pyplot.get_current_fig_manager.window.raise_", "matplotlib.pyplot.show", "seaborn.boxplot", "seaborn.despine", "seaborn.factorplot", "seaborn.factorplot.set_ylabels", "seaborn.distplot", "pandas.read_csv", "matplotlib.pyplot.get_current_fig_manager"]], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/jjuhn@json_exercises/sliderule_dsi_json_exercise.ipynb": {"API": [], "module": ["pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/mlee0416@Python-Pandas-Uber-Analysis/Pyber.ipynb": {"API": [], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/noelroy@ML-Internship/Assignment1/Assignment1.ipynb": {"API": [["numpy.arange", "numpy.arange.reshape", "numpy.log", "numpy.apply_along_axis", "numpy.argmin", "numpy.random.randint", "numpy.zeros", "numpy.random.rand", "numpy.random.rand", "numpy.array_equal", "numpy.average", "numpy.abs", "numpy.sort"], ["pandas.read_csv", "pandas.read_csv", "pandas.read_csv.join", "matplotlib.pyplot.show", "pandas.pivot_table"], ["pandas.read_csv", "pandas.plotting.scatter_matrix", "matplotlib.pyplot.show", "numpy.array", "numpy.sort", "numpy.array", "numpy.empty", "pandas.read_csv.groupby", "pandas.read_csv.corr", "pandas.read_csv.to_csv", "pandas.read_csv.head", "numpy.mean", "matplotlib.pyplot.title", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.std", "numpy.unique", "pandas.read_csv.unique"]], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/cavaunpeu@single-neuron-gradient-descent/single-neuron-gradient-descent.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/watawafel@HPC/IBM/TensorFlow-Examples/notebooks/2_BasicModels/logistic_regression.ipynb": {"API": [["os.path.join", "numpy.uint32.numpy.dtype.newbyteorder", "numpy.frombuffer", "numpy.zeros", "os.path.exists", "os.mkdir", "os.path.exists", "urllib.urlretrieve", "os.stat", "gzip.open", "numpy.frombuffer", "numpy.arange", "gzip.open", "numpy.frombuffer", "numpy.dtype", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply", "numpy.arange", "numpy.random.shuffle"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.arg_min", "tensorflow.global_variables_initializer", "tensorflow.abs", "tensorflow.Session", "tensorflow.add", "tensorflow.negative", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss", "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.group", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.python.ops.resources.initialize_resources", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams", "tensorflow.python.ops.resources.shared_resources", "tensorflow.Session.run"], ["numpy.asarray", "numpy.asarray", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.global_variables_initializer", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Session", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "numpy.asarray", "numpy.asarray", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show", "tensorflow.pow", "tensorflow.train.GradientDescentOptimizer", "tensorflow.reduce_sum", "tensorflow.pow"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.contrib.factorization.KMeans", "tensorflow.contrib.factorization.KMeans.training_graph", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.Session.run", "tensorflow.Session.run", "numpy.zeros", "tensorflow.convert_to_tensor", "tensorflow.nn.embedding_lookup", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session.run", "numpy.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session.run", "tensorflow.argmax"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.device", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "time.time", "numpy.mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.equal", "tensorflow.reduce_mean", "time.time", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], ["numpy.random.rand.astype", "numpy.random.rand.astype", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.placeholder", "tensorflow.device", "tensorflow.add_n", "tensorflow.Session", "numpy.random.rand", "numpy.random.rand", "tensorflow.matmul", "tensorflow.ConfigProto", "tensorflow.ConfigProto"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.train.Saver.save", "tensorflow.Session", "tensorflow.train.Saver.restore", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.train.AdamOptimizer", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.name_scope", "tensorflow.nn.softmax", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary", "tensorflow.log"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.global_variables_initializer", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.trainable_variables", "tensorflow.summary.merge_all", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.summary.histogram", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.train.GradientDescentOptimizer", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.name_scope", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.trainable_variables", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval", "tensorflow.trainable_variables", "tensorflow.get_default_graph", "tensorflow.get_default_graph.add_summary"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.add", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.log", "numpy.random.uniform", "numpy.random.uniform", "numpy.reshape", "tensorflow.log", "tensorflow.log", "numpy.reshape", "tensorflow.sqrt", "numpy.repeat"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.add", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal.get_shape"], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.stack", "tensorflow.transpose", "tensorflow.gather", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.train.GradientDescentOptimizer", "random.randint", "tensorflow.range", "random.random", "random.randint", "random.randint"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.contrib.rnn.static_bidirectional_rnn", "tensorflow.matmul", "tensorflow.contrib.rnn.static_bidirectional_rnn"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.estimator.Estimator", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.train", "tensorflow.estimator.inputs.numpy_input_fn", "tensorflow.estimator.Estimator.evaluate", "tensorflow.argmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.metrics.accuracy", "tensorflow.estimator.EstimatorSpec", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.estimator.EstimatorSpec", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.train.get_global_step", "tensorflow.cast"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.pow", "tensorflow.Session", "numpy.empty", "numpy.empty", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "matplotlib.pyplot.figure", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.train.RMSPropOptimizer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.random_normal", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.random_normal", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "numpy.linspace", "numpy.linspace", "numpy.empty", "matplotlib.pyplot.figure", "numpy.meshgrid", "matplotlib.pyplot.imshow", "matplotlib.pyplot.show", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.log", "tensorflow.log", "tensorflow.square", "numpy.array", "tensorflow.sqrt"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.unstack", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.static_rnn", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.Session", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.Session", "tensorflow.nn.softmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast.eval"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables_initializer", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.Session", "matplotlib.pyplot.subplots", "matplotlib.pyplot.draw", "matplotlib.pyplot.waitforbuttonpress", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.nn.sigmoid", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.layers.conv2d", "tensorflow.nn.tanh", "tensorflow.layers.average_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.tanh", "tensorflow.layers.dense", "numpy.reshape", "numpy.random.uniform", "numpy.concatenate", "numpy.ones", "numpy.random.uniform", "numpy.reshape", "numpy.ones", "numpy.zeros", "numpy.repeat"], ["tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.add", "tensorflow.multiply", "tensorflow.constant", "tensorflow.constant", "tensorflow.matmul", "tensorflow.Session", "tensorflow.Session", "tensorflow.Session"], ["tensorflow.constant", "tensorflow.Session", "tensorflow.Session.run"], ["tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.train.Saver", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.train.batch", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.cast", "tensorflow.cast", "tensorflow.Session", "tensorflow.train.start_queue_runners", "tensorflow.train.Saver.save", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "tensorflow.nn.softmax", "os.path.join", "tensorflow.convert_to_tensor.append", "tensorflow.convert_to_tensor.append", "os.walk", "os.path.join", "os.walk", "os.walk", "os.walk"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.Session", "tensorflow.contrib.data.Dataset.from_tensor_slices", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session.run", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.layers.dropout", "tensorflow.layers.dense", "tensorflow.Session.run", "tensorflow.Session.run", "tensorflow.nn.softmax", "tensorflow.Session.run", "tensorflow.Session.run"], [], [], [], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.train.GradientDescentOptimizer.minimize", "tensorflow.InteractiveSession", "tensorflow.global_variables_initializer.run", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.InteractiveSession.run", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.InteractiveSession.run", "tensorflow.train.GradientDescentOptimizer", "tensorflow.global_variables_initializer"], ["tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reshape", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.nn.dropout", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.InteractiveSession", "tensorflow.InteractiveSession.run", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.matmul", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "tensorflow.global_variables_initializer", "tensorflow.train.AdamOptimizer.run", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.matmul", "tensorflow.train.AdamOptimizer", "tensorflow.cast.eval", "tensorflow.cast.eval"], [], "tensorflow.examples.tutorials.mnist.input_data.read_data_sets", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.global_variables_initializer", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.train.GradientDescentOptimizer", "tensorflow.log"], "module": ["matplotlib", "numpy", "tensorflow", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/nix1228@Pyber/Pyber.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/annye@TV-Marketing-Campaign-Analysis-/Sky Marketing Campaign Analysis.ipynb": {"API": [], "module": ["matplotlib", "numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/AnatoliiPotapov@dmbf_bioinf_autumn2016/GC/GC.ipynb": {"API": [[], [], ["numpy.zeros", "numpy.zeros"], [], [], ["numpy.array"], ["numpy.zeros", "numpy.array", "numpy.sum", "numpy.array", "numpy.array"], ["numpy.zeros", "numpy.zeros"], ["numpy.array"], [], ["sys.exit"], ["blosum.Matrix", "numpy.zeros", "numpy.zeros", "numpy.where", "blosum.Matrix.lookup_score", "blosum.Matrix.lookup_score"], [], ["sys.exit"], ["blosum.Matrix.Matrix", "numpy.zeros", "numpy.array", "numpy.array", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "scipy.weave.inline", "numpy.where", "blosum.Matrix.lookup_score"], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "argparse.ArgumentParser.print_help", "re.sub"], ["lcs.SuffixTree", "lcs.SuffixTree.find_longest_common_substrings", "lcs.SuffixTree.append_string"], [], ["numpy.zeros"], ["copy.deepcopy"], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "argparse.ArgumentParser.print_help", "re.sub"], ["lcs.SuffixTree", "lcs.SuffixTree.append_string"], ["sys.exit"], ["blosum.Matrix", "numpy.zeros", "blosum.Matrix.lookup_score"], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "argparse.ArgumentParser.print_help", "re.sub"], ["bisect.bisect_left", "bisect.bisect_left"], []], "module": ["numpy", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/buckleylab@Buckley_lab_protocols/GCMS/GCMS_data_processing.ipynb": {"API": [], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dkrathi457@Dense-Trajectory-Lstm/DT-LSTM.ipynb": {"API": [["csv.reader", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show"], ["csv.reader", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.pyplot.legend", "matplotlib.pyplot.show"], ["keras.callbacks.ModelCheckpoint", "keras.callbacks.TensorBoard", "keras.callbacks.EarlyStopping", "time.time", "keras.callbacks.CSVLogger", "scipy.io.loadmat", "scipy.io.loadmat", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.optimizers.Adam", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "numpy.array", "numpy.array", "keras.layers.recurrent.LSTM", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Dropout", "keras.layers.Dense", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical"], []], "module": ["matplotlib", "scipy", "keras", "pandas", "numpy", "tensorflow"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/akshaykarangale@AV_The_Ultimate_Student_Hunt/the_ultimate_student_hunt.ipynb": {"API": [], "module": ["statsmodels", "numpy", "xgboost", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/pizzameng@Donors/Doner.ipynb": {"API": ["pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "matplotlib.pyplot.figure", "matplotlib.pyplot.title", "seaborn.barplot", "pandas.read_csv.groupby"], "module": ["matplotlib", "numpy", "seaborn", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/biterman@dgii_salarios/dgii_salarios.ipynb": {"API": [["re.sub", "pandas.read_csv", "unidecode.unidecode"]], "module": ["matplotlib", "unidecode", "pandas", "scipy", "seaborn", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/blakegallay@likelihood-analysis/Likelihood-example/likelihood-example/myanalysis.ipynb": {"API": [[]], "module": ["matplotlib", "numpy", "tables", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/kevinlin19@pandas/dataframe_loc.ipynb": {"API": [], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/arapat@sparkboost/splice-site.ipynb": {"API": [["math.isnan"], ["matplotlib.pyplot.figure", "matplotlib.pyplot.xlim", "matplotlib.pyplot.plot", "matplotlib.pyplot.grid", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.legend", "matplotlib.pyplot.title", "operator.itemgetter", "operator.itemgetter"], [], ["matplotlib.pyplot.style.use", "matplotlib.pyplot.figure", "matplotlib.pyplot.figure.set_size_inches", "matplotlib.pyplot.figure.add_subplot", "matplotlib.transforms.offset_copy", "seaborn.despine", "matplotlib.pyplot.show", "matplotlib.transforms.offset_copy", "numpy.arange", "matplotlib.transforms.offset_copy", "operator.itemgetter", "operator.itemgetter"], [], ["matplotlib.pyplot.figure", "matplotlib.pyplot.grid", "matplotlib.pyplot.legend", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlim", "matplotlib.pyplot.ylim", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.axvline", "matplotlib.pyplot.axvline"]], "module": ["matplotlib", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/earcaira@first-python-notebook/textgen1.ipynb": {"API": [], "module": ["matplotlib", "ipywidgets", "pandas", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/lucasn123@CD_2017_2_Luca_Nascimento/APS 5/APS5_alunos.ipynb": {"API": [], "module": ["matplotlib", "numpy", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/spike688023@Python-for-Algorithms--Data-Structures/Algorithm Pratice.ipynb": {"API": [["nose.tools.assert_equal", "nose.tools.assert_equal", "nose.tools.assert_equal"], [], ["nose.tools.assert_equal", "nose.tools.assert_equal", "nose.tools.assert_equal"], [], [], ["nose.tools.assert_equal", "nose.tools.assert_equal", "nose.tools.assert_equal", "nose.tools.assert_equal", "nose.tools.assert_equal"], ["nose.tools.assert_equal", "nose.tools.assert_equal", "nose.tools.assert_equal", "nose.tools.assert_equal"], [], ["ctypes.py_object.new_cap"], [], [], []], "module": ["nose", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/zitterbewegung@dmc-hackathon/dataproc.ipynb": {"API": [[], [], ["flask.Flask", "flask.Flask.route", "flask.Flask.route", "flask.Flask.route", "flask.Flask.run", "json.loads"]], "module": ["flask", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/CastleCC@Meachine-Learning-Practice/Linear_Regression.ipynb": {"API": [], "module": ["matplotlib", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/casteer@Cockcroft-Walton-Calculator/Cockcroft-Walton.ipynb": {"API": ["math.floor", "math.sqrt"], "module": ["numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/hatsuneping@HW4Testing/notebooks/Class 3 - OOP_dice_graphics_threads.ipynb": {"API": [[], [], [], [], [], [], [], [], []], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/GPrietoLyon@Experimental/Tarea5/Tarea 5.ipynb": {"API": [["math.trunc", "math.modf", "math.trunc", "math.trunc", "math.trunc", "math.trunc", "math.modf", "math.modf", "math.modf", "math.modf", "math.trunc", "math.trunc", "math.trunc", "math.trunc", "datetime.timedelta", "math.trunc", "math.trunc", "datetime.timedelta"], ["requests.post", "tempfile.NamedTemporaryFile", "os.unlink", "numpy.reshape", "numpy.reshape", "numpy.vstack", "numpy.vstack.gaussian_kde", "scipy.stats.gaussian_kde.argsort", "matplotlib.pyplot.subplots", "matplotlib.pyplot.show", "requests.post.iter_lines", "scipy.stats.gaussian_kde", "astropy.io.votable.parse_single_table", "numpy.array", "numpy.array"]], "module": ["astropy", "matplotlib", "scipy", "numpy", "requests"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/Swanson-Hysell-Group@lab_protocols/Data_Analysis/create_vgp.ipynb": {"API": [["os.walk", "os.path.dirname", "pandas.read_fwf", "os.path.basename", "fnmatch.fnmatch", "pandas.DataFrame", "os.path.join"]], "module": ["numpy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/tamuleifan@DS_python/code-1/2w/\u7b2c2\u8bfe.ipynb": {"API": [[], [], []], "module": ["patsy", "matplotlib", "pandas", "scipy", "statsmodels", "numpy", "seaborn"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vkaynig@Data-Science/02 - Getting and Visualizing Data.ipynb": {"API": [], "module": ["keras", "numpy", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/ZhaochenZhan@Text-Accounting-SEC10K/Test project.ipynb": {"API": [], "module": ["matplotlib", "scipy", "pandas"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/luosaiyu@high_power_visible_laser/Calculation/Threshlod calculation/dual-wavelength emission from reference article/Threshold calculation - orange.ipynb": {"API": [[], [], [], ["distutils.core.setup", "distutils.extension.Extension"], [], [], ["distutils.core.setup", "distutils.extension.Extension"], [], [], ["distutils.core.setup", "distutils.extension.Extension"], [], [], [], [], [], [], [], [], [], [], [], [], [], []], "module": ["sympy", "scipy", "Cython", "numpy", "IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/alfaromurillo@sir_models_intro/SIR_models.ipynb": {"API": [], "module": ["matplotlib", "numpy", "ipywidgets", "scipy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/iczmind@advance5/py_exp_comp_adv5_sol-translated.ipynb": {"API": [], "module": ["matplotlib", "IPython", "numpy"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/dsc03@Trendiness_Influence_Yelp/Yelp+Time-Series+Analysis (2).ipynb": {"API": [], "module": ["IPython"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/sods@conference/Talks/image_processing_with_deep_learning/deep_learning_para_el_procesado_de_imagenes.ipynb": {"API": [["matplotlib.pyplot.figure", "matplotlib.gridspec.GridSpec", "matplotlib.pyplot.show", "keras.datasets.mnist.load_data", "keras.utils.to_categorical", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.layers.Dense", "matplotlib.pyplot.subplot", "matplotlib.pyplot.subplot.imshow", "matplotlib.pyplot.subplot.set_xticks", "matplotlib.pyplot.subplot.set_yticks", "keras.optimizers.RMSprop"]], "module": ["keras", "matplotlib"]}, "/mnt/fit-Knowledgezoo/Github_repos_download/data/vinhnd2010@televinbot/Sample.ipynb": {"API": [], "module": ["requests"]}}